
afterStartsystemPropertyRemovedsystemPropertiesClearedsystemPropertyChangeddisposeenvVariableReadsystemPropertyReaddependencyObservedonProjectReferencescopeForonTaskDependenciesAccess onBuildScopeListenerRegistrationonProjectAccessisInputTrackingDisabledisExecutingTaskinsertflush
unsafeLazyuseToRununcheckedCastwithremoveListeneraddListenersync
setVersion	setStatussetGroupgetConventiongetAntgetDescriptiongetSubprojectsgetAllprojectsgetBuildDirgetResourcesrelativeProjectPathafterEvaluatenormalizationgetDefaultTasksgetProjectDir
getObjectsgetAllTasksdepthCompareevaluationDependsOnChildrenconfigurationsgetPathevaluationDependsOnantgetDependencyFactorysubprojectsprovider	getLayout	getStatussetBuildDirgetTasksByNamecreateAntBuilderfindPropertybeforeEvaluategetNormalizationsetDefaultTasksgetTaskshasPropertygetChildProjectsgetBuildFilegetDepthabsoluteProjectPathgetState
initscriptregisterGradleServicesregisterBuildServicesregisterGlobalServices
stringListivytypeOfscriptDefinitionFromTemplatetextprojectsEvaluated$maybeUnwrapInvocationTargetException
isNotBlankparse	gradleApiignoringErrorsloaddefaultPackageTypesIngetClassesOutputDirgetSourcesOutputDirconvert
visitArray
visitField
isNullablecreateConstructorrecordfindClassDataloadClassAnnotationsresolveUpperBoundsgetDefaultType	isTailrec getTypeConstructorTypeParameters%getDefaultFunctionTypeForSamInterfaceisDefinitelyNotSamInterfacecomputeDescriptors$isRefinementNeededForTypeConstructor!findClassAcrossModuleDependencies
refineTypegetOrPutScopeForClassrefineSupertypesisRefinementNeededForModulerefineDescriptor
lowerBounderrorMessagegetAttributescanHaveUndefinedNullabilitymakeDefinitelyNotNullOrNotNullsingleBestRepresentativeisStarProjectionisInterfaceasSimpleTypewithNotNullProjectionasFlexibleTypetypeParameter(makeSimpleTypeDefinitelyNotNullOrNotNullisSignedOrUnsignedNumberType isStubTypeForVariableInSubtypingisUnittoAnnotations
createTypesafeCastcapacityrethrowreportsetOverriddenDescriptorsnewTypeCheckerStategetMethodNameslockcreatePackageFragmentProvidershouldCreateClasscreateClass"getAllContributedClassesIfPossiblegetFunctionsNamesisFunctionAvailableCharlineSequencetoComponentsreadLine	normalizecompactasStringsetRangedeleteAtdeleteRangeinsertRangeisLetterisLetterOrDigitisTitleCaseuppercaseCharisWhitespaceisDigitisUpperCaseisLowerCase	titlecaselowercaseCharisISOControl	isDefinedtitlecaseChartoRegexformatUpToDecimalsformatToExactDecimalsconvertDurationUnitOverflowconvertDurationUnitdecapitalize
capitalizeelapsedFromadjustReadingsdkIsNullOrAtLeastsetOwnerprintStackTracestackTraceToStringdoubleFromParts	nextBytescoshwithSignasinpowtansintruncateexpfloorceilsqrtlnnextTowardsasinhhypottanhsinhcosnextDownlog2atan2absacosnextUpacoshexpm1
roundToIntatanlog10roundToLongln1proundatanhcheckBuildScopedFingerprintcheckProjectScopedFingerprint
component9	serviceOfregisterTransformgetArtifactsgetComponents	getParentgetRepositoriesallprojects	getGradlefindProject
getVersion
getPluginsgetPluginManagergetConfigurationsgetDependencyLockinggetProvidersgetRootProjectgetExtensions
getRootDirgetGroupgetDependenciesdependencyLockingprojectgetPropertyinvokeMethodsetDescriptionmkdirzipTreecopySpecjavaexecexectarTreefilesfileurirelativePathfileTree	artifactsdefaultTaskstaskrepositories	containerdependenciessetPropertygetBuildscriptbuildscript	getLoggergetFileOperationsgetProcessOperations
getLogging	configure	writeFileof
component6
component8
component7pluginAccessorsForonScriptClassLoadedgetDisplayNamegetPropertiesvisitEndvisitAnnotationcheckcopyloadAnnotationDefaultValueloadPropertyConstant	getSourcecomputeSupertypestoAttributescasthasAnnotationconflictaddFakeOverridedefinitelyDoesNotContainNamegetFunctionNamesgetVariableNamesgetContributedClassifiergetContributedFunctionsgetContributedVariablesreplaceTypeisFinalgetBuiltInsgetTypecomputefindPackagecomputeDeclaredFunctionsbeforeChildrenresultgetSupertypesresolveerror
writeBytesgetOwnercopyTo
isInstancegetNamecalladdSuppresseddefaultPlatformRandom
enumValuescharArrayOf
intArrayOfbooleanArrayOflongArrayOfenumValueOfdoubleArrayOfshortArrayOfarrayOfbyteArrayOffloatArrayOfnextBoolean
nextDouble	nextFloat
emptyArrayrunclone3hackToForceKotlinBuiltinsForKotlinCoroutinesPackagenotsubSequence
buildCache
unaryMinus	unaryPlusushrtoCharcreateyieldAllyieldbinarySearchgetOrPutputAllputimpliescomputeNextcallsInPlacereturnsNotNullreturnsremoveAtarrayOfNullswindowedSequencesortDescendingtoByteArray	foldRightsortByuniontoBooleanArraysortByDescendingtakeLastslice
toIntArrayreduceRightsubtractfoldRightIndexedreduceRightIndexedOrNullreduceRightIndexed	getOrNull
component5	intersect
component3
component4
component2
component1takeLastWhiletoFloatArraydropLastWhiletoDoubleArrayreduceRightOrNulldropLasttoLongArraytoShortArraycreateCoroutineUninterceptedintercepted#startCoroutineUninterceptedOrReturncreateCoroutineresumeContinuationsuspendCoroutinestartCoroutineresumeWithExceptionsizeisSubKeygetPolymorphicElementminusPolymorphicKeytryCastinterceptContinuationreleaseInterceptedContinuation%suspendCoroutineUninterceptedOrReturnsourceIteratorkeyOfCancellationExceptionbeforeChangeafterChangecontainsescapefindAll	compareToprovideDelegatesetValuegetValuesigngetAnnotationsgetUpperBoundsgetAnnotationcallBygetMatchResultNamedGroupinvokeSuspendsequenceconstrainOnce
sequenceOfgenerateSequenceemptySequenceSequencenextNotReadyexceptionalStatenotNull
observablevetoable	buildListarrayListOfcheckIndexOverflow
rangeCheckoptimizeReadOnlyListMutableListthrowIndexOverflowthrowCountOverflow	emptyListasCollectionbinarySearchBylistOfNotNullmutableListOflistOfcheckCountOverflowbuildListInternalListfoldTo	aggregateeachCountToreduceToaggregateTowindowedIteratorcheckWindowSizeStepcontentDeepToStringImplcontentDeepEqualsImplcontentDeepToStringInternal	sortArray	quickSortforwardisFullexpandedgetOrElseNullablemapCapacitytoMutableMapfilterValuesemptyMapmutableMapOfbuildMapInternallinkedMapOfmapOf
filterKeys	hashMapOf	mapKeysTomapKeysoptimizeReadOnlyMaptoPairtoMap	mapValuesmapValuesTobuildMapwithDefaultnegativeModpositiveModaddLastinternalStructureinternalGetnewCapacitydecrementedcopyElementstestToArrayaddFirstcopyCollectionElementsinternalIndexincrementedcheckElementIndexcheckRangeIndexescheckPositionIndexorderedHashCodecheckBoundsIndexesorderedEqualscollectionSizeOrNullcollectionSizeOrDefaultIterableentryToStringcontainsEntryentryHashCodeentryEqualsimplFindEntrysetNextdonetryToComputeNexttitlecaseImplcontractmutableSetOfoptimizeReadOnlySetlinkedSetOfsetOfbuildSetInternal	hashSetOfemptySetsetOfNotNullbuildSetretainNothingasShortArrayasUByteArrayasByteArrayasUIntArrayasUShortArrayasULongArrayasLongArray
asIntArraytoSingletonMapOrSelfcopyToArrayImpltoSingletonMap	eachCountcopyToArrayOfAny"brittleContainsOptimizationEnabledsafeToConvertToSetconvertToSetForSetOperationWithconvertToSetForSetOperationtoShortExactOrNulltoByteExactOrNulltoLongExactOrNulltoIntExactOrNull	setEqualsunorderedHashCodechunkedSequencereversePositionIndex
asReversedreverseElementIndexmovenaturalOrderthenByDescendingreverseOrdercompareValuesBycompareValuesByImplthen	nullsLast	compareBycompareValuesthenDescendingthenBycompareByDescending
nullsFirstthenComparatortoUIntOrNulltoUByteOrNulltoULongOrNulltoUShortOrNullcontentDeepEqualscontentDeepHashCodecontentDeepToStringsortedArrayWithlazy	toRawBitsfromBitsisFinitetoBits
isInfiniteisNaNulongToStringdoubleToULonguintToDoubledoubleToUIntulongToDoubleuintCompareuintRemainderulongCompare
uintDivideulongRemainderulongDivideubyteArrayOf
UByteArrayushortArrayOfUShortArray	UIntArrayuintArrayOfprintlnreadlnOrNullreadlnprintnativeLastIndexOfregionMatchesisBlankfromLiteralnativeIndexOfmatchEntire
checkRadixrepeattoFloatOrNull	toBooleanencodeToByteArraydigitOfmatchAttoDoubleOrNullcontainsMatchInconcatToStringdecodeToStringescapeReplacement	matchesAtisLowSurrogateisHighSurrogateStringjvmregisterBuildSessionServicesregisterBuildTreeServicesclassloaderCreatedchildScopeCreatedmarkAccessed
baseDirForfileForchmodforKeywithOnDemandLockMode	stateFileincludedBuildFileForwithLruCacheCleanupwithExclusiveAccessToCachefileForReadsystemPropertyQueriedexternalProcessStartedenvVariableQueriedlocateBuilderForTarget	getTargetbeforeTasksfromBuildModelreadIncludedBuildStategetRelevantProjectsForaddNodesForChildBuilds$writeBuildOutputCleanupRegistrationsreadBuildStateconfigureBuildreadIncludedBuildDefinitionwriteIncludedBuildStatefireConfigureProjectfireLoadBuildwriteChildBuildsbuildEventListenersOf"readRootEventListenerSubscriptions#readBuildEventListenerSubscriptionsreadGradleStatereadProjectStateswriteBuildTreeStatereadRequiredBuildServicesOfreadRootBuildstoredBuildswriteStartParameterOf$writeBuildEventListenerSubscriptions!readGradleEnterprisePluginManager#readBuildOutputCleanupRegistrationswriteBuildCacheConfigurationreadCachedEnvironmentStatewriteBuildStatewriteCachedEnvironmentStatestateFileForworkNodeCodecwriteProjectRegistrationreadChildBuildsOfreadRootBuildStatewriteBuildDefinition"writeGradleEnterprisePluginManagerbuildServiceRegistrationOfbuildIdentifierOffireLoadProjectsreadWorkGraphwriteWorkGraphOf readRelevantProjectRegistrationsfireConfigureBuildisRelevantBuildEventListenerwriteProjectStateswriteGradleState!writeRelevantProjectRegistrationsrootBuildStateOfreadBuildTreeStatereadProjectRegistrationfireEvaluateSettingsreadStartParameterOfcalculateRootTaskGraph#writeRootEventListenerSubscriptionswriteRequiredBuildServicesOfwriteRootBuildStatewithLoadBuildOperationwriteRootBuildreadBuildCacheConfigurationwithStoreOperationwithLoadOperationwithOperationfillTheGapsOffinishBuildTreecomputeCachedStateconfigureProjectFromCachedStategetLoadedSettingsmaybeLoadFromCachecreateWorkPreparercreateModelCreatordisableForCurrentThreadrestoreForCurrentThreadisEnabledForCurrentThreadcreateRootProjectrootProjectDescriptorgetProjectDescriptorsettingsDircreateSettingscreateCrossProjectModelAccessservicesForBuildcreateLocalComponentRegistrycreateBuildLifecycleControllercreateProjectEvaluatorcreateGradleModelcreateBuildModelControllerstorereadContextForcollectRootDirsreaderContextForreadIncludedBuildStateFromwriterContextForwriteContextForreadModelFromwriteModelTowithReadContextForwriteCacheEntryDetailsTocodecsloggingTracerLogLevelreadRootBuildStateFromreadCacheEntryDetailsFromloggingTracerForwriteRootBuildStateToreadConfigurationCacheStatewriteIncludedBuildStateTorelativeChildPathOrNullappendRequestedTasksputCacheKeyComponentsisLocalProjectrelevantProjectsprojectStateOfgetComponent createBuildTreeWorkGraphPreparerregisterServicesisNotDisabledservicesForBuildTreeservicesForNestedBuildTree	loadModeldoneWithWorkunloadGradlePropertiesprepareConfigurationTimeBarrier"writeConfigurationCacheFingerprintcheckFingerprintsaveToCachereadFingerprintFiledetermineCacheActionloadWorkGraph	saveModel"runWorkThatContributesToCacheEntryloadFromCache'checkFingerprintAgainstLoadedPropertiescrossConfigurationTimeBarriersaveWorkGraph!registerWatchableBuildDirectoriesprepareForWork cacheFingerprintWriterContextFor!invalidateConfigurationCacheStateloadGradlePropertieslogBootstrapSummarystartCollectingCacheFingerprintvisitProjectslocateCachedValueloadOrCreateValuerestoreFromCacheEntrynewDetachedResolverbindAllModelRulesfireDeferredConfiguration getConfigurationTargetIdentifiergetParentIdentifiergetConfigurationActionsgetInternalStatusidentityPathgetBuildScriptSourcestepEvaluationListenergetIdentityPathaddRuleBasedPluginListenergetServiceRegistryFactoryaccessgetProjectEvaluationBroadcastergetDependencyMetaDataProvidergetModelRegistrygetStandardOutputCapturegetClassLoaderScopeisRootScriptgetBaseClassLoaderScopeprepareForRuleBasedPluginsgetFileResolvergetProjectPathisPluginContextgetServicesgetInheritedScope	setScriptonAccessisScriptgetBuildPathshouldNotBeUsedprojectPathaddDeferredConfigurationreadVariantIntowriteConfigurationsreadConfigurationsIntoconfigurationsToPersistreadVariantsIntoreadConfigurationIntowriteConfigurationwriteVariantwriteVariantswriteDependenciesreadDependenciesIntotaskPathFrompropertyDescriptionFortypeFromfirstTypeFromsimplePropertyDescriptionreadHtmlTemplaterequireResource	referencebeforeCompletecounteractionsummaryTextprojectStateStatsoutputDirectoryForhasTooManyProblemsrequestedTasksOrDefault#failingBuildDueToSerializationErrordiscardStateDueToProblemsconsoleComparatorendReportDatabeginHtmlReportendHtmlReportbeginReportDataquotedappendStringOfclickableUrlForappendSummaryHeaderbuildSummaryReportLinktextForConsolesingleThreadExecutoronInputmodifyStatemoveSpoolFileTocloseHtmlReportwriteReportFileTohtmlReportSpoolFileshutdownAndAwaitTermination
reportHashillegalStatecommitReportToonDiagnosticwritePropertyTracestackTraceStringOf
beginArrayjsonObjectListjsonList
beginModelkeyFordocumentationLinkForsimpleStringpropertyNameendModel	endObject
jsonObjectcommaendArraybeginObjectwriteFragment
jsonStringgetBroadcaster
toTrackingtoRestoringModesetModetoRestoringloadFromgetCachedStatetoTrackingModetoDefaultLowerCasefilterKeysByPrefixcapitalizedunsafeWritejvmFingerprint
consumedByvisitEntriesForProjectscountUpToDatePrefixOfcheckInitScriptsAreUpToDateentryForbuildLogicInputHasChangedcheckFingerprintValueIsUpToDate
invalidate
isUpToDatehasFileChangedstopCollectingFingerprintpausemaybeStartCollectingFingerprintcommitFingerprintTocommit#collectFingerprintForReusedProjects
maybeStartillegalStateForcloseStreams/reportUniqueEnvironmentVariablesPrefixedByInputreportUniqueFileInput)reportEnvironmentVariablesPrefixedByInputreportExternalProcessOutputReadbeforeValueObtained	inputFilereportSystemPropertyInputonChangingModuleResolvereportEnvironmentVariableInput%reportSystemPropertiesPrefixedByInput*addSystemPropertiesPrefixedByToFingerprintonChangingValuereportUniqueSystemPropertyInputreportValueSourceInputcaptureWorkInputsvalueObtainedlocationFor+reportUniqueSystemPropertiesPrefixedByInputreportUniqueValueSourceInputsimplifyaddEnvVariableToFingerprintafterValueObtainedonDynamicVersionSelectioncaptureFile	onExecute&addEnvVariablesPrefixedByToFingerprint$reportUniqueEnvironmentVariableInputsinkinitScriptsreportFileInputaddSystemPropertyToFingerprintenterleave	readScopeinitProjectProviderfinishreadHashCodeinitClassLoaderreadMapInto	reentrantreadListdecodeUsingJavaSerialization	singletonwriteCollectionreadClassPath	readArrayreadClassArraycodecreadCollectionInto
writeArrayreadFilewriteMapEntriesreadStringswriteStringsreadCollectionwriteClassPathencodeUsingJavaSerializationwriteClassArrayreadMapEntriesIntowriteMapreadEnum	writeEnumreadClassOfownerServicenextSequenceNumber
getIsolategetCodec
writeScopewriteHashCodewriteStringlogNotImplementedlogPropertyProblemlogUnsupportedwithDebugFramegetInstance
decodeBeanwithImmediateModewithGradleIsolatewithBeanTracedecodePreservingIdentityencodePreservingIdentityOfdecodePreservingSharedIdentity encodePreservingSharedIdentityOfreadNonNullwithIsolate
encodeBean	withCodecrunWriteOperationrunReadOperationrunToCompletioncanReadSystemPropertycanReadFilescanReadEnvironmentVariableisIgnoredBeanFieldcanStartExternalProcessesisBuildScanPluginwithWorkaroundsFor shouldDisableInputWorkaroundsForisEnterpriseConventionsPlugin	maybeInitnewConstructorForSerializationconstructorForSerializationconventionValueOfdebugFrameNamegetConventionValuereadPropertyValuewriteNextPropertynewBeanWithIdapplyConventionMappingTorelevantTypeHierarchyOfrelevantStateOfisNotAbstractTaskFieldunsupportedFieldTypeFormakeAccessiblereportUnsupportedFieldTypeisRelevantDeclaringClassconventionAwareFieldsOfrelevantFieldsOfdependenciesForserviceTypeproducerForSubtypesOfbindreadAttributeValuewriteAttributeswriteAttributeValuereadManagedreadAttributewriteManagedwriteAttributereadAttributesUsingcannotCreateSpecFortoSpecfromSpectoSpecOrNull
rootSpecOftaggedEncodingForcomputeEncodingreadPatternSetwritePatternSetwriteRegisteredPropertiesOfreadRegisteredPropertiesOfreadInputPropertiesOfcollectRegisteredInputsOf
withTaskOfpackcollectRegisteredOutputsOfreadOutputPropertiesOf
createTasktransformedExternalArtifactstransformedProjectArtifactswriteSuccessorReferences
writeNodeswriteNodeGroupwriteSuccessorReferencesOf	writeWork	readNodesreadSuccessorReferencesreadNodeGroupreadSuccessorReferencesOfreadWorkreadNodeunsupportedTypesgetTransformscollectionCodecmapCodecoverridesHashCode-readCollectionCheckingForCircularElementsInto*writeCollectionCheckingForCircularElementsgetSourceVariantgetTargetAttributesgetTransformationStepgetTransformationjavaTimeTypesuserTypesCodecworkNodeCodecForinternalTypesCodec	baseTypesproviderTypesfileCollectionTypesbuildServiceRegistryOfgetFailuresgetResolvedArtifactsgetArtifactFilesvisitArtifactsencodeProviderdecodeValuedecodeProviderencodeValuewriteEnumValueOfreadTaskreadUpToDateSpecwriteUpToDateSpecreadDestroyablesOfwriteRegisteredServicesOfwriteDestroyablesOf	writeTaskreadReasonNotToTrackStatereadLocalStateOfwriteLocalStateOfreadRegisteredServicesOfwriteReasonNotToTrackStatevisitFailurerequireArtifactFilesvisitArtifactendVisitCollectiondecodeValueSourceencodeValueSourceunsupportedFileTreegetAllVariantsasTransformedgetVariantsasDescribable	getSchemagetOverriddenAttributesgetCapabilitiesgetIdentifiergetComponentId
readBeanOfwriteBeanOffirstMatchingMethodOrNull#firstAccessibleMatchingMethodOrNull
allMethodswriteBooleanuseProtocolVersion	writeBytewriteIntplayback	writeCharwriteUTFwriteFieldsdefaultWriteObjectwriteObjectOverride
writeChars	putFieldswriteUnshared	writeLongwriteObjectMethodHierarchyFromwriteReplaceMethodFromcalculateEncodingencodingForwriteReplaceEncodingForreadResolveMethodFromreadResolveEncodingForwriteObjectEncodingForreadObjectEncodingForserializationMethodHierarchy	failedJOS	invokeAlldecodingBeanWithIdputIdentityreadObjectMethodHierarchyFromisReadResolve
readNBytesreadLongreadUnsharedregisterValidationskipreadAllBytesreadObjectOverride
readFieldsreadInt	available	readFullyreadUTFreadUnsignedShortreadUnsignedBytedefaultReadObjectreadCharmarkSupported	skipBytes
transferTomarkreadBooleanreadByte	forObjectforClass$readObjectMethodHierarchyForDecodingobjectInputStreamAdapterForrecordWritingOfunpackTransformationStepsunpackTransformationStepfinalizeNowstartFinalizationrecreatelastSegmentgetTransformonTaskExecutionAccessProblematConfigurationTimeisBuildSrcBuildpropertyTraceForTasklistenerRegistrationProblemonExternalProcessStartedproblemsListenerForonUnsafeCredentials!isStableConfigurationCacheEnabledrunCallLoopcrossFunctionCompletionexceptionOrNullsuccessfailurelazyOf
ULongArrayulongArrayOf	isAtLeast	versionOfsuspendcheckNotNullrequirerequireNotNull	onSuccessmapCatchingthrowOnFailure	onFailurerecoverCatchingrunCatchingcreateFailurerecoverto
takeUnlessletTODOtakeIfalso
nextUBytes	nextULongcheckULongRangeBoundsnextUIntcheckUIntRangeBoundsRandomboundsErrorMessagetakeUpperBitsfastLog2checkRangeBoundscheckStepIsPositive	invariant	covariantcontravariantmeasureTimedValuemeasureTimeoverflowmillisToNanosdurationOfNanos
durationOf
toDurationsubstringWhiledurationOfNanosNormalizeddurationOfMillis	skipWhileparseDurationnanosToMillisparseOverLongIsoComponentdurationOfMillisNormalizeddurationUnitByShortName	shortNamedurationUnitByIsoCharsaturatingDiffsaturatingAddInHalvessaturatingAddcheckInfiniteSumDefinedsecondsparseIsoStringmicrosecondshoursminutesdaysnanosecondsappendFractionaltoLongNanosecondsparseIsoStringOrNull	isInNanostoLongMilliseconds
isPositive
isInMillis
isNegativeaddValuesMixedRangesparseOrNullmillisecondstoIsoStringappendElementbuildStringnumberFormatErrortoLongOrNulltoShortOrNulltoByteOrNulltoIntOrNullreplaceIndentByMargin
trimMarginreindent
trimIndentgetIndentFunctionindentWidthreplaceIndentreplaceBeforetrimEndcontentEqualsIgnoreCaseImplcommonPrefixWithregionMatchesImplsubstringBeforeremovePrefix	findAnyOfremoveSuffixlinesrequireNonNegativeLimitpadEndreplaceBeforeLastifBlankreplaceFirstCharsubstringAfterLast
indexOfAnycontentEqualsImplremoveRangeisNullOrBlankreplaceAfterLastremoveSurrounding	trimStartpadStartreplaceAftertrimtoBooleanStrictOrNulltoBooleanStrictfindLastAnyOfsubstringAftercommonSuffixWithrangesDelimitedByreplaceRangehasSurrogatePairAtsubstringBeforeLastlastIndexOfAny	setLengthcomponent10digitToIntOrNull
digitToIntdigitToCharisSurrogateaccessorSourceFragmentsForprintAccessorsForprintExtensionsschemaOfprojectInternalconfigureWithconventionPluginOfexternalModuleDependencyForextensionOfaddExternalModuleDependencyToaddDependencyToaddConfiguredDependencyToconventionPluginByNameconventionOffunctionToActionwalkReproduciblynormalisedPathRelativeTozipTounzipEntryTounzipTofileEntriesRelativeToclassPathBlocksHashOfselectNextActionForsameClassPathBlocksHashAsclassPathBlocksHashFor	subDirsOf$assembleDependenciesWithShortCircuitscriptModelRequestFromassembleDependenciesFromdependenciesFromgradleInstallationFromuseGradleFromhasProjectDependentClassPathtoFetchParametersWithprojectRootOfnewCorrelationIdfetchKotlinBuildScriptModelFrombuildSrcProjectDirOfconnectorForfetchKotlinBuildScriptModelForconnectionForProjectDirmodelBuilderForlogDirForOperatingSystembufferedAppendWriterdaysAgo	outputDircleanupLogDirectorynowtimestampForFileNamereadyForCleanupwarningtoIdePositiontoIdeSeverityeditorReportfatalinvalidPluginsCalltraverseAncestorsfoldHierarchytraverseHierarchypinEmbeddedKotlinDependenciesOnaddDependenciesTokotlinModuleVersionNotationForkotlinModuleNotationFortakeNextGroup	nextGroupregisterSourceDirectoriesunzippedDistroDirunzippedSubProjectsDir
onProgresscreateObjectConfigurationActionapplyObjectConfigurationAction executeObjectConfigurationAction	stringMappathcreateImplicitImports	hasErrorswithCompilationExceptionHandlersetModuleNameaddScriptingCompilerComponentsaddScriptDefinitionwithMessageCollectorForredirectingOutputTodisposeKotlinCompilerContextcompileKotlinScriptToDirectoryignoringOutputOfcompileKotlinScriptModuleTocompilerMessageForwithRootDisposablekotlinCoreEnvironmentForredirectingmessageCollectorForcompilerConfigurationForloggingOutputTocompileToDirectory!defaultKotlinScriptHostForProjectkotlinScriptTypeForinfo	loggerFortrace
isParentOfappendReproducibleNewLineuserHomelistFilesOrderedisGradleKotlinDslJarisGradleKotlinDslJarNamecompactStringForerrorAt
lineNumberindentedErrorMessagesnormaliseLineSeparators"defaultLocationAwareHintMessageForsourceRootsOfbuildSrcRootsOfgradleInstallationSourcessourcePathFordownloadedSourcesbuildSrcRootsFallbackForforNameforFilesupersededRequestsFrom	resumeAllfetchscriptModelForprocesstoVersionRangedetachedConfigurationFordependencyVersion(transientConfigurationForSourcesDownloadcreateSourceRepositoryrepositoryNameForminimumGradleVersionregisterTransforms
isSnapshotgradleSourceDependencystringForExceptionsprettyPrintindentationStringForstringForExceptionprettyPrintAny&createEmbeddedKotlinRepositoryProvidergradleKotlinDslImportsgradleImportsillegalElementTypeinternalErrorapiDeclarationFromparameterNamesFromloadPropertiesOrNullpatternSpecForparameterNamesSupplierForparameterNamesResourceNameFor
apiSpecForloadPropertiesgradleApiMetadataFromexcludeMapFormapOfNonNullValuesOfsourceNamesFromDirsourceNamesFromJarclassBytesForclassBytesSupplierForSourceNamedirectoryClassBytesIndexForclassBytesIndexForclassBytesSupplierForFilePathallClassesBytesBySourceNamesourceNamesFromjarClassBytesIndexForopenJarFilenestedClassNameForcandidateClassFiles nestedClassFilePathCandidatesForkotlinSourceNameOfclassPathBytesRepositoryForclassFilePathCandidatesForendKotlinClasswriteFunctionOfproviderConvertibleOfStarbeginFileFacadeClassHeadervisitSignaturemoduleMetadataBytesForvisitParameterpublicStaticSyntheticMethodpublicKotlinClassactionTypeOfwritePropertyOfgenericTypeOfwriteFileFacadeClassHeaderjvmGetterSignatureForextensionFunctionTypeOfmoduleFileForcloseHeadervisitOptionalParameterproviderOfStarvisitKotlinMetadataAnnotationtoPositiveLongOrNullgetClassLoadergetSourceFilegetSourceURILDCRETURNNEWARRAY	CHECKCASTDUPpublicDefaultConstructorpublicClassbeginPublicClassINVOKESPECIALALOADACONST_NULL	TRY_CATCHGETFIELD	GETSTATICARETURNPUTFIELDGOTOvisitTypeInsnmethodNEWINVOKEINTERFACEINVOKEVIRTUALvisitMethodInsn_BASTOREASTORE
beginClassINVOKESTATICpublicMethodendClassloadByteArraykotlinDeprecationgetRequestedCapabilitiessetForcecapabilities	getReason	getModule
isChangingaddDependencyisEndorsingStrictVersionsgetExcludeRulesdoNotEndorseStrictVersionssetChangingmatchesStrictlygetTargetConfigurationartifactisTransitivesetTargetConfigurationisForcebecausegetVersionConstraintaddArtifactendorseStrictVersionswithSynchronousIOwithAsynchronousIOpollinclude!getDependencyResolutionManagementsourceControlenableFeaturePreviewincludeBuildgetSourceControldependencyResolutionManagementgetSettingsgetToolchainManagementincludeFlatgetSettingsDirgetPluginManagementtoolchainManagementgetBuildCacherootProjectaddProjectEvaluationListenerbeforeSettingsgetSharedServicesaddBuildListenerbuildFinishedgetIncludedBuildsgetGradleUserHomeDirsettingsEvaluated	useLoggerbeforeProjectafterProjectgetTaskGraphincludedBuildremoveProjectEvaluationListenergetGradleHomeDirgetGradleVersionprojectsLoaded
findByPath	getByPathwhenTaskAddedcreateArtifactResolutionQuerygetConstraintsgetArtifactTypesgetAttributesSchema
getModules	variantOfaddProviderConvertibleartifactTypesplatformaddProvider
componentslocalGroovymodulesattributesSchematestFixturesgradleTestKitpokecreateAsyncIOScopeFactoryfuturecancelisCancelledisDone	classpath
closureForconfigureClientModulecreatingregisteringaddToAntBuildercopyRecursivesetExtendsFrom&getTaskDependencyFromProjectDependencydefaultDependencieswithDependenciesextendsFromfileCollectionresolutionStrategyoutgoingregisterGradleUserHomeServicesimplicitImportsForScript"precompiledScriptPluginImportsFromimplicitImportsFromstringhashOfNormalisedStringmavencannotGetExtraProperty
dependencyexistingpropertyDelegateFordynamicObjectForgradleKotlinDslwriteClassFileTopluginTreesFrom'writeSourceCodeForPluginSpecBuildersFor writePluginAccessorsSourceCodeTorunEach$pluginImplementationClassesExposedByemitClassForGroup"appendSourceCodeForPluginAccessorspluginSpecsFrombaseClassLoaderScopeOf
visitClassbuildPluginAccessorsForpackagePrivateFieldtypeSpecForPluginGroupTypeemitAccessorMethodForpluginGroupTypeNamepluginDependenciesSpecOf
GETPLUGINSpluginSpecBuildersClassPathwithGroovyBuilder	closureOfdelegateClosureOffileOperationsForscriptResolverEnvironmentOf"defaultImportsForPrecompiledScriptapplyTo!publicStaticMaybeDeprecatedMethodinvokeRuntimekotlinNameOfinvokeActioninternalNameForAccessorClassOfaccessorDescriptorForinternalNamefragmentsForConventionfragmentsForConfigurationfragmentsForContainerElement getDeclarationDeprecationMessageloadConventionOfinvokeDependencyHandlerAddclassOfquotefragmentsForTaskgetDeclarationDeprecationBlockfragmentsForfragmentsForExtensionfragmentsForContainerElementOfaccessibleTypesForwriteElementAccessorMetadataForaliasidwithConventiongetPluginByName&createPluginAccessorClassPathGenerator'createProjectAccessorClassPathGeneratorcheckForTopLevelBlockOrdersingleSectionOfhandleUnexpectedBlockkotlinScriptOptionsclassPathOffileFromcollectwithAutoAppliedPluginsForhandlecollectScriptPluginFilesOfenableOnapplyKotlinCompilerArgs createKotlinDslWorkspaceProvidersubWorkspacekotlinTypeStringForloadHashCodeemitEvaluateSecondStageOfloadTargetOf+emitPluginRequestCollectorGetPluginRequestsemitDynamicProgramstoreStringToResourceemitApplyPluginsTo overrideGetSecondStageScriptTextoverrideLoadSecondStageForemitPrecompiledPluginsBlockemitOnScriptExceptionemitLoadExtensionswriteResourceFile
outputFile)emitInstantiationOfPrecompiledScriptClassemitStage2ProgramForemitApplyEmptyPluginRequestsTo#emitAccessorsClassPathForScriptHost#precompiledScriptClassInstantiation'emitPluginRequestCollectorInstantiationmightBeLargerThan64KBcompileStage1implicitReceiverOfemitemitEvalemitApplyBasePluginsTooverrideExecuteprogramemitLoadExtensioncompilePluginsemitSetupEmbeddedKotlinForinvokeApplyPluginsToemitStaticProgram'emitPluginRequestCollectorCreateSpecFor
invokeHostcompileScriptemitStage1SequenceemitCloseTargetScopeOfcompileKotlinApiExtensionsTogenerateApiExtensionsJarapiFunctionParametersForapiTypeUsageForReturnTypeapiTypeParametersForbinaryNameOfInternalNameapiTypeProviderForapiTypeUsageForhassourceNameOfBinaryNamebinaryNameOfBaseTypevisitTypeAnnotationvisitInnerClassvisitAttributevisitSourcevisitOuterClassvisitParameterTypevisitReturnType writeBuiltinPluginIdExtensionsTopluginEntriesFrompluginExtensionsFromisGradlePluginPropertiesFile pluginIdExtensionDeclarationsForpluginTreeForGroupgradleApiJarsFrom#writeGradleApiKotlinDslExtensionsTofragmentreduceEmptyProgramdefaultStageTransitionreduceBuildscriptProgramstage1WithPluginManagementreduceStagedProgramreduceScriptProgramreduceStage1ProgramfragmentHolderSourceForstage1WithPluginsgetRegisteredTypelinePreservingSubstringlineAndColumnForlinePreservingSubstring_splitIncludinglinePreservingBlankRangeslinePreservingBlankRangelineAndColumnFromRangeclassNodeFor
apiTypeForallTypesvisitFormalTypeParametervisitInterfaceBoundvisitTypeParameterBoundvisitClassBoundconfiguredProjectSchemaOfprojectAccessorsClassPathbuildAccessorsClassPathForbuildscriptIdFortopLevelBlockIdForconfigurationAccessorSpecemitClassForwriteAccessorsBytecodeTomakeAccessorOutputDirssourceFileForemitAccessorsForaccessorsForaccessibleType	schemaForfileHeaderForpublicInlineFunction	withClasstoDeclarationStringsingleTypeArgumentStringOftoArgumentsStringwithContextClassLoadertemplateIdForlogClassLoadingOfclassLoaderScopeIdForlocationAwareExceptionForlogCompilationOf!locationAwareExceptionHandlingFor"withLocationAwareExceptionHandlingcheckForSingleBlocksOf
programFor&builtinPluginIdExtensionsSourceFileForgeneratedSourceFilegeneratesourceFilesFor!gradleApiExtensionsSourceFilesForsourceFileNamecompileExtensionsTo
tempDirForvisitClassTypevisitBinaryNamevisitBaseTypevisitArrayTypevisitTypeArgumentvisitInnerClassTypevisitTypeVariableboundOfextractInlineFunctionswriteMethodextractFunctionMetadataparseKotlinClassHeaderextractInternalFunctionswriteClassAnnotationsbinarySignature
isInternalextractApiClassFromtypeForInternalNamesingleAbstractMethodOfisSignificantDeclarationscriptFileNameForwithTemporaryScriptFileForcanonicalScriptFileForhasJavaClassgroovyNamedArgumentsToVarargsjavaClassToKotlinClassrelativeSourcePathOf
apiTypeKey&generateKotlinDslApiExtensionsSourceTotoTypeParameterStringcandidatesForExtensionFromgroupedByTargettoKotlinClasswriteExtensionsTotoTypeArgumentString%kotlinDslApiExtensionsDeclarationsFor%singleTypeArgumentRawToStarProjection$sortedWithTypeOfTakingFunctionsFirsttoCollectionOfKotlinClassestoTypeParametersStringsignatureKeynewMappedParameterstoArrayOfKotlinClasseskotlinExtensionFunctionsFortoTypeArgumentsStringjoinInAngleBracketstoKotlinNullabilityStringisCandidateForExtensionrawTypesToStarProjectionsprogressLoggerForlineNumberOfsubTextpreservecomplementOf#createKotlinScriptClassloadingCacheidOfhierarchyOfclassLoaderHierarchyJsonForgetExportedPackagesinLenientModeinClassPathModeisKotlinJargradleKotlinDslJarsOfkotlinScriptClassPathProviderOfgradleKotlinDslOffileCollectionOftoURIgradleApiJarsProviderFor
classesDirvisitClassPathPropertyworkOutputForscriptHostForserviceRegistryForprogramHostForstartCompilerOperationForgetKotlinTypeinstantiateemitSpecializedProgramForevalprogramTargetForskipWhiteSpaceAndCommentslexsingleBlockSectionOrNulltopLevelBlockparseQualifiedNamehasDeclarationDeprecationsloadSecondStageForloadScriptResourceprepareClassLoaderScope!setupEmbeddedKotlinForBuildscriptexecutionEngineForgetOrCreatePropertycomputeCompilationClassPathgenerateAtomicallyexportClassPathFromHierarchyOftempFileForproduceFromgradleKotlinDslExtensionsgradleKotlinDslJars#createKotlinCompilerContextDisposercreatePluginRequestsHandler%createClassPathModeExceptionCollectorversionedJarCacheFor#createKotlinScriptClassPathProvidercreateKotlinScriptEvaluatorcreateCompileClasspathHasherclassLoaderScopeOf	nonPublichashCodeForavailableProjectSchemaFor&warnAboutDiscontinuedJsonProjectSchemafileHeaderWithImportsForbuildAccessorsForclassNamesFromTypeStringwriteAccessorsTotypeErasureputAllSorted
accessiblenonAvailableinaccessible	synthetichasTypeParameterkotlinVisibilityForaccessibilityForTypeloadAccessibilityInfoForhasTypeParametersaccessibilityInfoForinaccessibilityReasonsForisNonPublicKotlinTypetargetTypesOfuniqueAccessorsForuniqueAccessorsFrom#inaccessibleExistingTaskAccessorFor-accessibleExistingContainerElementAccessorFor!inaccessibleConventionAccessorForescapeStringTemplateDollarSign/inaccessibleExistingContainerElementAccessorForisKotlinIdentifieraccessorNameSpecisLegalAccessorName inaccessibleExtensionAccessorForconventionAccessor!accessibleExistingTaskAccessorForaccessibleConventionAccessorForexistingTaskAccessordocumentInaccessibilityReasonstypedAccessorSpecextensionAccessor existingContainerElementAccessoraccessibleExtensionAccessorForstringLiteralFor(functionInterfacePackageFragmentProviderreplaceParameterNamescreateValueParameterdoSubstituteisNullabilityAnnotationAnyrenderClassifierqualifierNamequalifiedNameForSourceCoderesolveExtensionsClashappendBeforeValueParametergetClassifierKindPrefixappendBeforeValueParametersappendAfterValueParametersappendAfterValueParameterrenderFunctionParametersmustCheckInImports	isVisiblecustomEffectiveVisibilitygetScopecreateNonDeprecatedcreateDeprecatedtoKotlinDurationtoJavaDurationdependentDescriptorsleastPermissiveleastPermissiveDescriptorforVisibilityeffectiveVisibility computeConstructorTypeParametersisCapturedFromOuterDeclarationgetIndexcapturedCopyForInnerDeclarationsegmentsbuildPossiblyInnerTyperenderKeywordrenderTypeAliasrenderPropertyAnnotationsrenderMemberModifiersrenderValueParameterrenderNormalizedTypeAsIsrenderSimpleTyperenderTypeParametersrenderSuperTypesrenderContextReceiversltrenderModalityvisitPropertyGetterDescriptorrenderClassKindPrefixrenderOverridevisitTypeParameterDescriptor!implicitModalityWithoutExtensionsrenderReceiverAfterNamerenderValVarPrefixrenderErrorrenderMemberKindrenderNormalizedType renderAndSortAnnotationArguments&renderCapturedTypeParametersIfRequiredrenderSuspendModifiergtvisitValueParameterDescriptorhasModifiersOrAnnotationsdiffersOnlyInNullability visitReceiverParameterDescriptorrenderPackageHeaderappendDefinedInarrowrenderDefaultTypeoverridesSomethingrenderModalityForCallableisParameterNamevisitVariableDescriptorrenderPackageViewrenderTypeParametervisitScriptDescriptorrenderClassrenderInitializervisitPackageViewDescriptorrenderFunctionTyperenderWhereSuffixshouldRenderParameterNamesrenderVariablerenderVisibilityvisitModuleDeclarationrenderModifierrenderPossiblyInnerType shouldRenderAsPrettyFunctionTyperenderConstantreplacePrefixesrenderPackageFragmentvisitClassDescriptorvisitPropertyAccessorDescriptor!renderTypeConstructorAndArgumentsrenderSpaceIfNeededrenderReceiverrenderCompanionObjectNamerenderAdditionalModifiersrenderForReceivervisitTypeAliasDescriptorvisitPackageFragmentDescriptorappendTypeProjectionsvisitPropertySetterDescriptorrenderAccessorModifiersrenderConstructorrenderAbbreviatedTypeExpansionrenderAnnotationsrenderTypeParameterListcanBeUsedForConstVal
isLateInit%findTypeAliasAcrossModuleDependencies%findNonGenericClassAcrossDependencieswithResolutionAnchor&findClassifierAcrossModuleDependenciesmoduleInvalidatednotifyModuleInvalidated"findLoopsInSupertypesAndDisconnectgetClassasStreamisTopLevelInPackage%findContinuationClassDescriptorOrNullfindContinuationClassDescriptorisSupportedForCallableReferencegetContinuationOfTypeOrAnycontainingPackageisSealedgetTopLevelContainingClassifierresolveClassByFqNamepackageFragments*collectPackageFragmentsOptimizedIfPossiblecomputeDefaultTypegetTypeAliasConstructors,getRefinedUnsubstitutedMemberScopeIfPossiblegetRefinedMemberScopeIfPossiblegetDestructuringVariablesOrNull cleanCompileTimeInitializerCachegetCompileTimeInitializer#createWithDestructuringDeclarationsisVarsetDependenciescreateIfAvailable$getTypeSubstitutorForUnderlyingClassgetReturnType	isPrimarygetConstructedClassreflectgetKPackagefailgetContainerClasstoKClassImplrenderLambdaappendReceiversappendReceiverTyperenderParameterrenderCallablegetOrCreateKotlinClassclearKClassCacheclearModuleByClassLoaderCachegetOrCreateModulelookupMethodtryGetConstructor
getMembers	parseTypeloadParameterTypesfindConstructorBySignaturetryGetMethodloadReturnTypeaddParametersAndMasksfindDefaultMethodfindPropertyDescriptorfindDefaultConstructorfindFunctionDescriptorfindMethodBySignatureisKnownBuiltInFunctionmapNamemapSignaturemapJvmClassToKotlinClassIdmapJvmFunctionSignaturegetManglingSuffixmapPropertySignatureisJvmStaticPropertycomputeCallerForAccessorcomputeFieldCallergetDelegateImplisNotNullPropertycomputeDelegateSource#isJvmFieldPropertyInCompanionObjectcalculateLocalClassNamereportUnresolvedClasscreateNothingTypecreateMutableCollectionKTypereadOnlyToMutablecreatePlatformKTypetoKVisibilityasKCallableImplreflectionCallarrayToRuntimeValuetoJavaClasstoAnnotationInstance	loadClasscreateArrayTypecomputeAnnotationsdeserializeToDescriptorasKPropertyImplasKFunctionImpltoRuntimeValueunwrapRepeatableAnnotationsdefaultPrimitiveValuecreateStaticMethodCallercreateInstanceMethodCallercreateConstructorCallercreateJvmStaticInObjectCallerdefaultEmptyArraycallAnnotationConstructorextractContinuationArgumentcallDefaultMethodreportClassonCompletedAnalysisenumArgumentstoEnumNameshasErasedValueParametersisJspecifyEnabledInStrictModeisPrimitiveCompareTo8isIncompatibleInAccordanceWithBuiltInOverridabilityRulesmapValueParameterType3doesJavaOverrideHaveIncompatibleValueParameterKindshasBuiltinSpecialPropertyFqName#getBuiltinSpecialPropertyGetterName#hasBuiltinSpecialPropertyFqNameImpl'doesOverrideBuiltinWithDifferentJvmNameisFromJavaOrBuiltins'isBuiltinFunctionWithDifferentNameInJvm+getOverriddenBuiltinReflectingJvmDescriptor(getOverriddenBuiltinWithDifferentJvmName
getJvmName&getOverriddenBuiltinThatAffectsJvmName;getOverriddenBuiltinFunctionWithErasedValueParametersInJava#isBuiltinWithSpecialDescriptorInJvm%hasRealKotlinSuperClassWithOverrideOfgetSpecialSignatureInfo+getDefaultValueForOverriddenBuiltinFunctiongetOverriddenSpecialBuiltingetJvmMethodNameIfSpecialresolveTypeParameterresolveAnnotationsgetPackageFragmentchildForClassOrPackagereplaceComponentschildForMethodcomputeNewDefaultTypeQualifierschild copyWithNewDefaultTypeQualifiersgetErasedUpperBoundInternalgetErasedUpperBound%eraseInflexibleBasedOnClassDescriptor	eraseTypeonlyOutDifferscomputeProjectionrenderArgumentsreplaceArgsmapKotlinClasstransformJavaClassifierTypewithDefaultTypetransformArrayTypecomputeSimpleJavaClassifierTypeisConflictingArgumentForcomputeRawTypeArguments)argumentsMakeSenseOnlyForMutableContainerwithFlexibilitytransformToTypeProjectioncomputeTypeConstructorcomputeArgumentstransformJavaTypewithNewVisitedTypeParametermakeStarProjectioncreateNotFoundClass	errorTypefindRecordComponentByNamefindMethodsByNamefindFieldByNamegetFieldNamesgetRecordComponentNames!flatMapJavaStaticSupertypesScopes&getStaticFunctionsFromJavaSuperClasses createTypeForMissingDependenciesresolveFromEnumValueresolveFromAnnotationresolveAnnotationArgumentresolveFromArrayresolveFromJavaClassObjectTypewasScopeContentRequestedgetPurelyImplementedSupertype!getUnsubstitutedInnerClassesScope'getPurelyImplementsFqNameFromAnnotationisRecordgetSubPackageFqNamesgetFacadeNameForPartNameprocessBoundsWithoutCyclescomputeNotEnhancedBoundsfindClassifierresolveKotlinBinaryClassgetValueParametersloadParameterNameswasContentRequested!resolveMethodToFunctionDescriptorcreatePropertyDescriptorcomputeMethodReturnTypegetPropertyTyperesolvePropertyresolveValueParametersretainMostSpecificMethods
getClassesloadIsRecordloadIsSealedloadGetPermittedSubclassesloadGetRecordComponentshasDefaultConstructorfindInnerClassisEnumValuesOrValueOfcreateSuspendViewdoesOverride&searchMethodsByNameWithoutBuiltinMagic*resolveRecordComponentToFunctionDescriptorobtainOverrideForSuspend&hasSameJvmDescriptorButDoesNotOverride,searchMethodsInSupertypesWithoutBuiltinMagicdoesOverrideSuspendFunction!isVisibleAsFunctionInCurrentClassgetPropertiesFromSupertypesaddPropertyOverrideByMethoddoesOverrideRenamedDescriptorfindSetterOverridefindGetterOverridecreateDefaultRecordConstructorcomputeAnnotationPropertiesaddFunctionFromSupertypes!createPropertyDescriptorByMethods;createOverrideForBuiltinFunctionWithErasedParameterIfNeeded6createHiddenCopyIfBuiltinAlreadyAccidentallyOverridden!createRecordConstructorParameters,obtainOverrideForBuiltinWithDifferentJvmNamedoesClassOverridesProperty;shouldBeVisibleAsOverrideOfBuiltInWithErasedValueParametersgetConstructorVisibilityfindGetterByName)createPropertyDescriptorWithDefaultGetter7obtainOverrideForBuiltInWithErasedValueParametersInJavacreateDefaultConstructoraddOverriddenSpecialMethodsresolveConstructor%createAnnotationConstructorParametersgetFunctionsFromSupertypesaddAnnotationValueParametercreateRenamedCopydoesOverrideRenamedBuiltins&isEnumClassOrSpecializedEnumEntryClassloadGetTypeloadGetAccessorgetReferencedTypegetElementsgetInitializerConstantreportCannotInferVisibilityreportIncompleteHierarchygetPackagePartScopehasMetadataPackagefindMetadatatoRuntimeFqNamefindBuiltInsDatafindKotlinClassfindKotlinClassOrContentmapJavaTargetArgumentByNamemapJavaRetentionArgumentmapJavaTargetArgumentsmapOrResolveJavaAnnotationfindMappedJavaAnnotationtryLoadClassknownClassNamesInPackage	findClassprocessAnnotationArgumentsconstructorDescvisitMembersloadFieldAnnotationsprocessAnnotationArgumentValueprocessAnnotationloadMethodAnnotations	fieldDescclassLiteralValueloadConstructorAnnotations
methodDescisFromJvmPackagePartgetParentJavaStaticClassScopecopyValueParametersgetImplClassNameForDeserializedcreateDeprecatedAnnotationshouldBeReturnedcomposeAnnotationsgetUseSiteTargetedAnnotationstransformPlatformTypecompositeAnnotationsOrSingleenhanceInflexibleprepareReplacementgetEnhancedNullability
throwErrorenhancePossiblyFlexibleenhanceMutabilityhasEnhancedNullabilitynotNullTypeParametercreateObjectTypemapToJvmTypecomputeJvmSignaturecreateFromStringforceSingleValueParameterBoxingcreatePrimitiveTypecomputeJvmDescriptorappendErasedTypeboxTypevisitConstantValueguessArrayTypeloadAnnotationvisitClassLiteralcreateConstantloadTypeAnnotationvisitArrayValue	visitEnumgetOptimalModeForSignaturePartgetOptimalModeForValueParametergetOptimalModeForReturnTypeenhanceSignatureisEqualenhanceValueParameterenhanceSuperTypeenhanceTypeParameterBoundsisArrayOrPrimitiveArraygetDefaultAnnotationsenhanceSignaturescontainsFunctionNshouldUseUnderlyingTypecomputeUnderlyingType	signatureloadAnnotationsAndInitializersgetAnnotationsContainervisitParameterAnnotation!isRepeatableWithImplicitContainervisitMethod!visitAnnotationMemberDefaultValueloadConstantFromPropertyloadModuleMapping%getPredefinedFullInternalNameForClasshasVoidReturnTypemapTypecomputeInternalNamepreprocessTypegetRepresentativeBinaryClassgetContainingBinaryClassreadClassDatacreateKotlinPackagePartScopesetComponentsreadData
parseProtocreateModuleData$makeDeserializationComponentsForJava#makeLazyJavaPackageFragmentProvider#getAnnotationsForModuleOwnerOfClassgetAllOptionalAnnotationClassesfindPackagePartsgetAnnotationsOnBinaryModulegetPackagePartsisInFriendModuleforEachScopeflatMapScopesfilterIsInstanceAndTofilterIsInstanceMapNotNullfilterIsInstanceAndgetFromAllScopeslistOfNonEmptyScopesfilterIsInstanceMapToconcat%getFirstClassifierDiscriminateHeadersfilterIsInstanceMapNotNullTo'getAdditionalNeighboursInSupertypeGraphprocessSupertypesWithoutCyclesreportScopesLoopErrordefaultSupertypeIfEmpty renderAdditionalDebugInformationcomputeNeighboursensureincDecCheckForExpectClassisValidOperatorisApplicablecheckAllcreateFunctionPlaceholderTypegetReplacementisRecursioncreateWithFormalArgumentscomputeHashCodeunwraptoTypeProjection&substituteCapturedTypesWithProjections#approximateCapturedTypesIfNecessarymakeNullableIfNeededapproximateProjectionremoveProjectionIfRedundantreplaceTypeArgumentstoTypeArgumentflexibleTypeintegerLiteralTypesimpleNotNullTyperefineConstructor	maybeWrap#simpleTypeWithNonTrivialMemberScopecomputeExpandedTypeneedsRefinementareThereExpectSupertypescreateStandaloneInstanceForisExpectClass restoreAdditionalTypeInformationcanBeCached#refineWithRespectToAbbreviatedTypesrecursiveTypeAliasrepeatedAnnotationconflictingProjectionboundsViolationInSubstitutionwrongNumberOfTypeArgumentsgetSubtypeRepresentativesameTypeConstructorsgetSupertypeRepresentativegetCustomTypeParameterisCustomTypeParameterstarProjectionTypegetProjectionKind'buildStarProjectionTypeByTypeParameterswithAbbreviationgetAbbreviatedTypegetAbbreviationmakesSenseToBeDefinitelyNotNullmakeDefinitelyNotNull.makeIntersectionTypeDefinitelyNotNullOrNotNulltoDefaultAnnotationscustomComputeIfAbsenttoDefaultAttributesperformattributeAccessorexpandNonArgumentTypeProjectioncheckRepeatedAnnotationscombineNullabilitycombineAttributescreateAbbreviationassertRecursionDepthcreatedCombinedAttributessubstituteArgumentscheckTypeArgumentsSubstitutionexpandTypeProjectionexpandRecursively combineNullabilityAndAnnotationsexpandWithoutAbbreviation	isDynamiccreateDynamicTypeareFqNamesEqualisSameClassifierhasMeaningfulFqNametransformComponentssetAlternative makeDebugNameForIntersectionTypegetAlternativeTypecreateScopeForKotlinTypecreateByParametersMapcreateByConstructorsMapreplaceWithNonApproximatingbuildSubstitutorcreateUnresolvedTypematerializegetBaseBoundFqNameByMutability>areTypesMayBeLowerAndUpperBoundsOfSameFlexibleTypeByMutabilitylowerIfFlexiblerunAssertions
isFlexibleisNullabilityFlexibleupperIfFlexiblewereTypeArgumentsChangedinheritEnhancementunwrapEnhancementgetEnhancementenhanceTypeArgumentsgetEnhancementDeeplyInternalwrapEnhancementunwrapEnhancementDeeplygetEnhancementDeeplyrecordPackageLookupclosure'replaceArgumentsByExistingArgumentsWithisUnresolvedType!expandIntersectionTypeIfNecessaryconstituentTypesshouldBeUpdatedisFloatisDoubleisChar	isBooleanisAnyOrNullableAny replaceArgumentsByParametersWithequalTypesOrNullsisByteisTypeParameter$extractTypeParametersFromUpperBoundsisArrayOfNothingisNotNullThrowablegetImmediateSuperclassNotAnyisNothingOrNullableNothing*containsTypeProjectionsInTopLevelArguments*replaceArgumentsWithStarProjectionOrMappedcontainsErrorisDefaultBoundisBooleanOrNullableBooleancannotBeReifiedboundClosurenullabilitymakeNotNullableisEnumisNullableAnymakeNullableisLongisDefNotNullStubTypedefaultProjections	isNothingunCaptureProjectionisTypeAliasParametercontainsTypeAliasParameterscontainsSelfTypeParametercreateProjectionisNullableNothing	unCaptureisPrimitiveNumberOrNullableType+upperBoundedByPrimitiveNumberOrNullableTypecontainsTypeParameterrequiresTypeAliasExpansionisPrimitiveNumberTypeisShortunCaptureTopLevelTypehasTypeParameterRecursiveBoundsasTypeProjectionreplaceArgumentsWithNothingcontainsTypeAliasesisNullabilityMismatchisIntisUnsignedNumberTypeimmediateSupertypes#replaceArgumentsWithStarProjectionsgetParamcontainsErrorTypeInParameterscreateErrorTypeConstructorisErrorClasscreateErrorTypeWithArgumentsisUninferredTypeVariablecontainsErrorTypecontainsUninferredTypeVariablecreateErrorScope
acceptVoid setDropOriginalInContainingPartsgetUserDatasetPreserveSourceElementsetKindsetContextReceiverParameters0setHiddenForResolutionEverywhereBesideSupercallssetVisibilitysetNamesetOriginalsetReturnTypesetSubstitutionsetCopyOverridessetSignatureChangesetTypeParameters!setHiddenToOvercomeSignatureClashnewCopyBuildersetExtensionReceiverParametersetDispatchReceiverParametersetModalityputUserDatasetAdditionalAnnotationssetValueParametersdescriptorVisibility
memberKindchildContextcreateContext	readProtodeserializeContractFromFunction%createSuspendFunctionTypeForBasicCasenotFoundClasscreateSimpleSuspendFunctionTypecreateSuspendFunctionTypetypeArgumentcomputeTypeAliasDescriptorcomputeClassifierDescriptorloadTypeParametercollectAllArguments-transformRuntimeFunctionTypeToSuspendFunction%computeLocalClassifierReplacementTypeloadTypeAnnotations)loadExtensionReceiverParameterAnnotations#loadPropertyBackingFieldAnnotationsloadCallableAnnotations$loadPropertyDelegateFieldAnnotationsloadTypeParameterAnnotationsloadEnumEntryAnnotationsloadValueParameterAnnotationsletIf resolveValueAndCheckExpectedTyperesolveValuedoesValueConformToExpectedTypedeserializeAnnotationresolveArgumentloadResource$createBuiltInPackageFragmentProviderloadConstructorloadFunction-initializeWithCoroutinesExperimentalityStatusvalueParametersloadTypeAliasgetPropertyFieldAnnotationsgetReceiverParameterAnnotationsloadOldFlagsloadPropertyasProtoContainertoContextReceiver)computeMultiFieldValueClassRepresentationfindEnumEntry computeInlineClassRepresentationcomputeConstructorscomputeEnumMemberNames computeCompanionObjectDescriptorcomputeValueClassRepresentationgetContextReceiverscomputeSubclassesForSealedClassgenerateFakeOverridescomputeSecondaryConstructorshasNestedClasscomputePrimaryConstructorcomputePropertiescomputeAllNonDeclaredProperties#computeNonDeclaredPropertiesForNamegetTypeAliasByNamepackToByteArray"computeNonDeclaredFunctionsForName
mapToNamescomputeAllNonDeclaredFunctionscreateTypeAliascomputeNonDeclaredDescriptorscomputeFunctionscreateImplementationcomputeTypeAliases
addMembersaddFunctionsAndPropertiesTomapWithDeserializergroupByNamecreateAnnotationInstancethrowIllegalArgumentTypetransformKotlinToJvm#captureArgumentsForIntersectionTypeisSuitableForType=replaceArgumentsWithCapturedArgumentsByIntersectionComponents(prepareArgumentTypeRegardingCaptureTypes)findCorrespondingCapturedArgumentsForTypegetTypesToCapturetransformSupertypescaptureArgumentsinitializeSupertypes	dropFirstdropFirstAndLastcheckObjectInstancegetUnboxMethodhasInlineClassReceiver$createInlineClassAwareCallerIfNeededtoInlineClassgetBoxMethodcoerceToExpectedReceiverTypecreateClassicTypeCheckerStateisStrictSupertypecombine%intersectTypesWithoutIntersectionTypeintersectWrappedTypesfilterTypes	debugInfofindCorrespondingSupertypeapproximaterefineTypesgetValueClassPropertiessubstitutionSupertypePolicy!errorSupportedOnlyInTypeInference!getApproximatedIntegerLiteralType(isIntegerConstantOperatorTypeConstructor	asRawTypeisArrayOrNullableArrayisAnyConstructorgetFunctionalTypeFromSupertypesisIntersectionisSuspendFunctionTypeOrSubtypeisSingleClassifierTypeasTypeArgumentisInterfaceOrAnnotationClassconvertVariancenullableAnyTypegetParameterasDynamicTypegetAnnotationFirstArgumentValuegetKFunctionTypeConstructorupperBoundCountisUnderKotlinPackageisOldCapturedTyperemoveExactAnnotation&findCommonIntegerLiteralTypesSuperType3isFinalClassOrEnumEntryOrAnnotationClassConstructorpossibleIntegerTypescreateStarProjectionisUnitTypeConstructor	isSpecialhasExactInternalcreateEmptySubstitutorhasRecursiveBoundsargumentsCountnullableNothingTypegetSubstitutedUnderlyingTypeisNullableTypeisExtensionFunctionType.createTypeWithAlternativeForIntersectionResultasArgumentListgetArgumentscreateSimpleTypecreateTypeArgumentisCapturedTypeConstructor)createStubTypeForTypeVariablesInSubtypingoriginalgetArgumentparametersCountfreshTypeConstructorisExtensionFunctionisInnerClasscaptureFromExpressionInternal%isSingleClassifierTypeWithEnhancementcontainsInternaltoErrorTypeisTypeParameterTypeConstructor*isFunctionOrKFunctionWithAnySuspendabilitygetPrimitiveTypeidenticalArgumentsisIntegerLiteralTypeConstructorgetCustomAttributesunionTypeAttributescaptureStatusisClassTypeConstructorreplaceCustomAttributesisNotNullTypeParametergetClassFqNameUnsafe'isIntegerLiteralConstantTypeConstructorgetRepresentativeUpperBound!createExtensionFunctionAnnotationisLocalTypeisTypeVariableTypenothingTypegetFunctionTypeConstructortransformTypeisCommonFinalClassConstructorgetUpperBoundgetTypeParameterClassifierasDefinitelyNotNullType&makeDefinitelyNotNullOrNotNullInternalcreateUninferredTypeisNothingConstructor.isContainedInInvariantOrContravariantPositionsanyType!unwrapStubTypeVariableConstructor0makeSimpleTypeDefinitelyNotNullOrNotNullInternalremoveAnnotationsgetPrimitiveArrayTypecreateFlexibleType	lowerType	arrayType	typeDepth8createConstraintPartForLowerBoundAndFlexibleTypeVariabletypeConstructorProjectionasCapturedTypegetUnsubstitutedUnderlyingTypeisUninferredParameter
upperBoundsafeSubstitutegetVarianceisMarkedNullableisTypeVariableisPrimitiveTypehasNoInferInternal	isReifiedhasCustomAttributes!createStubTypeForBuilderInferencedefaultTypeisAnonymousgetOriginalTypeVariable isBuiltinFunctionalTypeOrSubtype typeSubstitutorByTypeConstructor
projection*extractArgumentsForFunctionalTypeOrSubtypeisProjectionNotNullanySuperTypeConstructor$hasSupertypeWithGivenTypeConstructorstrictEqualTypes
equalTypesisSubtypeOfAnyprepareTypetransformToNewTypefindParameterByNamecallSuspendBycallSuspendcreateKotlinTypegetExtensionDelegateloadRepeatableContainerfindAnnotationsisSupertypeOfisSuperclassOfcreateInstanceextractRadixsure	doNothingidentity
alwaysNull
alwaysTruejoin newLinkedHashMapWithExpectedSizeaddIfNotNullyieldIfNotNullnewHashMapWithExpectedSize
mapToIndexkeysToMapExceptNulls newLinkedHashSetWithExpectedSize	keysToMapgetOrPutNullablenewHashSetWithExpectedSizeisProcessCanceledExceptioncloseQuietlytoUpperCaseAsciiOnlycapitalizeFirstWorddecapitalizeSmartForCompilerisLowerCaseCharAtcapitalizeAsciiOnlyisUpperCaseCharAtdecapitalizeSmartdecapitalizeWithUnderscorestoLowerCaseAsciiOnlydecapitalizeAsciiOnlyintervalUsefulTimegetCallStackleaveCounterincrementTimeenterCountersetTimeCounterEnabledexitExcludedMethod	countTime	incrementcurrentTimeresetAllCounterstimeisEnteredCounterpeekOrFalseenterExcludedMethod	sumByLongassertedCastfirstIsInstanceOrNullpopLastcompactIfPossibleifTruefirstNotNullResultsequenceOfLazyValuesconstantfoldMapapplyIffilterIsInstanceWithCheckersafeAslastIndexOfOrNullrunIf
ifNotEmptymeasureTimeMillisWithResult	enumSetOfflatMapToNullable	flattenTo	runUnless	enumMapOfflatGroupByswapifFalselastIsInstanceOrNullindexOfOrNullsamefirstIsInstancegetResolutionAnchorIfAnygetResolutionAnchor)isGetterOfUnderlyingPropertyOfInlineClasssubstitutedUnderlyingTypesunsubstitutedUnderlyingTypesisNullableUnderlyingTypeunsubstitutedUnderlyingType!isUnderlyingPropertyOfInlineClass&isRecursiveInlineOrValueClassTypeInner!isRecursiveInlineOrValueClassTypesubstitutedUnderlyingTypeisValueClassisInlineClassTypecollectSubclassescomputeSealedSubclassessingleSourceownersEquivalentareTypeParametersEquivalent areCallableDescriptorsEquivalentareEquivalentareClassesEquivalentisExactAnnotationisInternalAnnotationForResolvehasBuilderInferenceAnnotationgetExactInAnnotationshasInternalAnnotationForResolvehasHidesMembersAnnotationhasDynamicExtensionAnnotation"hasLowPriorityInOverloadResolutionhasOnlyInputTypesAnnotationinheritanceConflictoverrideConflict(findOriginalTopMostOverriddenDescriptors(selectMostSpecificInEachOverridableGroup findTopMostOverriddenDescriptorsgenerateAdditionalMethodsgetAdditionalSupertypesfindMemberWithMaxVisibility areEqualTypeConstructorsByAxiomscustomIsSubtypeOffilterOutSourceAnnotationsfindImplicitOuterClassArgumentscontainsStubTypesfirstOverriddenclassesFromInnerToOuterisAnnotationConstructorgetAnnotationRetentiongetClassObjectReferenceTargetisPublishedApiisTypeRefinementEnabled!isPrimaryConstructorOfInlineClassisParameterOfAnnotationgetAllSuperClassifiersisEnumValueOfMethodvarargParameterPosition$getAllSuperClassesTypesIncludeItselfshouldBeSubstituteWithStubTypesgetKotlinTypeRefinerisAncestorOffqNameOrNullisEffectivelyExternalgetSuperClassNotAnyoverriddenTreeUniqueAsSequencegetSuperInterfacesdeclaresOrInheritsDefaultValuedoBuildOverriddenTreeAsSequenceoverriddenTreeAsSequencesetSingleOverriddenfirstArgumentresolveTopLevelClass!doGetAllSuperClassesAndInterfacesgetSuperClassOrAnygetImportableDescriptorgetAllSuperclassesWithoutAnyisAnnotatedWithKotlinRepeatableisDocumentedAnnotation-getOwnerForEffectiveDispatchReceiverParametergenerateConstructorsgenerateStaticFunctionsgenerateMethodsgetStaticFunctionNames,requiresFunctionNameManglingInParameterTypes!isInlineClassThatRequiresMangling-requiresFunctionNameManglingForParameterTypes1isTypeParameterWithUpperBoundThatRequiresMangling)requiresFunctionNameManglingForReturnTypeisDontMangleClass8shouldHideConstructorDueToInlineClassTypeValueParameters(shouldConvertFirstSamParameterToReceiver!shouldRunSamConversionForFunctionisPossibleSamTypeisJavaApplicableCandidate&recreateTypeParametersAndReturnMapping%createTypeAliasSamConstructorFunction"initializeSamConstructorDescriptor#recreateAndInitializeTypeParameters"createSubstitutorForTypeParameterscreateSamConstructorFunctiongetSingleAbstractMethodOrNull!getFunctionTypeForPossibleSamTypegetFunctionTypeForSamTypegetAbstractMembersnonProjectionParametrization getFunctionTypeForAbstractMethodgetActualScope
isCapturedcreateCapturedIfNeededwrapWithCapturingSubstitutionrepresentative	withKindsrestrictedToKindsOrNullacceptsKindskindstaticFieldscomputeAllNamesacceptsrestrictedToKindsgetDescriptorsFilteredfindFirstFunctionflatMapClassifierNamesOrNullnextMaskwithoutKindscreateFakeOverridesgetSyntheticExtensionPropertiesgetSyntheticStaticFunctionscollectSyntheticStaticFunctionscollectSyntheticConstructors#collectSyntheticExtensionPropertiescollectSyntheticMemberFunctionsgetSyntheticConstructorgetSyntheticMemberFunctionscreateOrSinglerecordSamLookupsToClassifiercheckIfClassifierApplicablegetTypeAliasSamConstructorgetSamConstructorminValuemaxValueunsignedTypeaddUnsignedSuperTypesaddSignedSuperTypescheckBoundsAndAddSuperTypecreateConstantValuefromUIntToLongcreateUnsignedValuecreateArrayValuecreateIntegerConstantValuefromUByteToLongfromUShortToLongaddUnsignedPossibleTypesgetApproximatedTypeaddSignedPossibleTypesisContainsOnlyUnsignedTypescheckBoundsAndAddPossibleTypefindCommonSuperTypevalueToStringfindIntersectionType%findCommonSuperTypeOrIntersectionTypecheckConstructorconvertToUnsignedConstant$hasUnsignedTypesInModuleDependenciestoConstantValuecreateIntegerValueTypeConstantconvertToSignedConstantgetArgumentTypeisPrintableUnicodegetPrintablePart
boxedValuerenderDebugInformationcomputeIfAbsentisComputingunlock
simpleLockguarded'isMappedIntrinsicCompanionObjectClassId isMappedIntrinsicCompanionObject-transformSuspendFunctionToRuntimeFunctionTypeisUnsignedArrayClassisUnsignedArrayTypetoUnsignedArrayTypeisShortNameOfUnsignedArray(getUnsignedArrayClassIdByUnsignedClassIdisUnsignedClasstoUnsignedType getUnsignedClassIdByArrayClassIdisUnsignedTypeisShortNameOfUnsignedTypeisCallableTypegetKSuspendFunction	hasFqNamegetKPropertyTypehasKCallableTypeFqNamegetKFunctionTypeisNumberedKMutablePropertyTypehasKPropertyTypeFqNamegetKClassTypeisReflectionClassgetKFunctionisNumberedKPropertyType)isNumberedKPropertyOrKMutablePropertyTypeisNumberedKSuspendFunctionhasKMutablePropertyTypeFqName!isNumberedTypeWithOneOrMoreNumberisKCallableType%isNumberedKFunctionOrKSuspendFunctionisNumberedKFunctionisPossibleExpectedCallableTypeisKClassType#isBaseTypeForNumberedReferenceTypescreateKPropertyStarTypemapPlatformClassmapJavaToKotlin
isReadOnlyconvertMutableToReadOnlyconvertToOppositeMutabilityconvertReadOnlyToMutable	isMutable*getPureArgumentsForFunctionalTypeOrSubtype&getValueParameterTypesFromFunctionType"getFunctionTypeArgumentProjectionscontextFunctionTypeParamsCountgetFunctionalClassKindhasExtensionFunctionAnnotation#extractFunctionalTypeFromSupertypescreateFunctionType'getContextReceiverTypesFromFunctionTypegetReceiverTypeFromFunctionTypereplaceReturnTypewithExtensionFunctionAnnotationisNumberedFunctionClassFqName,extractParameterNameFromFunctionTypeArgument&withContextReceiversFunctionAnnotationisBuiltinFunctionClass"withoutExtensionFunctionAnnotationgetKFunctionDescriptorgetReturnTypeFromFunctionType0getValueParameterTypesFromCallableReflectionTypegetFunctionDescriptorisTypeOrSubtypeOfisFunctionTypeOrSubtypegetAdditionalClassPartsProvidersetPostponedSettingsComputationgetClassDescriptorFactories&createMappedTypeParametersSubstitutiongetJdkMethodStatus createMockJavaIoSerializableTypeisTrivialCopyConstructorForgetAdditionalFunctionscreateCloneForArrayisMutabilityViolationisEffectivelyTheSameAsgetJavaAnalogueconstructMessage"createCoroutineFromSuspendFunctionforEachBlockprintWriterbyteInputStreamprepareNextgetRootLengthsubPathwalkonLeaveonFaildirectoryStateonEnterwalkBottomUpmaxDepthgotoNextwalkTopDowntrimStringBuilderresetAlldecodeEndOfInputcompactBytesupdateCharsetcopyOfRangeToIndexCheckcontentDeepHashCodeImpltoRelativeStringOrNullcreateTempDirresolveSiblingdeleteRecursivelycopyRecursivelytoRelativeStringcreateSetBuildersortedSetOfcreateListBuildertoSortedMapsortedMapOfcreateMapBuildertoPropertiesmapValuesInPlaceretainOrRemoveAllInternal
resetRangesubarrayContentEqualsresetAtsubarrayContentToStringcopyOfUninitializedElementsaddAllInternalinsertAtInternalsubarrayContentHashCoderemoveAtInternalremoveRangeInternalarrayOfUninitializedElementsaddAtInternal	removeKey	findValuekeysIteratornextHashCodeaddKeyhashinitNextentriesIteratorcomputeShiftremoveEntrynextAppendStringputEntryremoveValueputAllEntriescontainsAllEntriesrehashremoveKeyAtcomputeHashSizeremoveHashAt	putRehashfindKeyvaluesIteratorallocateValuesArray	isArrayOfgetClassSimpleNamegetClassQualifiedNamesetUpperBoundsgetMAX_VALUEgetNaNgetPOSITIVE_INFINITYgetNEGATIVE_INFINITYgetMIN_VALUEgetSize	addSpreadnotSupportedErrortoArrayImplcollectionToArraymonitorEntermonitorExitcharsettoBigIntegerOrNullscreenFloatValuetoBigDecimalOrNullappendlnisIdentifierIgnorableisJavaIdentifierStarttoTitleCaseisJavaIdentifierPartcopyOfRangeImplensureUnicodeCasefromIntrangefindNextcreateFormatForDecimalsappendLines
writeLinestoDurationUnit
toTimeUnitcodePointCountcodePointAtinternformatcodePointBeforeoffsetByCodePointstoPath	notExistsPathcreateDirectoriesreadAttributesisExecutableforEachDirectoryEntryfileAttributesViewisHiddenisSameFileAsabsolutePathString
isReadablefileSizesetAttribute	fileStorefileAttributeViewNotAvailablecreateDirectorysetLastModifiedTimefileAttributesViewOrNullcreateTempDirectorygetLastModifiedTime
createFilecreateSymbolicLinkPointingTomoveTocreateLinkPointingTosetPosixFilePermissionsisSymbolicLink
isWritabledeleteExistingabsolutetryRelativeTolistDirectoryEntriesexistsgetAttributeuseDirectoryEntriesgetPosixFilePermissionsreadSymbolicLinkisDirectoryisRegularFiledeleteIfExistsassertsynchronizedasJavaRandominitialValuesetSeedasKotlinRandomexitProcessmeasureNanoTimemeasureTimeMillisIEEEremruntimeOnlytestingimplementationapiElementstestImplementationruntimeElementstestRuntimeOnlydefault
sourceSetstestCompileOnlytestAnnotationProcessorjavaannotationProcessortestResultsElementsForTestruntimeClasspathjavaToolchainstestRuntimeClasspatharchivesdefaultArtifactsmainSourceElements	reportingextcompileClasspathcompileOnlytestCompileClasspathbasemoveFromstateFileForIncludedBuildgetConfiguredModelscheduleRequestedTasksprepareToScheduleTaskscreateControllercreateRootBuildControllercreateProjectregisterProjectsaddIncludedBuilduseForStorecreateValueStoreuseForStateLoadassignSpoolFileloadOrScheduleRequestedTasksloadOrCreateProjectMetadatafactoryinitializeCacheEntryloadOrCreateModelmaybePrepareModelwriteConfigurationCacheStatecreateBuildattachRootBuildfinalizeCacheEntryloadOrCreateIntermediateModelwrapprojectPathForKeywriteDiagnosticstackTraceStringForpropertiesFilegetVariablesbyNamePrefixgetSystemPropertiesgradlePropertyinstantiateValueSourceOfsystemPropertiesPrefixedBy
fileOpenedisSystemPropertyMutatedfileObservedcollectFingerprintForProjectfileCollectionObservedlocationfingerprintOfenvVariablesPrefixedBy
hashCodeOfdisplayNameOfreportInputserviceforIncompatibleType	onProblemonError
newIsolateputInstanceonFinish	readClassbeanStateWriterForwithPropertyTracewriteStateOfbeanStateReaderForisAssignableToreadStateOfnewBeanvisitFileTreeBackedByFilevisitGenericFileTreeprepareForVisitvisitCollectionvisitFileTree
startVisitgetFilesgetRequestedAttributesselect
writeFloat
writeShortwriteDoubleunsupported	readShort	readFloat
readDoubleencodingForTypefinalizeIfNotAlreadyselectedArtifactscomputeArtifactsvisitExternalArtifactsvisitDependenciesvisitTransformSourcesdoDecodedoEncodeencodewhenAgentPresentcallRecursivelessThanOrEqualshasPassedNowhasNotPassedNow
elapsedNowappend!getCanQueryProjectModelInParallel	findModelwhenElementKnownwhenElementFinalizedflatDirmavenCentralartifactTransformdefaultImplementationinternalViewgetModelmodelregisterBindinggetCredentialscredentialssetEnvironmentdirsetConfigPropertieswithArtifacts	afterEach
beforeEachsetProperties
propertieswithNormalizerfacetdomainObjectSetdomainObjectContainernamedDomainObjectListnamedDomainObjectSetdefineforksubmitsetComponentVersionsListersetMetadataSupplier	hasPlugingetDescriptorsystemPropertiesenvironmentregisterIfAbsent	transformdebugprependIndent
sourceDirsserviceRegistryOfpublicStaticMethodgetIdgetStartParametergetRules
findByNameaddRulegetCollectionSchemaaddLatergetNamergetAtgetNamesmatchinggetAsMapwhenObjectRemovedwhenObjectAddedconfigureEachaddAllLaterenforcedPlatformionewScope
getProjectmaybeCreatecontainerWithType polymorphicDomainObjectContainergetMetaClasssetMetaClass
withModulesetTransitive
attributesregisterBuildCacheServiceremoteconstraintsmodulegettingpluginManagementdeletepluginwithTypethemapPropertylistPropertynewInstanceembeddedKotlinkotlindoCallplugins	getByType
findByType	getByName	getPlugin
findPluginversionregisternamedopenparameterNamesForstop
writeClasstoKotlinStringerasefromcompilecompileSecondStageOfhandleScriptExceptionaccessorsClassPathForevaluateSecondStageOfhashOfonReusestartCompilerOperationcachesetupEmbeddedKotlinForrunCompileBuildOperationcachedDirForapplyPluginsToapplyBasePluginsToloadClassInChildScopeOfcloseTargetScopeOfevaluatecachedClassForapplyprogressMonitorForcompilationClassPathOfrequiresAccessorsimportsRequiredByclosevisitIdentityInputsgetWorkspaceProviderloadRestoredOutputvisitOutputsexecuteidentifygetInputFingerprinterpropertywithOptionsrenderTypeConstructorrenderValueParametersrenderFlexibleTyperenderAnnotationrenderTypeArgumentsrenderClassifierNamerenderMessagerenderFqName
renderNamerenderTypeProjectiongetOverriddenDescriptorsdeclaresDefaultValuerenderProperty
renderTyperenderFunctionvisitConstructorDescriptorgetLocalPropertyvisitPropertyDescriptorvisitFunctionDescriptortoDescriptorVisibilityisOverridablegetContractfindClassifierByJavaClasscomputePropertyNames"computeImplicitlyDeclaredFunctionsresolveMethodSignatureisVisibleAsFunctioncomputeMemberIndexcomputeFunctionNamescomputeClassNames	initCachesourcevisitenhanceloadConstanttransformToUnsignedConstant loadAnnotationMethodDefaultValuecommonSupertypeprocessErrorType!getPredefinedInternalNameForClassgetPredefinedTypeForClassgetContainingFileexpandapproximateCapturedTypesprepareTopLevelTypefilterAnnotationssubstitutionResultrenderreplaceDelegatereplaceAnnotationsisAnyassertValidshouldSeeInternalsOf
getPackagegetCapabilityfindMetadataPackagePartsgetPackageFragmentscollectPackageFragmentsgetSubPackagesOfcomputeMemberScopetype
simpleTypehasTopLevelClassgetDispatchReceiverParameterreportSupertypeLoopErrorcreateSubstitutedCopy	isSuspendisFungetModalityisDatagetKindgetUnsubstitutedMemberScopeisExpectgetVisibilityisActualgetStaticScopegetDeclaredTypeParametersgetValueClassRepresentationgetSealedSubclassesgetContainingDeclarationgetCompanionObjectDescriptorisInner
isExternal"getUnsubstitutedPrimaryConstructorisValueisInlinegetNonDeclaredClassifierNamesgetNonDeclaredFunctionNamesdeserializeClasshasClassisDeclaredFunctionAvailableaddEnumEntryDescriptorscomputeNonDeclaredFunctionscomputeNonDeclaredPropertiescreateClassIdgetNonDeclaredVariableNamescheckArguments
callMethodreplaceArgumentsisStubTypeForBuilderInferencegetTypeConstructor
isStubTypecaptureFromArguments
supertypesintersectTypescreateErrorTypeisErrorcaptureFromExpressiontypeConstructorfindAnnotationisSubtypeOfwithNullabilityresetpushpopisMultiFieldValueClassisInlineClasshasNoInferAnnotationhasExactAnnotationareEqualTypeConstructorsisCompanionObjectisSubclassOfafterChildrenresolveClass!resolveFunctionTypeIfSamInterfacereplaceAttributessameTypeConstructor%approximateContravariantCapturedTypescreateCapturedTypemakeNullableAsSpecifiedexcludesexclude)getContributedClassifierIncludeDeprecatedrecordLookupprintScopeStructure
substitutegetClassifierNamesgetContributedDescriptorsgetOriginalgetSyntheticConstructorsisDenotablerefinegetParametersgetDeclarationDescriptoraccept
isComputedcreateLazyValueWithPostComputecreateMemoizedFunction(createRecursionTolerantNullableLazyValuecreateNullableLazyValuecreateCacheWithNullableValues createRecursionTolerantLazyValue&createNullableLazyValueWithPostComputecreateCacheWithNotNullValuescreateLazyValue(createMemoizedFunctionWithNullableValues
initializegetConstructors%getPlatformDependentDeclarationFiltergetFunctionsgetMemberScopebuffereddecodecheckIsMutablereadExternalensureExtraCapacitywriteExternalbuildinvokeappendRange
appendLinevalueOfcloseFinallyusetoSortedSet	writeTextreader
appendTextappendByteswriterinputStreambufferedWriteruseLinesbufferedReader	readLinesreadTextoutputStreamforEachLine	readBytestoUpperCase	uppercase	lowercasetoLowerCase	toPatternmarkNowcreateTempFile
relativeTorelativeToOrSelfrelativeToOrNull
rotateLeftrotateRighttakeLowestOneBitcountTrailingZeroBitscountLeadingZeroBitstakeHighestOneBitcountOneBitsisInitializedtoBigIntegertoBigDecimalnextBitsloggetDelegategetProgressionLastElementdifferenceModulogetSuppressednextIntnextLongnextChar	nextShortnextBytereadwritegetOrDefaultgetStackTraceElementifEmptyisNullOrEmptytoArraygetOrImplicitDefault	nextIndexhasPreviouspreviouspreviousIndexflattenunzipcontainsValuecontainsKey
plusAssign
removeLastfilterInPlaceremoveLastOrNullminusAssignremoveFirstOrNullremoveFirst	removeAllremove	retainAllensureCapacityclearaddsubList
trimToSizelistIteratoraddAllshuffledorEmptytoUByteArraytoULongArraytoUIntArraytoUShortArraycomparereversedArray
sliceArraycopyOfRangereverse
isNotEmptycopyOfshufflecontentEqualssortedArrayfilltoTypedArraysortedArrayDescendingasListcontentToString	getOrElsecontentHashCodecopyIntosortWithsortrandomOrNullstepcoerceAtMostuntilcoerceInrandomdownTocoerceAtLeastreversed
getOrThrow
resumeWithshlshrreadResolvewriteReplaceminusKeysumByrunningReduceIndexedfilterreduceOrNullfilterNotNull	partitionfilterNotTofirst	filterNotany	maxOfWith
mapIndexedassociateToscansinglechunkedassociateWithmaxWithelementAtOrNullindexOfLast
asSequencedistinctfilterIsInstanceTomaxOfOrNullassociateByToziprequireNoNullsminusElement	withIndex
lastOrNull	flatMapToreduceIndexedsortedByDescending	maxOrNullflatMapIndexedonEachelementAtOrElseforEachIndexedsumByDoublemapIndexedNotNullToaveragecountfoldIndexedmaxByOrNullreduce	toHashSet
groupingByzipWithNextsingleOrNulltakeindexOfminOfOrNulljoinToString	groupByTo
distinctByforEachwindowedall
asIterable	minOrNulltoCollection	dropWhileflatMap
mapNotNullmapIndexedToassociateWithTofirstNotNullOfOrNullsortedByfindLastlastmapNotNullTojoinTosummapIndexedNotNullmapminByOrNullmapTorunningReducemaxOfrunningFoldIndexedflatMapIndexedTofilterIndexedTo
sortedWithlastIndexOfonEachIndexedsumOftoSetsortednonegroupByfilterNotNullTominOfminOfWithOrNullrunningFoldfilterIndexedfilterTo	takeWhilefilterIsInstancesortedDescendingindexOfFirstmaxOfWithOrNullreduceIndexedOrNull	minOfWithplusElementtoMutableSetfoldmaxWithOrNullmaxBy	associatefirstNotNullOfminWithOrNulltoListdropminByscanIndexedminWithfirstOrNulltoMutableList	elementAtassociateBymodplustoUBytetoUInttimesdivrangeToremordecinvtoULongtoUShortxorminusincfloorDivandgetsetcontainsAllmaxminiteratornextisEmptyfromClosedRangehasNexthashCodefindtoBytesplitendsWithtoLongtoShortreplaceFirsttoFloatreplace
startsWithsplitToSequence	substringequalstoStringtoCharArraytoDoublematchestoIntcomputeJavaType	getBoundscreatePossiblyInnerTypegetLowerBounds
getRawTypegetOwnerTypegetAnnotatedBoundsgetActualTypeArgumentsgetDeclaredAnnotationsgetTypeNamegetGenericDeclarationgetGenericComponentTypetypeToStringgetJavaVersionapiVersionIsAtLeastcastToBaseTypegetOrSetthreadwithLockfixedRateTimerscheduleAtFixedRatetimerschedule	timerTask	boxDoubleboxFloatboxIntboxCharboxShort
boxBooleanboxByteboxLongprobeCoroutineCreatedprobeCoroutineSuspendedprobeCoroutineResumedgetStackTraceElementImplgetLabelgetModuleNamegetDebugMetadataAnnotationgetSpilledVariableFieldMappingcheckDebugMetadataVersion
runSuspendawaitreleaseInterceptedcreateArgumentsaddPlatformOptions	doExecute)setupPlatformSpecificArgumentsAndServicescreateMetadataVersionexecutableScriptFileNamecreatePerformanceManagerensureItemIteratorconfigureModuleChunkcreateCoreEnvironment configureJavaModulesContentRootsisJvmTarget6AllowedregisterJavacIfNeededsetupJvmSpecificArguments%handleClosureGenerationSchemeArgumentconfigureStandardLibsconfigureKlibPathsaddModularRootIfNotNullconfigureJdkHomeisModularJava"configureContentRootsFromClassPathconfigureAdvancedJvmOptionsaddNewIndexForRootsaddIndexreadClassIdsendatgetClassIdsForRootAtfindJavaSourceClassatClass	tokenTextatRecordfindJavaSourceClassesadvancesearchdoTravelPathfindChildPackage
cachesPath
travelPath
printLinespreRegister	findFieldresolveSupertypesconfigureJdkClasspathRootsaddJavaSourceRootsaddJvmSdkRootsaddJavaSourceRootaddJvmClasspathRootsaddJvmClasspathRootisAtLeastJava9findFileisModularJdkloadJrtFsJarcheckAccessibilityfindJavaModulereadsgetAllDependenciesprocessCompilerPluginsOptionsprocessPluginOptionsloadPluginsSafepackageExistsfindFilesForPackagegetScriptClassesgetFacadeNamesgetKotlinInternalClassesfindFacadeFilesInPackagegetLightClassgetFakeLightClasscreateFacadeForSyntheticFilegetSubPackagesgetFacadeClassesInPackage&findClassOrObjectDeclarationsInPackagegetFacadeClassesgetLightClassForScriptfindFilesForFacadefindClassOrObjectDeclarationsfindSystemModulematchesReleasecodeForcollectModuleRootscreateModuleFromSignatureaddUserModulereportErrorgetClassIdentifierfindImplementationsInDirectory	parseLinefindImplementationsloadImplementations
parseLinesfindImplementationsInJarapplyModuleProperties createSourceFilesFromSourceRootsforAllFilesfindMainFunctionfindInferredAnnotationsisInferredAnnotationfindInferredAnnotationcalcNextassertTimeoutPreemptivelyassertDoesNotThrowevaluateAndWrapassertTimeoutassertThrows	assertAlltraverseDirectoriesInPackageanalyzefindMainClassgetSourceFilesregisterJavacrefreshAndFindFileByPathgetProtocol	getLengthgetChildrengetModificationStampgetTimeStampgetFileSystemgetInputStreamisValidgetOutputStreamrefresh	splitPathfindFileByPathcontentsToByteArraygetPackagePartProvidercontentRootToVirtualFilefindJarRootwriteOutputsfindExistingRoot
findModulesetupCommonArgumentsloadPluginsexecImplreportToMessageCollectoraddKotlinSourceRoots
isAcceptednotifyCompilationFinishednotifyRepeatmain	serializeperformSerializationfindVirtualFileForTopLevelClassfindModulesfindClassByTopLevelClassfindClassInPsiFileforEachClassIdgetNonTrivialPackagePrefixesfindClassesfindPsiClassfindPsiClassInVirtualFilefindVirtualFileGivenPackageconfigureSourceRootswriteOutputgetBuildFilePaths+createOutputFilesFlushingCallbackIfPossibleconfigureFromArgsanalyzeFilesWithJavaIntegrationcreateModuleContextcreateContainernewModuleSearchScopetryLoadModuleMappingaddRootscreateCoreFileManager-registerVersionSpecificProjectExtensionPoints)registerVersionSpecificAppExtensionPoints
runBackend)createComponentsForIncrementalCompilationcompileModulecompileModulesUsingFrontendIRrunFrontend toAbstractProjectFileSearchScopeasPsiSearchScopetoAbstractProjectEnvironmentgetSearchScopeByDirectoriestoSearchScopegetFirJavaFacadegetKotlinClassFindergetSearchScopeByIoFilesgetSearchScopeByPsiFilesgetJavaModuleResolvergetSearchScopeBySourceFiles#getSearchScopeForProjectJavaSourcesregisterAsJavaElementFinder!getSearchScopeForProjectLibrariesaddPackagePartProvider getAnnotationsOnContainingModulesetupHighestLanguageLeveldoSetupcheckInHeadlessModeanalyzeAnnotationpossiblyHasAliasresolveToDescriptorgetUltraLightClassSupportanalyzeWithContentcreateDataHolderForFacade
getContextcreateDataHolderForScriptcreateDataHolderForClasssetupIdeaStandaloneExecutiontoSafeTopLevelClassIdtoSafeFqNamesafelyfindBinaryClassfindVirtualFileWithHeaderfindBinaryOrSigClassfindSourceClassfindSigFileIfEnabledfindSourceOrBinaryVirtualFilesetKotlinCodeAnalyzerisExternalAnnotationisExternalAnnotationWritablehasAnnotationRootsForFilefindExternalAnnotationsFilesfindExternalAnnotationchooseAnnotationsPlacefindExternalAnnotations
deannotate)findDefaultConstructorExternalAnnotationschooseAnnotationsPlaceNoUieditExternalAnnotationannotateExternallycreateTrace
runCodegenconvertToIrcompileBunchOfSourcesrepeatAnalysisIfNeededcompileModulesrunLoweringsanalyzeAndGenerategetKlibModulesgetModuleDescriptorByLibrarymodularBinaryRootreadManifestAttributesmodularSourceRoot tryLoadVersionSpecificModuleInfofindSourceModuleInfocomputeRootscomputeDefaultRootModulesconvertClasspathRootsaddModularRoots createProjectEnvironmentForTestscreateForProductioncreateApplicationEnvironmentdisposeApplicationEnvironment!registerApplicationServicesForCLIregisterExtensionsFromPlugins!getOrCreateApplicationEnvironmentunderApplicationLockupdateClasspathregisterProjectExtensionPointsfindLocalFile)getOrCreateApplicationEnvironmentForTestscreateForTestspreregisterServices.getOrCreateApplicationEnvironmentForProductioncollectAdditionalSourcesregisterApplicationServicescreatePackagePartProvider#getSourceRootsCheckingForDuplicatesregisterJavaPsiFacade3registerApplicationExtensionPointsAndExtensionsFromregisterProjectServicesregisterKotlinLightClassSupportregisterPluginExtensionPointsregisterProjectServicesForCLIupdateClasspathFromRootsIndexconfigureProjectEnvironmentcountLinesOfCodeprepareCleanerCallbackclearHandlersCachecreateIfUnmappingPossiblegetNameSequenceinitChildrenArrayFromListgetOrCreateDirectoryparseCentralDirectorygetUnsignedShortcompileModuleToAnalyzedFirconvertAnalyzedFirToIr&createContextForIncrementalCompilationgenerateCodeFromIr)compileModulesUsingFrontendIrAndLightTreecreateSessioncreateProjectEnvironmentincrementalCompilationIsEnabledgetLibraryFromHome$incrementalCompilationIsEnabledForJstoLoggercheckKotlinPackageUsageformatMeasurementphaseSetFromArgumentscreatePhaseConfigcomputeEnabledrecordGcTimenotifyIRGenerationStartednotifyIRTranslationStartedcreatePerformanceReportnotifyIRLoweringStartednotifyGenerationFinishednotifyIRGenerationFinishedrecordJitCompilationTimeaddSourcesStats%enableCollectingPerformanceStatisticsrecordInitializationTimenotifyIRLoweringFinisheddumpPerformanceReportnotifyCompilerInitialized	deltaTimegetMeasurementResultsrecordPerfCountersMeasurementsnotifyIRTranslationFinishedrenderCompilerPerformancenotifyAnalysisStartednotifyGenerationStartedgetTargetInfonotifyAnalysisFinisheddoMainNoExitprintVersionIfNeededparseArgumentsdefaultMessageRendererdoMaindisableURLConnectionCachesaddFriendPath	addModule"reportUnsafeInternalArgumentsIfAnyreportArgumentParseProblemscomputeKotlinPathssetupLanguageVersionSettingsexecAndOutputXml,tryLoadScriptingPluginFromCurrentClassLoaderhasOOMCauseexecFullPathsInMessagesreportCompilationCancelledthrowFirstErrorAsExceptionreportSpecialErrorsreportByFile"reportDiagnosticToMessageCollectorthrowErrorDiagnosticAsExceptionfindNextPositionreadNextLineaddKotlinSourceRoot
writeAllTowriteAllrenderPreamblerenderConclusionrenderUsageanalyzeAndReportreportDiagnosticreportDiagnosticsreportIncompleteHierarchies reportAlternativeSignatureErrorsconvertSeverityreportSyntaxErrorslocationToCLILocationseverityToCLISeverityloadAsyncProfilerClassstopProfilingrestartProfilingstartProfilingdumpProfilemakeReplCompilershouldUseTypeTablerunCommonAnalysisIteration!runCommonAnalysisForSerializationserializeBuiltInsFilecreateSerializerExtensionserializeStringTableserializeMembersserializeClassesgetClassFilePathgetPackageFilePathdependencyOnBuiltInsmoduleDescriptorForModuleInfo'packageFragmentProviderForKotlinLibrary$packageFragmentProviderForModuleInforegisterDependencyForAllModulesisForeignClientOnServergetStackTracetryGetInstancedecorateBiConsumertrySetCurrentClientIddecorateRunnabledecorateFunctionoverrideLocalIddecorateCallabledecorateProcessor	isLocalIdwithClientIdimmutableSetOftoPersistentSetimmutableHashMapOftoImmutableSettoImmutableMappersistentSetOfimmutableMapOfimmutableListOfimmutableHashSetOfpersistentHashMapOftoPersistentMaptoImmutableListtoPersistentHashMaptoPersistentHashSetmutatetoPersistentListpersistentMapOfpersistentHashSetOfpersistentListOfreplaceNodeWithEntryinsertEntryAtIndexreplaceEntryWithNode	resetPathmoveToNextKeycurrentNode
hasNextKeymoveToNextNodehasNextNodemoveToNextNodeWithDataensureNextEntryIsReady	hasNodeAtcollisionRemovemoveEntryToNodeupdateNodeAtIndexcollisionGetmutableInsertEntryAt
entryCountinsertEntryAtreplaceNodemutableRemovemutableCollisionPut	nodeIndexmutableUpdateValueAtIndexbufferMoveEntryToNodemutableMoveEntryToNode"mutableCollisionRemoveEntryAtIndexnodeAtIndexcollisionPutmutableUpdateNodeAtIndexasUpdateResultmutableCollisionRemove
keyAtIndex
mutablePutentryKeyIndexupdateValueAtIndexcollisionRemoveEntryAtIndexasInsertResultvalueAtKeyIndexmutableRemoveEntryAtIndexcollisionContainsKey
hasEntryAtbufferOfSizefillPathIfNeededelementAtCurrentIndexfillPathsetupTrieIteratorcheckHasIteratedcheckHasPreviouspresizedBufferWithpersistentVectorOfleafBufferIteratorshiftLeafBuffersgetModCountsplitToBuffersnullifyAfterrecyclableRemoveAllmutableBufferWithmakeMutablemakeMutableShiftingRighttailSizepushBuffersretainFirstremoveAllWithPredicateremoveAllFromTailmutableBuffercopyToBuffer#pushBuffersIncreasingHeightIfNeeded	withValuecreateAnnotationSerializerserializeErrorTypecreateMessageCollectorcreateCloneableensurePresentasContextElement	isPresentfillInStackTracehandleFatalExceptiononCompletedonCancelled
disposeAlljoinAllawaitAllwithTimeoutOrNullwithTimeoutsetupTimeoutTimeoutCancellationExceptionrecoverResulttoStatecoroutineScopeCoroutineScope	MainScopecurrentCoroutineContextisHandlerOfCoroutineExceptionHandlerhandlerExceptionhandleCoroutineExceptionhandleExceptionresumeWithStackTracerunUnconfinedEventLoopresumeUnconfinedasCoroutineDispatcher
asExecutor	getString
reschedulecreateEventLoopprocessNextEventInCurrentThreaddisposeOnCancellation"getOrCreateCancellableContinuationremoveOnCancellation#suspendCancellableCoroutineReusablesuspendCancellableCoroutinewithCoroutineContextwithContinuationContextundispatchedCompletionupdateUndispatchedCompletionnewCoroutineContextcreateDefaultDispatcherSupervisorJob0SupervisorJobsupervisorScoperunBlockingwithContextasynclaunchresetEventLoopcurrentOrNullsetEventLooptryMakeCompletingloopOnStatestateStringselectAwaitCompletiongetCompletedInternalcancelCoroutineawaitInternal
sealLockedawaitSuspendtryWaitForChildtoCancellationExceptionmakeCompletingOncemakeCancellingcancelParentgetOrPromoteCancellingListcompleteStateFinalizationallocateList
firstChild	nextChildpromoteEmptyToNodeListtryMakeCompletingSlowPathregisterSelectClause1InternaladdExceptionLockedinitParentJobpromoteSingleToNodeListstartInternal
cancelImplgetFinalRootCausecontinueCompletingtryMakeCancellingdefaultCancellationException
removeNodecreateCauseExceptionmakeCompletingcancelMakeCompletingfinalizeFinishingStatejoinInternaltryFinalizeSimpleStateaddLastAtomicnotifyCancellingaddSuppressedExceptionsnotifyHandlerscancelInternaljoinSuspendnotifyCompletionjoinBlockinginvokeHandlersdelayToNanosdelayNanosToMillis
closeQueuetimeToExecutescheduleImplrescheduleAllDelayedshouldUnparkscheduleInvokeOnTimeoutdequeuescheduleTaskenqueueImplboxIncomplete
unboxStatemakeHandledhandleCoroutineExceptionImpldispatchYieldisGoodCommonPoolusePrivatePoolcreatePlainPoolrestoreTry
createPoolgetOrCreatePoolSyncensureStartedcreateThreadSyncnotifyStartupacknowledgeShutdownIfNeededtoDelayMillisawaitCancellationdispatchUnconfineddecrementUseCountprocessUnconfinedEventincrementUseCountdeltanewSingleThreadContextnewFixedThreadPoolContextsetupinvalidStateclearInterrupt	afterTaskaddSuppressedThrowabletryResumeImplcallCancelHandlercallCancelHandlerSafelyresumedStatealreadyResumedErrormultipleHandlersErrormakeCancelHandlerdispatchResumedetachChildcancelLaterinstallParentHandle"releaseClaimedReusableContinuationcallOnCancellationresetStateReusable
resumeImpldetachChildIfNonResuablesaveThreadContextclearThreadContextdisposeOnCompletioncancelChildrenorCancellationJob0JobcancelAndJoinDisposableHandlecancelFutureOnCancellationcancelFutureOnCompletionRunnablerunInterruptible!runInterruptibleInExpectedContexthandlesExceptionCompletableDeferredcompleteWithtoStringInternalImplinvokeItmakeResumedresetCoroutineIdinitFutureCancellationscheduleBlockcancelJobOnRejectiontryEmitNoCollectorsLocked#correctCollectorIndexesOnDropOldestfindSlotsToResumeLocked
awaitValueupdateCollectorIndexLockedenqueueLockedcancelEmitterupdateNewCollectorIndexLocked
growBufferdropOldestLockedtryTakeValuetryPeekLockedemitSuspendcleanupTailLockedupdateBufferLockedtryEmitLockedgetPeekedValueLockedAtawaitPendingtakePendingmakePendingmarkConsumedMutableStateFlowfuseStateFlowcombineUnsafeisSameExceptionAsshareInemitAllImpl	subscribeflatMapConcatemitAllscanFoldflatMapLatestflowWith	catchImplflowOfasStateFlowcallbackFlowtransformLatestpublish	startWithasFlowbufferinvokeSafelydistinctUntilChangedBylaunchSharingconsumeAsFlowchannelFlowsampleflattenMergeisCancellationCause	concatMapflowViaChannelcompose	observeOnonCompletion	switchMapbroadcastInonEmptycollectLatestmerge	delayEach
concatWithstateIntransformWhilenullArrayFactorydebounceInternalreplay	mapLatestflatMapMerge	emitAbortlaunchInconfigureSharingonErrorResume	delayFlowlaunchSharingDeferredcombineTransformonErrorReturndebouncecollectWhilesubscribeOncombineLatestunsafeTransform
scanReducecollectIndexedcombineTransformUnsafeonErrorResumeNextonErrorCollectflow	produceInasSharedFlow	emptyFlowflattenConcatreceiveAsFlowcheckFlowContext	publishOngetBufferAtMutableSharedFlowfuseSharedFlowsetBufferAtasChannelFlow withUndispatchedContextCollectorwithContextUndispatchedallocateSlotfreeSlotforEachSlotLockedcollectWithContextUndispatchedcheckOwnershiptransitiveCoroutineParent
unsafeFlowcombineInternalzipImplexceptionTransparencyViolated
scopedFlow	flowScopeflowProduceMutex	SemaphorecreateSegment
withPermitacquireSlowPathaddAcquireToQueuetryResumeAcquiretryResumeNextFromQueue	getAndSetcaswithTestContexttryResumeLockWaiterlockSuspendcompleteResumeLockWaiterinstallSignalHandlerpremainassertAllUnhandledExceptionsassertAnyUnhandledExceptionadvanceTimeToassertExceptionscancelAllActionstriggerActionsadvanceTimeBypostDelayedassertUnhandledExceptionyieldFrameslastObservedStackTracecreationStackTracecleanWeakRefkeyValueIteratordecrementSizeputSynchronizedgetImplputImplremoveCleanedAt+runWeakRefQueueCleaningLoopUntilInterruptedtoStackTraceFramecreateOwnerhierarchyToStringinstalldumpCoroutinesstartWeakRefCleanerThreaddumpCoroutinesInfoImplstopWeakRefCleanerThreaddumpDebuggerInfoenhanceStackTraceWithThreadDump
isFinished	uninstall
realCallerdumpCoroutinesSynchronizedgetDynamicAttachfindIndexOfFrameownerprobeCoroutineCompletedupdateRunningState#enhanceStackTraceWithThreadDumpImpldumpCoroutinesInfofindContinuationStartIndexselectUnbiasedwhileSelectinitSelectResultfixedDelayTickertickerupdateValueLockeddoResumeundoPrepareprepareSelectOpcompleteSelectdoAfterSelectclosedpeekUnderLockneedsToCheckOfferWithoutLockcheckSubOffers
checkOffercomputeMinHeadnext0
awaitCloseproduceresumeValuedescribeTryPollonReceiveEnqueuedonReceiveDequeuedregisterSelectReceiveModeenqueueReceivehasNextResulthasNextSuspendenqueueReceiveSelectreceiveSuspendtryStartBlockUninterceptedremoveReceiveOnCancel	broadcastBroadcastChannelChannelonClosedtrySendBlocking	toChannelconsumeonReceiveOrNullconsumesconsumesAllsendBlockingconsumeEachcancelConsumedcloseSubscriberremoveSubscriberaddSubscriberupdateBufferSizeenqueueElementtoResultactorhelpCloseAndGetSendExceptiononClosedIdempotent#helpCloseAndResumeWithSendExceptioncountQueueSizedescribeTryOffer	helpClosetakeFirstSendOrPeekClosedsendSuspendsendBuffereddescribeSendBufferedfindSegmentInternalcallUndeliveredElement'callUndeliveredElementCatchingExceptionbindCancellationFundecide
trySetNext	cleanPrevmarkAsClosednextOrIfClosedisEarlierThanexecuteUnconfinedyieldUndispatchedremoveAtImpl
siftUpFromsiftDownFromremoveFirstIfreallocaddImpl	firstImpl
systemPropmissingidentitySetremoveFutureOnCancelsubscriberListcreateMissingDispatchertryCreateDispatcher#throwMissingMainDispatcherException	isMissingthreadContextElementstryIncPointersonSlotCleaneddecPointersunboxremoveSlowPath
markFrozenfillPlaceholder
updateTailwo	withStateallocateNextCopyallocateOrGetNextCopyaddFailReasonloadMainDispatcherhintOnErrorvalidatetryReleaseClaimedContinuationresumeUndispatchedWithpostponeCancellationresumeCancelled$claimReusableCancellableContinuationawaitReusabilitycreateInstanceOfloadMainDispatcherFactoryloadProvidersgetProviderInstance	parseFilefinishPreparecorrectPrevaddLastIfPrevAndIfdescribeRemoveFirst	finishAddupdatedNextaddLastIfPrevdescribeAddLasttakeAffectedNodehelpRemovePrevaddNextvalidateNode!removeFirstIfIsInstanceOfOrPeekIfmakeCondAddOpfinishOnSuccessaddOneIfEmptyfindPrevNonRemoved
helpRemoveremovedremoveOrNexttryCondAddNextforEachReversedtryCopyExceptionsafeCtorfieldsCountfieldsCountOrDefaultrecoverFromStackFrameisArtificialcauseAndStacktracemergeRecoveredTracesrecoverAndThrow
frameIndex
unwrapImplcreateStackTracerecoverStackTrace	initCauseelementWiseEqualsartificialFramecreateFinalExceptionstartCoroutineCancellableundispatchedResultstartCoroutineUninterceptedstartCoroutineUndispatchedstartUndispatchedOrReturnstartDirect&startUndispatchedOrReturnIgnoreTimeoutisSchedulerWorkermayNotBlockoffloadAllWorkTopollTotryStealBlockingFromtryStealLastScheduleddecrementIfBlocking
pollBuffertryStealFromlimiteddispatchWithContextcreateSchedulerblockingusePrivateSchedulertryParkpollGlobalQueues	runWorker	idleResetsubmitToLocalQueueavailableCpuPermitsfindTaskparkedWorkersStackNextIndexaddToGlobalQueueincrementBlockingTasksreleaseCpuPermittryAcquireCpuPermit	tryUnparkparkedWorkersStackTopUpdatetryTerminateWorkerfindAnyTaskparkedWorkersStackPopexecuteTaskincrementCreatedWorkerstryReleaseCputryStealcreatedWorkerscurrentWorkerblockingTasksparkedWorkersStackPushdecrementBlockingTaskssignalBlockingWorkdecrementCreatedWorkerstryCreateWorkerinStackcreateNewWorkersignalCpuWork
beforeTaskpark
decodeLoop
encodeLoopwriteInputPropertyvisitOutputFilePropertyvisitInputPropertywritePropertywriteOutputPropertyvisitDir	visitFile
getServicewithWorkspace
sourceFileaddSuperTypesOfmsg	taggedMsggetStagegetLanguageisProjectRoot
updateWithcollectSourceFragmentnonPrimitiveKotlinTypeinferLocationFromscriptStackTraceElementcheckForFailurematchTopLevelIdentifier%createPrecompiledScriptPluginsSupportcreateProjectSchemaProvider'createKotlinScriptBasePluginsApplicatorwithOutputDirectorylineNumberPreservingTextOfwritePluginsBlockTopluginsBlockOf'extractPrecompiledScriptPluginPluginsTopackageDeclarationOfextractoutputFileForpackageDirForinferPublicTypeOfConventiongetPublicTypeaccessibleContainerSchemaaccessibleConventionsSchemaisPublictoConfigurationEntrycollectSchemaOftoFirstKotlinPublicOrSelfaccessorTypePrecedenceSequenceaccessibleConfigurationsOftargetSchemaForsourceSetsOfscriptClassNameForFile	replaceBypackageNameOfasJavaIdentifierscriptPluginFilesOfkebabCaseToPascalCasepackagePrefixedkebabCaseToCamelCaseregisterBuildScriptModelTask"configureScriptResolverEnvironmentcompileKotlindeclareScriptPluginsexposeScriptsAsGradlePluginsbuildDircollectScriptPluginFilescodeGenerationTaskvalidateScriptPluginwithInstancegeneratePluginAdaptersForenableScriptCompilationOf+configureScriptResolverEnvironmentOnDoFirstcreatePackageDirInpackagePathonConfigureconfigureImportsresolverEnvironmentStringFor
packageDirwriteScriptPluginAdapterTo*implicitImportsForPrecompiledScriptPluginssharedAccessorsPackageForfingerprintHashFor	sourceDirreduceGraph"projectDependenciesSourceRootsFromprojectDependenciesIdentifiersgenerateSourcePathFile configureBuildSrcSourceRootsTaskallSourceSetsRootswithJavaBasePlugindisableVerificationTasks
countLinesreadLinesRangeruntimeFailuresLocatedIn reportRuntimeExceptionsLocatedInruntimeFailureLocatedInfirstLocationAwareCauseOrNullreportExceptionsNotLocatedIn!messageForLocationAwareEditorHintinferEditorReportsFromwholeFileWarninglineWarninganyNotLocatedInfindLocationAwareExceptionsapplyPluginsresolvePluginGraphOfvalidatePluginRequestsOfcreatePluginsClassLoaderprojectSchemaForuniqueTempDirectorynewBuildscriptSourceForcollectPluginRequestsOfselectProjectPluginsbuildLogicClassPathfailedToGenerateAccessorsForpluginRequestsOf#projectSchemaBuildStartParameterForcompiledPluginsClassPathprojectRelativePathOf"projectSchemaImpliedByPluginGroupsimplicitImportFileForrecreateTaskDirectoriescompiledScriptClassFile(writeContentAddressableImplicitImportForwriteTypeSafeAccessorsForpluginsAppliedByhandleNonStrictModeDeprecationpluginRequestCollectorForscriptPluginPluginsForgetAllInitScriptsgenerateTypeSafeAccessorsForreportProjectSchemaErrorvalidationErrorForcommonPrefixOfcollectKotlinDslScriptsdehydrateScriptModelsbuildForparameterFromRequestgetScriptModelshydrateScriptModelrequireRootProjectmapEditorReportskotlinScriptFactoryOfprojectScriptModelBuilderexceptionToStringprojectScriptPluginModelBuilderfindProjectWithBuildFile settingsScriptPluginModelBuilderinitScriptModelBuilder%compilationClassPathForScriptPluginOfscriptModelBuilderForenclosingSourceSetOf
buildModelcanonicalFilegradleSourceisSettingsFileOfsettingsScriptModelBuilderfindSourceSetOffindSourceSetOfFileInrequestParameterOfsafeCompilationClassPathOftextResourceScriptSourcekotlinBuildScriptModelForgetEnclosingScriptProjectDirscriptHandlerFactoryOfsourceLookupScriptHandlersFor#precompiledScriptPluginModelBuilderresolveSourcesUsingcontainsBuiltinKotlinModuleskotlinLibSourcesForclasspathDependenciesOfresolveKotlinLibSourcesUsingversionCatalogslibsgetNonStrictParentOfTypereportElementcheckTypeParcelerUsagefqName$checkIfTheContainingClassIsParcelizegetStrictParentOfTypecheckWriteWithUsagecheckIgnoredOnParcelUsagehasCustomParcelercheckParcelableClassPropertycheckParcelableClassMethodcheckParcelableClasshasIgnoredOnParcelisDescribeContentsmakeValueParameterresolveParcelClassTypeisWriteToParcel'getSyntheticCompanionObjectNameIfNeededgenerateSyntheticMethodsgetSyntheticFunctionNames!resolveParcelableCreatorClassTypeparcelReadValueparcelWriteParcelableparcelReadStringparcelReadIntparcelWriteValueparcelReadParcelableparcelWriteStringtextUtilsWriteToParcelparcelWriteIntclassGetClassLoadergetTextUtilsCharSequenceCreatorwriteNewArrayMethodwriteCreatorConstructorwriteCreatorAccessFieldgetCompanionClassTypewriteCreatorClasswriteCreateFromParcelgetPropertiesToSerializewriteWriteToParcelcontainsFileDescriptorgetTypeParcelersdoGenerateBodywriteDescribeContentsFunctionnewRecordComponentasBytesgetClassBuilderModeparcelerNewArrayparcelableWriteToParcelkClassToJavaClassforUntiloverridesFunctionInisSubclassOfFqName!parcelableCreatorCreateFromParceljavaClassReferenceparcelerSymbolByNameparcelerCreatekClassReferencegetMethodWithoutArgumentsparcelerWritevisitElementvisitFunctionReferencecreateIrBuilderaddOverridevisitSimpleFunctiondeferhasCustomSerializergetCustomSerializergetParcelerScopewrapNullableSerializerIfNeededwriteParcelwriteParcelWithlistSymbols
readParcel
mapSymbolsreadParcelWithisSizeisSparseIntArrayisExceptionisSparseLongArrayisFileDescriptormatchesFqNameWithSupertypesisParcelableisNamedObjectmapTypeSafeisPrimitivefindParcelerClassisSizeFisSparseArrayfindCreatorFieldfindCustomParcelerTypeisBundleisSerializableisIInterface	isIBinderwrapToNullAwareIfNeededmatchesFqNameisBoxedPrimitiveisBlobisSparseBooleanArrayisPersistableBundlehasSyntheticDescribeContentshasCreatorFieldhasSyntheticWriteToParcelhasParcelizeSyntheticMethodcreateBuilder$getJavaIdentifierNameForResourceNameandroidIdToNameisWidgetTypeIgnoredforEachUntilLaststartDocument
endElementstartElementendDocumentcreatePackageFragmentgetPackageFragmentProviderdoWriteValuegetIteratorputObjectOrClassInstanceOnStackforUnboxedTypeboxTypeIfNeededreadValueNullAwarewriteValueNullAwareforBoxedTypecastIfNeededunboxTypeIfNeededhandleSpecialBoxingCasesdoReadValuegetAllChildrengetModuleDatapropertyToXmlAttributesparseAndroidResourceextractResourcesfilterDuplicatesgetVariantDatacachedValuecreateMainVariant	sameClasspartiallyDefinedregisterParcelExtensionsregisterProjectComponentsparseCacheImplementationTypeprocessOptionparseVariantregisterViewExtensionsregisterModuleComponentsgenPropertyForFragmentgenPropertygenPropertyForWidgetgenClearCacheFunctioninitSAXgetContainerTypeInternalgetViewFromCacheputViewToCache
clearCache	loadCache$findLeftOutermostQualifiedExpressioncheckPartiallyDefinedResourcecheckDeprecatedcheckUnresolvedWidgetTypegetCacheFieldcreateFieldgetCachedFindViewByIdFun
irSafeCallcallWithRangesdeclareParameterStub	irSafeLet	irBuildergetClearCacheFundeclareFunctionStubirFindViewByIddeclareTypeParameterStubirElvisgetEnumValueapplyPropertygetCacheOrDefaultgenerateResourcePropertyCallapplyFunction*generateClearFindViewByIdCacheFunctionCallshouldCacheResource getReceiverDeclarationDescriptorgenerateCacheField"generateCachedFindViewByIdFunctionloadIdgenerateClearCacheFunctionputSelectorForFragmentputSelectorgetResourceIdgetWidgetReceiverscreateResolveContextisModuleMappingFileprepareSubstitutionisSubstitutableserializeToStringdeserializeFromStringdeserializeFromPlainTextserializeToPlainTextrelativizeIfPossiblepathsAsStringrelativeOrCanonicalreportVerbosereportCompileIterationmeasureaddTimeMetricMsasMapMs	addTimeNsasMapNs	addTimeMs	escapeXmlgetEscapedPathcloseTagopenTagprocessJavaSourceRootsprocessClasspathwriteBytesWithSizereadBytesWithSizeconvertToProtogetFileContentscollectSignaturecollectRemovedMemberscollectAllFromClasscollectProtoChangesprotoDataRemovedcollectMemberIfValueWasChangedaddChangedParentscollectChangedParentscollectAllFromPackage
collectAllcollectChangedMembersgetNonPrivateMemberNamescollectRemovedMembercollectChangedMembergetSetchangesprotoDataChangesgetNonPrivateNamesmkdirsOrThrowdeleteRecursivelyOrThrowisKotlinFileisClassFile
isJavaFilecleanDirectoryContentsserializeFunctiongetSortedCallableDescriptorsserializePropertyserializeClassgetCallableMembersserializeConstructorshouldUseNormalizedVisibilityrecordRemove	recordSetaddFileIfNeededremoveGarbageForTestsremoveLookupsFromforceGCgetIncrementalCachenames
oldToNamescalcDifferenceForMembersnamecalcDifferenceForEqualHashes"calcDifferenceForNonPrivateMemberscalcDifferenceForNames
newToNamesmapClassesFqNamesToFilesgetDirtyDatamakeCompileServiceswithSubtypesmakeModuleFilesanitizeJavaIdentifiermapLookupSymbolsToFilesupdateIncrementalCacheregisterOutputForFilenonDirtyPackagePartsupdateSourceToOutputMappackageMetadatahasHeaderFilekeysnonDirtyIrPartscompareAndUpdategetProtoDatagetOutputsBySourcereadArrayOrNullscopeFqNameisJavaClassToTrackaddPackagePartsaveJavaClassProtoisMultifileFacadesaveFrontendClassToCachegetObsoleteMultifileClassesstoreModuleMappingmd5dumpCollectioncollectClassChangesByFeMetadata
createFromgetConstantsAndInlineFunctionssourceInCachesourcesByInternalNamesaveFileToCachegetObsoletePackagePartsgetPackagePartDataisPackagePartsaveClassToCacheisJavaClassAlreadyInCachegetStableMultifileFacadePartsfunctionNameBySignatureisTrackedFileputAndCollectgetObsoleteJavaClassesgetAllPartsOfMultifileFacadegetModuleMappingDatadumpMaptoStringPropertiesdebugLogsaveModuleMappingToCacheclassesBySourcesaddToClassStorageupdateComplementaryFilesgetComplementaryFilesRecursivegetSourceFileIfClassclassesFqNamesBySourcesgetSubtypesOfgetSupertypesOfaddDependentCacheremoveAllFromClassStoragetoPathstoFilesasFqNameasNamecloseForTestregisterMapforEachMapSafegetDirtyOutputClassesnotDirtyisDirtyclearOutputsForSource
getFqNamestoGeneratedFileloadFromFile
readStringfromByteArrayfindOwnNameOrDeclare	exitScopeglobalNameFor	exitCatchexitFunctionlocalNameFor
enterCatchreferenceFor&isAnnotatedWithContainerMetaAnnotation
createNode#advanceWhitespacesCheckIsEndOrArrowisReparseableBlock
isParsablecreateCompositeNodeparseContentsisAllowedParentNodegetErrorsCountisDiagnosticSuppressedcollectSuppressAnnotationKeystoSourceElementaddIfStringConstatFirstValidFrom"getClosestAnnotatedAncestorElementgetSuppressingStringsensureRootProcessedgetKotlinBlockImbalanceCountgetOperationSymbolisExpressiongetContentsAsStreamtoKtPsiSourceElementunwrapToKtPsiSourceElementfakeElementtoKtLightSourceElementrealElementgetStartOffsetdisposeChildrengetEndOffsetgetRootgetLineByOffsetreadSourceFileWithMappinggetLineAndColumnByOffsettoSourceLinesMappinggetLineStartOffsetcheckEqualsClassSupertypeId$checkEqualsClassSealedSubclassFqName#checkEqualsClassContextReceiverType&checkEqualsPropertyContextReceiverTypeoldGetIndexOfString checkEqualsFunctionTypeParameter4checkEqualsClassMultiFieldValueClassUnderlyingTypeId!checkEqualsFunctionValueParameter&checkEqualsTypeAliasVersionRequirementcheckEqualsClassFunctionoldGetTypeById&checkEqualsFunctionContextReceiverType2checkEqualsClassMultiFieldValueClassUnderlyingType%checkEqualsClassContextReceiverTypeIdcheckEqualsPackagePropertycheckEqualsClassProperty(checkEqualsFunctionContextReceiverTypeIdcheckEqualsClassNestedClassNamecheckEqualsPackageFunctionnewGetTypeByIdnewGetIndexOfClassIdcheckEqualsTypeAliasAnnotationcheckEqualsClassEnumEntry%checkEqualsFunctionVersionRequirement(checkEqualsPropertyContextReceiverTypeIdcheckEqualsTypeArgument-checkEqualsVersionRequirementTableRequirement$checkEqualsConstructorValueParameternewGetIndexOfStringcheckStringEquals!checkEqualsTypeAliasTypeParametercheckEqualsClassTypeAliascheckClassIdEquals"checkEqualsTypeParameterUpperBound"checkEqualsClassVersionRequirementgetIndexOfString$checkEqualsTypeParameterUpperBoundIdcheckEqualsClassSupertypecheckEqualsContractEffect checkEqualsExpressionAndArgument(checkEqualsConstructorVersionRequirementcheckEqualsClassTypeParametercheckEqualsExpressionOrArgumentgetIndexOfClassIdcheckEqualsPackageTypeAlias checkEqualsPropertyTypeParametercheckEqualsAnnotationArgumentcheckEqualsClassConstructor*checkEqualsEffectEffectConstructorArgument2checkEqualsClassMultiFieldValueClassUnderlyingNameoldGetIndexOfClassId.checkEqualsAnnotationArgumentValueArrayElement%checkEqualsPropertyVersionRequirementtransformStatementfindPsiElementgetLineOffsetsgetRecognizableNamekSuspendFunctionN
kFunctionNdeepCopySavingMetadataexcludeRepeatedcollectRealOverridestoKeycollectAndFilterRealOverridesresolveFakeOverridegetPropertySetterhasEqualFqNamecompanionObjectisAnnotationWithEqualFqNamegetPropertyDeclarationfilterOutAnnotationsgetPlaceholderParameterNamesdumpConstructorValueArgumentsindentedordered	dumpItemsgetTypeParameterNamesshouldSkipDumpdumpTypeArgumentsgetValueParameterNamesForDebug	withLabelgetFullTypeParametersListdumpInternaldumpLabeledElementWithdumpAnnotationsdumpElementsdumpTreesFromLineNumbergenerateValueParameterStubgenerateStubBySymbol$generateOrGetScopedTypeParameterStubgenerateEnumEntryStubgenerateTypeAliasStubgenerateOrGetTypeParameterStub-generateOrGetEmptyExternalPackageFragmentStubgenerateClassStubgetEffectiveModalitygenerateOrGetFacadeClassgenerateConstructorStubgenerateFunctionStubgenerateFieldStubcomputeOrigingenerateMemberStubgeneratePropertyStub$remapDeclaredExternalPackageFragmentremapDeclaredTypeAlias remapDeclaredFilePackageFragmentremapDeclaredScript#remapDeclaredLocalDelegatedProperty
remapTypesgenerateEqualsMethodBodybuildMember.generateSyntheticFunctionParameterDeclarationsgenerateHashCodeMethodBodygetIrPropertycommitSubstitutedirThisirOthergenerateHashCodeMethodgenerateToStringMethodBodygetHashCodeFunctionInfogetHashCodeOf
addToClassgetHashCodeOfPropertyclassNameForToStringshiftResultOfHashCodeirGetPropertygenerateToStringMethodgenerateCopyFunctiongenerateEqualsMethodgenerateComponentFunctionsignatureStringsignatureMangle	fqnManglemangleFieldString	fqnStringhashedMangleisPlatformSpecificExportmangleStringmangleEnumEntryString
isExportedgetImmediateSupertypesisFunctionMarkergetPrimitiveArrayElementTypeisClassWithNamecollectAllSuperclassesisClassWithNamePrefixisSuspendFunctionOrKFunctiongetAllSuperclassesisTypeFromKotlinPackagecollectAllSupertypesisKSuspendFunctionisSuspendFunctionisFunctionOrKFunctiongetAllSubstitutedSupertypesfindDescriptorBySignature"declareSimpleFunctionWithOverridesgetReferencedremapSymbolgetDeclaredwithinScopevisitPackageFragmentpatchDeclarationParentshandleParentgetInlineClassBackingField$generateUnboundSymbolsAsDependenciesnameForDeclarationrenderSuperQualifierrenderDeclaredInappendListWithrenderClassifierFqnrenderVariableFlagsrenderDeclarationFqnrenderAsAnnotationrenderFlagsListrenderFieldFlagsrenderDeclarationParentFqnrenderTypeParameterFqnrenderTypeAliasFlagsrenderElementNameFallbackrenderScriptFqnrenderClassFqnbuildTrimEnd!renderLocalDelegatedPropertyFlagsrenderClassFlagsrenderTypeAnnotationsrenderDescriptorrenderReturnTyperenderSymbolReferencerenderReflectionTargetrenderOriginIfNonTrivialappendNullableAttributeescapeIfRequiredrenderTypeAbbreviationrenderTypeInnerrenderSimpleFunctionFlagsrenderValueParameterTypes#renderParentOfReferencedDeclarationrenderPropertyFlags
runTrimEndrenderTypeAliasFqnrenderAsAnnotationArgumentrenderConstructorFlagsrenderValueParameterFlagsrenderReferencetopLevelSignaturenearestPublicSigcomposeEnumEntrySignaturecomposeAnonInitSignaturecomposeFieldSignature	adaptMaskwithFileSignatureflagsisPackageSignatureasPublicstripEnhancedNullabilityregisterDeclarationsisStaticFunction computeExternalDeclarationOrigingenerateFacadeClassisPropertyWithPlatformFieldgetContainerSource$isAccessorWithExplicitImplementationgetFunctionNamegetVariableNametransformValueArgumentscopyTypeParametersFrom	visitBodymapStatementOrigingetNonTransformedLooptransformReceiverArgumentsgetTypeParameterNamemapDeclarationOrigingetTypeAliasNametransformDeclarationsToshallowCopyCallgetExternalPackageFragmentNamegetReferencedReturnTargettransformTodeepCopyWithSymbolscopyRemappedTypeArgumentsFromgetTransformedLoopcopyTypeParametergetEnumEntryNamegetValueParameterNamegetClassNamegetFileNameaddSpecialAnnotation approximateFunctionReferenceTypeapproximateUpperBoundswithTypeErasuretranslateTypeArgumentsisMutabilityFlexibletranslateTypeAnnotationsapproximateByKotlinRulesisTypeAliasAccessibleHeretoIrTypeAbbreviationtranslateType)approximateFunctionReferenceParameterTypereferencePropertyIfAny referenceExternalPackageFragmentreferenceValueParameterreferenceScriptcheckOriginaldeclareSimpleFunctionFromLinkerintroduceValueParameter declareSimpleFunctionIfNotExistsdeclareExternalPackageFragmentdeclareFieldFromLinkerdeclareEnumEntryIfNotExistscreateConstructorSymboldeclareConstructorIfNotExistsdeclarePropertyIfNotExistsreferenceVariabledeclareintroduceLocalgetByDescriptorreferenceDeclaredFunctiondeclareConstructorWithSignaturedeclareLocaldeclareAnonymousInitializerdeclareVariable
referencedcreateEnumEntrySymbolcreateTypeAliasSymboldeclarePropertydeclarePropertyFromLinkerdeclareScriptreferenceFielddeclareLocalDelegatedProperty)declareExternalPackageFragmentIfNotExistsdeclareConstructorFromLinkerreferenceLocalDelegatedPropertywithReferenceScopedeclareClassIfNotExistscreateTypeParameterSymboldeclareScopedTypeParametergetLocalcreateSimpleFunctionSymbollistExistedScriptsdeclareEnumEntryFromLinkerreferenceValuedeclareValueParameter$declareScopedTypeParameterFromLinkerdeclareTypeAliasreferenceScopedTypeParameterdeclareTypeAliasIfNotExistsgetByIdSignaturedeclareClassFromLinkercreateFieldSymbolreferenceSimpleFunctionIfAnycreatePropertySymboldeclareClassreferenceConstructorIfAnycreateClassSymboldeclareConstructorforEachPublicSymboldeclareFielddeclareIfNotExistsdumpToforEachPublicSymbolImplreferenceClassIfAnydeclareEnumEntrynoUnboundLeftdeclareGlobalTypeParametervisitSuspendableExpression"printCallableReferenceWithNoIndentprintAnAnnotationWithNoIndentallValueArgumentsAreNullprintATypeParameterWithNoIndent printValueParametersWithNoIndentprintTypeWithNoIndent'printMemberAccessExpressionWithNoIndentprintVisibilityprintAccessor	printTypeprintVariable!printWhereClauseTypesWithNoIndentprintElementprintFieldAccessvisitBreakContinueprintTypeArgumentpprintTypeArgumentWithNoIndent
printLabelprintModifiersWithNoIndent#printParameterModifiersWithNoIndent$printWhereClauseIfNeededWithNoIndentcustomModifierprintTypeParametersWithNoIndentprintlnAnnotationsprintVarianceWithNoIndentdumpKotlinLikeprintStatementContainercommentBlockvisitSuspensionPoint printConstructorCallWithNoIndent printAValueParameterWithNoIndentprintSimpleFunctionprintExtensionReceiverParameterprintAnnotationsWithNoIndentcreateIrClassFromDescriptortransformInPlacetransformSubsetFlattransformFlattransformIfNeededreplaceInPlacetransformDeclarationsFlatadjustAnnotationArgumentValue!generateConstantValueAsExpressionextractAnnotationOffsets!generateAnnotationConstructorCall-generateConstantOrAnnotationValueAsExpression#generateAnnotationValueAsExpressionreferenceClassifiergetTypeSubstitutionMapcreateStubDefaultValuecoerceToUnithasInterfaceParentgetArgumentsWithIrhasDefaultValueisFalseConstisIntegerConstusesDefaultArgumentsisFakeOverriddenFromAnycopyValueArgumentsFromirConstructorCall%isExternalOrInheritedFromExternalImpl!isExternalOrInheritedFromExternalhasAncestorInSuperTypesisTrueConstisSuperToAny
isFromJavaaddArgumentscopyTypeAndValueArgumentsFromgetArgumentsWithSymbolsshallowCopyOrNullfindDeclarationisNullConstaddExplicitParametersTofindInterfaceImplementationcreateIrTypeCheckerStatemakeNotNulltypeWithParameterstoKotlinTypetypeWithmergeNullabilityaddAnnotationsisStrictSubtypeOfClassisSubtypeOfClasstoArrayOrPrimitiveArrayTypeisEmptySubstitutionsubstituteTypeArgumenttypeParameterConstructorgetSubstitutionArgumentfromHasQuestionMarkisArray
isSequenceisNullableArrayisUShortisDoubleArrayisComparableisClassWithFqNameclassFqNameEqualsisNotNullClassTypeisCharArray!isDoubleOrFloatWithoutNullabilityisCollection
isIntArrayisShortArrayisKotlinResultisNullableClassTypeisUIntisUBytehasFqNameEqualToSignatureisNullablePrimitiveTypeisNullableStringgetUnsignedTypeisByteArraygetPublicSignatureisClassType
isIterableisBooleanArrayisFloatArrayisNumbergetPrimitiveOrUnsignedTypeisStringClassTypeisLongArrayisNullableContinuationinitSuperTypesbuildSimpleTypemakeTypeProjectionbuildTypeProjectionmakeTypeIntersectionjsResolveLibrariesgetFunctionInKotlinPackagegetInternalWithoutPackagegetInternalFunctiongetInternalClassWithoutPackagegetInternalWithoutPackageOrNullgetInternalPropertylowerPreservingTagscompileWithICcontainsTypeConstructorgetTypeParameters!getNameForClassUnderKotlinPackageextractTypeParametersgetSuperTypesdeclarationTransformermakeBodyLoweringPhasemakeDeclarationTransformerPhasemakeCustomJsModulePhasemakeJsModulePhasetoModuleLoweringrunOnFilesPostfixbodyLoweringgenerateJsCode	compileIr/shouldGenerateHandlerParameterForDefaultBodyFunisSideEffectFreegetOperatorByName%primitivesWithImplicitCompanionObjectgetJsInternalFunctionreferenceOperatorsgetJsInternalClass
getIrClassunfoldInlineClassTypegetJsInternalPropertyisTypeInlinedlazy2shouldValueParameterBeBoxedgetInlinedClassdeclareSharedVariabledefineSharedValuesetSharedValuegetSharedValuebuildInlineGraphprocessCalleegetFlatHashesbuildHashesfetchCompiledJsCodefetchModuleInfoloadRequiredJsIrModulesloadModuleInfoloadProgramHeadersFromCachecommitModuleInfocommitCompiledJsCodetoResolverLoggergetIrModuleInfoForKlibprocessCompiledFileDataprepareAnalyzedSourceModulegetIrModuleInfoForSourceFilesserializeModuleIntoKlibsortDependenciesdeserializeDependenciescreateBuiltInsgenerateKLibgetUniqueNameForEachFragment!KlibMetadataIncrementalSerializerrunAnalysisgetDescriptorForElement!generateModuleFragmentWithPluginspreparePsi2IrgetFunctionFactoryCallbackgenerateIrForKlibSerialization)compareMetadataAndGoToNextICRoundIfNeededsaveFragment
isModifiedloadJsIrFragmentloadJsIrModulesaveBinaryAstifExistsuseCodedInputIfExistsuseCodedOutputshrusubbuildBinaryOperatorbuildUnaryOperatorcreateLinkerloadModulesprocessJsIrLinkerirElementHashForICfileHashForICcombineWithfromProtoStreamcrossModuleReferencesHashForICfinalizefingerprintbytesToULongtoProtoStreamconfigHashForICstringHashForICupdateSignatureToIdMappingerrupdateHashesfilesAndSigReadersinvalidateCacheForNewConfigcommitCacheFastInfofetchFullCacheDatafetchCacheDataForDependencycommitCacheFullInfocheckAndUpdateCacheFastInfocommitCacheForRebuiltSrcFilesbodyreadFunctionHashesgetBinaryAstPathskipFunctionHashesclearCacheAfterCommitwriteFunctionHashescommitCacheForRemovedSrcFilesirDeclarationinvalidateForSrcFilebuildSingleModuleExecutablebuildExecutablebuildMultiModuleExecutablebuildReinterpretCastbuildCompositebuildTypeOperator
buildBlockbuildFunctionExpression	buildWhenbuildContinuebuildGetFieldbuildReturn	buildNull
buildCatchbuildSetFieldbuildVar
buildThrowbuildSetVariablebuildIfElsebuildBooleanbuildGetObjectValuebuildGetValue
buildBreakbuildTryvisitDependencygetDependencySubGraphbuildDependenciesGraphmoduleCanonicalNameaddDependsForactualizeCachesloadLibrariesbuildCacheForModuleinvalidateCacheForModulecheckLibrariesHashbuildCacheForModuleFilesactualizeCacheForModulerebuildCacheForDirtyFilescontainsMetadataoverridesAnyBasefilterDescendantsOfprocessWithDiagnosticremovingBodyprocessUselessDeclarationprocessFieldWithDiagnosticshouldKeepAnnotationprocessFunctionWithDiagnosticgetMethodOfAnyprocessConstructorprocessField#findOverriddenContagiousDeclarationvisitValueAccesscollectDeclarationsprocessSimpleFunctionvisitFunctionAccessaddReachabilityInfoIfNeededisKotlinPackageeliminateDeadDeclarations
buildRoots
isConstant
addRootsTounreachableDeclarationMethod	nullValueundefinedValueextractThrowableArgumentsoutlineJsCodeIfNeededvisitValueParameterNewvisitNameRefvarWithNameExistsInScopeOfregisterValueDeclaration	visitVarscontainsCallsTowithLocalScopefindValueDeclarationWithNameisDeclaredInsideJsCodevariableWithNameExistscollectNamesForLambdabuildReferenceClasscreateNameProperty#createFunctionReferenceInvokeMethodbuildFunctionReferencemakeContextDependentNamebuildInvoke	countImplcreateLambdaInvokeMethodcountContextTypeParameterscreateInvokeMethodisLambdaFunbuildLambdaReferencecreateReceiverFieldopenInitializerBoxbuildInitFunctioncreateInitFunctionaddInternalValueParameterscurrentScopeSymbolgetWrapperVisibilitygetSuperTypeForWrappergetFinalPrimitiveKClasscallGetKClassFromExpressioncallGetKClassgetOpenPrimitiveKClasscallGetClassByTypeprimitiveClassPropertydiagnosticMethodgetActualPrimitiveCompanion+getActualPrimitiveCompanionPropertyAccessorirCastIfNeededcopyValueParametersFromcreateBridgegenerateBridgesasCallableReferencesetDynamicPropertybuildLambdaBodyextractReferenceReflectionNameinlineLambdaBodyreplaceWithFactorygetCastedValuebuildFactoryBodyremapVPcapturedFieldsToParametersMaptransformCallableReferencecreateVarsForTrailingParametersemitCopyVarargToArrayexplicitlyConvertedToString!explicitlyConvertToStringIfNeededbuildInitDeclarationgenerateFactoryBody.replaceSecondaryConstructorWithFactoryFunctionbuildConstructorDelegatebuildFactoryDeclarationgenerateInitBodygenerateStubsBodytransformConstructorbuildConstructorFactory
returnThiscreateNewSuperCallgetSuperCallredirectOldThisToNewOnehackExceptions&createNewSuperCallSecondaryToSecondaryprimaryToSecondary changeReturnUnitToReturnInstanceputBoxToSuperCallboxOrEmptyObjectopenBoxStatementsecondaryToSecondary$createNewSuperCallSecondaryToPrimaryresultTypeOrDefaultTypesecondaryToPrimaryfillInitializerBoxreplaceCallToDefaultPrimary$createNewSuperCallPrimaryToSecondarycreateThisVariablechangeIrConstructorToIrFunction	hackEnumsprimaryToPrimary
createLong
lowerConst1createInnerClassConstructorWithOuterThisParameter-getInnerClassOriginalPrimaryConstructorOrNull.getInnerClassConstructorWithOuterThisParametergetOuterThisFieldcreateFunctiongetFunctionBodyOffsets prepareForEvaluateScriptFunctiongetMutablePropertyNgetPropertyN	nullConstcollectNativeImplementationstoBlockBodydestructureCompositeisReceiverNonDetachablematerializeLastExpressionmakeTempVarunreachableExpressionmakeLoopLabelasExpressionmapArgumentsneedBoxingOrUnboxinggenerateNativeInstanceOfgenerateGenericArrayCheckwrapWithUnsafeCastgenerateNumberCheck	lowerCastgenerateTypeCheckNonNullmaskOp"generateTypeCheckWithTypeParameter	nullCheckgenerateInterfaceCheckgenerateIsObjectCheckgenerateComparableCheck
cacheValueadvancedCheckRequiredgenerateTypeCheckgeneratePrimitiveArrayTypeChecklowerImplicitCastisTypeOfCheckingTypelowerInstanceOflowerImplicitNotNullgenerateTypeOfChecklowerImplicitDynamicCastgenerateSuspendFunctionCheckwrapTypeReferencelowerIntegerCoercionlowerCoercionToUnitgenerateCharSequenceCheckwrapInGlobalThisneedToBeWrappedWithGlobalThisbuildThrowErrortransformErrorExpressiontransformErrorDeclarationbuildConstructorCallcreateGetEntryInstanceFuncreateInitEntryInstancesFun$fixReferencesToConstructorParameterscreateEnumEntryInstanceVariabletransformBodycreateEntryAccessorNamegetNameExpressiontransformEnumConstructorlowerEnumEntryClassConstructors#lowerEnumEntryInitializerExpressiongetOrdinalExpressioncreateEnumValuesBodycreateEnumValueOfBodylowerEnumEntry"createEntryInstancesInitializedVarlowerEnumConstructorsBodyisIntrinsiccollectAllExternalDeclarations"validateNestedExternalDeclarationsisBuiltInClass'moveBodilessDeclarationsToSeparatePlacecheckExternalvalidateIsExternalgetOrCreateGetInstanceFunctionisSafeToInlinecomputeTopLevelClassNameputLocalClassNamesanitizeNameIfNeededremoveAndCollectOpenClassesmoveOpenClassesToSeparateFilesgenerateHandleCallresolveInvokeneedSpecialDispatchbuildBoundSuperCallprepareToBeUsedIn!transformPrivateToStaticReferencecopyWithParameterstransformAccessortransformMemberToStaticFunctiontransformPrivateToStaticCallpropertyWithPersistentSafeallFieldsInFilePure!buildPropertiesInitializationBodycreateIrGetFieldwithPersistentSafecreateInitializationFunctionbuildBodyWithIfGuardcalculateFileFieldsPurenesscreateInitializationFieldisCompatibleDeclarationisForLazyInitcalculateFieldToExpressioncreatePrimaryConstructoruseAs	isGetUnituseExpressionAsTypeuseAsValueArgumentuseAsExtensionReceiveruseAsDispatchReceiveruseAsVarargElementbuildSafeCallgetArrayContentEqualsSymbolchooseConstructor+implementAnnotationPropertiesAndConstructorintroduceDefaultResolution!createDefaultResolutionExpressionlowerExternalEnumEntryclassAsReceivercreateFieldForEntrybuildGetterLambdagetJsTypeConstructorbuildAccessorLambdabuildLocalDelegateLambdabuildSetterLambdanameExpressioncreateInvocationisEffectivelyVisibleFromTestsisVisibleFromTestssuiteForPackagecanBeInstantiatedgenerateJsTeststransformEnumValueOfIntrinsictransformEnumValuesIntrinsictransformEnumTopLevelIntrinsicaddWithPredicatetoPrimitiveArrayLiteralunboxElementIfNeededtoArrayLiteralboxArrayIfNeededgetArgumentFromSingleSegmentbuildDynamicCallgetLowestUnderlyingTypetransformEqeqOperatorisDefaultEqualsMethodallValueArgumentsAreNullableunboxParamWithInlinedClass$isMethodOfPotentiallyPrimitiveJSTypeisFakeOverriddenFromComparabletransformCompareToMethodCall	isBuiltintransformLongComparisonfindEqualsMethodoptimizeInlineClassEquality'chooseEqualityOperatorForPrimitiveTypesisBoxIntrinsictransformEqualsMethodCallisMethodOfPrimitiveJSTypecanBeUsedWithJsEqtransformToIndexedReadtransformToIndexedWritejsRecordExtractedLocalClassesuseDispatchReceiver$shouldReplaceToStringWithRuntimeCallcanAddOrSubOverflowtransformCrementtransformIncrementtransformRangeTotransformRem
irBinaryOptransformHashCodeconvertResultToPrimitiveTypetransformSubbooleanNegatetransformAddwithLongCoerciontransformUnaryMinustransformMultoInt32transformDivtransformDecrementgetContinuationdoesNotReturncleanUpStatementsisTopLevelPrivatecreateSerializerForFilecreateSuspendFunctionStub'getOrCreateFunctionWithContinuationStubcontinuationTypecollectSuspendableNodes loweredSuspendFunctionReturnTypeisSuspendableNodemarkNodeinitializeStateMachinecreateCoroutineInstancebuildCoroutinetransformInvokeMethodbuildNewCoroutineClassbuildInvokeSuspendMethodisSuspendLambdaisReturnIfSuspendedCallgetCoroutineClassgetSuspendFunctionKind4removeReturnIfSuspendedCallAndSimplifyDelegatingCallbuildCreateMethodmaybeDoDispatchtransformLastExpressiontransformArguments
doContinuenewState
doDispatchlastExpressionbuildExceptionTrapStatebuildDispatchBlockbuildUnboxingStatebuildGlobalCatchpendingExceptionfinalizeStateMachinesetupExceptionStateisBlockEndedtempVardoDispatchImpladdExceptionEdgebuildTryStatehasResultingValueresetExceptionStateIfNeededtransformLoopbackendSpecificExplicitRootneedUnboxingOrUnit!computeLivenessAtSuspensionPointsassignStateIdsmoduleDeserializermaybeWrapWithBuiltInAndInit!getJsNameForOverriddenDeclarationisJsNativeGetterisJsNonModulegetJsModule
isJsExportgetSingleConstStringArgumentisAnnotatedWithJsFungetJsQualifierisJsNativeSettergetJsNameOrKotlinName	getJsNamegetJsPolyfillhasJsPolyfillassociatedObjectisJsNativeInvokegetJsFunAnnotationisUnlinkedMarkerTypewhenUnboundSymbolsAllowedvisitDeclarationReferencecollectStableNameregisterImportisContinuationParameterisLoweredSuspendFunctionisStringArrayParameterisMainisSuitableForMainParametersSizegetMainFunctionOrNullgenerateNextNamenameBySignaturereserveNameeraseGenerics#stableNameForNonExternalDeclarationgetClassRefisExportedClassisExportedMemberisTheLastReturnStatementInisExportedInterfaceisImportedFromModuleOnlyhasStaticDispatchhasStableJsNameisInlineFunWithReifiedParameterfindUnitGetInstanceFunctionprependFunctionCallinvokeFunForLambdaisEqualsInheritedFromAnycheckIfAnnotatedWithJsFuncgetNameForValueDeclarationcheckIfJsCodenewFilegetNameForReturnableBlockgetNameForLoopnewDeclarationmangleIfNotpersistLoopNamemapToKeyprocessTopLevelLocalDeclpackagesAddedfindFreshNameprocessNonTopLevelLocalDeclnameIfPropertyAccessor	freshNamedeclareStableNamejsFunctionSignatureaddAllIfAbsentacceptNonExternalClasstoJsIdentifiergenerateNameForMemberFieldpersistReturnableBlockName
isReservedgetAssociatedObjectKeygetRefForExternalClasstoJsNameserializeFragmentembedSourcesdeserializetoTypeScripttoExtendsClausetoImplementsClausewithProtectedConstructorswrapTypeScriptasNestedClassAccesstoReadonlyPropertyshouldNotBeImplementedwithMagicPropertywithImplicitlyExported
bindToThisgenerateInnerClassAssignmentgenerateModuleExportgenerateDeclarationExportgenerateModules)invokeFunctionFromEntryJsFileAsStatementsfileJsSubModulePath!referenceCodegenUnitOfDeclarationguidgetInheritanceChainLengthinvokeFunctionFromEntryJsFilepathToJsModulefileJsRootModuleNamegenerateUnitgenerateEsModulestoJsCodeStringfileInitOrdergenerateModuleLevelCodecollectStableNamesexportswithReferenceTrackingimportsbuildCrossModuleReferenceInfotrackmakeJsExporterNamemakeInternalModuleNamemakeCrossModuleNameRefexportClassclassExportabilityexportEnumClass%canBeUsedAsSuperTypeOfExportedClassesfunctionExportabilityexportClassDeclarationsexportAsEnumMemberfakePropertyexportEnumEntryisOverriddenExportedshouldDeclarationBeExportedexportFunctiontoExportedVisibilityexportPropertyUnsafelyexportParametergetExportCandidateexportDeclarationgetExportedIdentifier
exportTypeexportConstructorgenerateExportexportOrdinaryClassgetExportableNameexportTypeParameterexportTypeArgument"isAllowedFakeOverriddenDeclarationtransitiveJsExportdeclareAndCallJsExporterlinkJsNamesassertSingleDefinitionbuildRenamestryToExtractEqeqeqConstbuildJsSwitchisSuitableForSwitchcheckBranchIsOrPatterndetectSwitchtryOptimizecheckForPrimitiveOrPatternisTrueConstantdeclareNewTemporaryForcollectReplacementsForCallgetJsFunctionImplementation$withTemporaryVariablesForExpressionsgenerateResultStatementbinaryOperationpostfixOperationtoDoubleConstprefixOperationsafeName	fieldDatamakeRefgenerateAssociatedObjectsgenerateAssociatedObjectKeyisFunctionTypeaccessorRef isDefinedInsideExportedInterfacepropertyAccessorForwardergenerateFastPrototypegenerateSuperClassesgenerateInheritanceCodeshouldCopyFromprototypeAccessRefgetOrGenerateIfFinalgenerateSuspendAritygenerateAssignmentIfMangledgenerateClassMetadatahasMangledNamegenerateMemberFunctionoverridesExternaloverriddenStablePropertyisCoroutineClassmaybeGeneratePrimaryConstructorshouldExportAccessormaybeOptimizeIntoSwitchisUnitInstanceFunctiongetAllPolyfillsFor'registerDeclarationNativeImplementation)saveOnlyIntersectionOfNextDeclarationsForasImplementationListgenerateCrossModuleExportsgeneratePolyfillStatementsgenerateImportStatementsgenerateModuleBodygenerateWrappedModuleBody2generateCallToMaingenerateCrossModuleImports	prettyTagbuildCrossModuleRefsimportmakeModuleHeaderbuildExportNamesinitJsImportsForModuleresolveCrossModuleDependenciescrossModuleDependenciestraversegenerateStatementgetJsStatementsgenerateExpressiongreaterThantranslateCalljsElementAccessasBlockprototypeOfnewJsIf
withSourcevarargParameterIndexdeBlockIfPossibleequalitygreaterThanEq
inequalitydefineProperty argumentsWithVarargAsSingleArraytranslateFunctionjsAssignmentassignmentToThisFieldjsVarisFunctionTypeInvoke
assignmentvalidWithNullArgs
lessThanEqdecomposeAssignmenttoJsNodelessThanaddSourceInfoIfNeedtypeOfIs	addAssigngenerateProgramFragmentsgenerateSingleWrappedModuleBodygenerateExportWithExternals
computeTaggenerateBinaryAst	fromFlagscompilationOutputgenerateProgramFragmentrequiresEscaping
foldStringparseJsCode translateJsCodeIntoStatementListisProvidedByDefaultjvmResolveLibrariesmangleTypePlatformSpecificaddReturnTypeSpecialCaseisMainFunctionprefixOpwithTranslatedArgsbinOp	postfixOpinitresolveBySignatureInModuledeserializeIrSymbolplatformSpecificSymbolisJavaDescriptorresolveDescriptorisCleanDescriptordeclareIrSymboldeclareJavaFieldStubareEqualwrapInDelegatedSymbolirGetObjectirWhilecreateTmpVariable
irContinueirBreakprimitiveOp1eqeqeq
equalsNull	whenCommaprimitiveOp2
elseBranchsetSourceRangeblock	blockBodybuildStatementdoBuildgetLocalDeclarationParent"createTemporaryVariableDeclarationinventNameForTemporaryirIfThenReturnTrueirUnitirLongirSamConversion
irGetFieldirIfThenReturnFalseirGetObjectValueirIsirIntirReinterpretCastirBranch	irBooleanirStringirAsirConstantPrimitiveirConstantObject
irExprBodyirCallConstructorirReturnTrueirIfThenMaybeElseirLetSirTemporaryirCallOpirSetirConcatirConstantArrayirCharirTrueirEqeqeqirTryirIfThenElseirIfThenirReturnFalseirIfNullirReturnirNotEqualsirImplicitCastirDelegatingConstructorCallirNullirElseBranchirVarargirEqualsNullirNotIsirRawFunctionReferefence
irSetFieldtypeOperatorirWhenirReturnUnitirFalseirGet
buildClassbuildReceiverParameteraddConstructoraddDispatchReceiverbuildVariablebuildTypeParameterbuildFunaddPropertyaddTypeParameterbuildPropertybuildFunction	addGetter
buildFieldaddExtensionReceiveraddDefaultGetteracceptChildrenVoidisVisibleForOverridetransformChildrenVoidtransformPostfixremapTypeArguments
setOutTypegetDelegateName extractAndBindOverridesForMemberisOverridablePropertycheckReceiverAndParameterCountisOverridableMemberOrAccessorcollectOverriddenDeclarationsisReturnTypeMoreSpecificcreateTypeCheckerState determineModalityForFakeOverrideisPrivateToThisModuleisMoreSpecificThenAllOfisOverridableBy(isOverridableByWithoutExternalConditionsgetBothWaysOverridability#extractMembersOverridableInBothWaysbuildFakeOverrideMemberlinkFakeOverridefakeOverrideMemberisInFriendModulesgetOverriddenDeclarations#updateAccessorModalityAndVisibilitylinkFunctionFakeOverrideisOverridableFunctiongetBasicOverridabilityProblemcreateAndBindFakeOverrideslinkPropertyFakeOverridefilterVisibleFakeOverridesbuildFakeOverridesForClass generateOverridesInFunctionGroupcreateAndBindFakeOverride0buildFakeOverridesForClassUsingOverriddenSymbolsgetMinimalModalitycreateFakeOverridePropertyreflectFunctionClassFqnsuspendFunctionClassDescriptortypeParameterDescriptorkSuspendFunctionClassDescriptorvalueParameterDescriptorcreateFunctionClasscreateFakeOverridefunctionClassDescriptorkFunctionClassDescriptorcreateTypeParametersmemberDescriptorcreateThisReceivercreateMembersreflectionFunctionClassNamefunctionClassNamecreateFakeOverrideFunction classReceiverParameterDescriptor
putElement
addElementgetClassTypeArgumentsgetClassTypeArgumentgetConstructorTypeArgumentputClassTypeArgumentgetConstructorTypeArgumentIndexputConstructorTypeArgumentgetConstructorTypeArgumentsbuiltInsPackagemakeNonNullTypedefineOperatormakeNullableTypedefineComparisonOperator
toIrSymboldefineCheckNotNullOperatorisSetterProjectedOuttoIrBasedDescriptorIfPossiblegetDelegateFieldgetCorrespondingClassisConstgetBackingFieldgetAccessorstoAnnotationDescriptorgetStorageManager	isDefault	getInTypetoIrBasedDescriptorgetThisAsReceiverParametergetCorrespondingPropertytoIrBasedKotlinTypeisAssignmentOperatorisAssignmentOperatorWithResultmapValueParametersputTypeArgumentsputTypeArgumentmapValueParametersIndexedgetTypeArgumentOrDefaultgetTypeArgumentmapTypeParameters throwNoSuchArgumentSlotExceptioncopyTypeArgumentsFromgetValueArgumentinlineStatementlongintfloatdefaultValueForTypebytedoubleshortcharbooleancreateConstructorCallcreateGetValuecreateTempFunctioncreateGetObjecttoIrExpressioncopyArgscreateTempVariabletoIrConstOrNullirIfNullThenElsewrapWithBlockBodyemptyArrayConstructorcreateGetFieldcreateTempClasscreateReturngetFunctionThatContainsDefaultsgetVarargTypegetLastOverridden	checkCastgetThisReceiverisSubclassOfThrowable$isAccessorOfPropertyWithBackingFieldgetArgsForMethodInvocationgetSuperEnumCallgetOriginalPropertyByNameaccessesTopLevelOrObjectFieldgetEvaluateIntrinsicValuelookupgetSingleAbstractMethodloadReifiedTypeArgumentsgetDefaultWithActualParametersgetReceivergetCapitalizedFileNamegetOnlyNamehasFunInterfaceParenttoPrimitivetoPrimitiveStateArrayisAccessToObjectgetTypeIfReifiedincrementAndCheckCommandsinterpretConstructortryResetFunctionBodyinterpretStringConcatenationinterpretFunctionReferenceinterpretConstgetSignedType	interpretinterpretClassReferenceinterpretEnumConstructorCallinterpretTypeOperatorCallinterpretBranchinterpretGetClass"interpretDelegatingConstructorCallinterpretConstructorCallinterpretFunctionExpressioninterpretBlockinterpretFieldinterpretReturnaddToFieldsarrayToListinterpretVararginterpretGetObjectValueinterpretThrowinterpretGetEnumValuewithNewCallStackinterpretTryinterpretPropertyReferenceinterpretCallinterpretValueParameterinterpretDoWhileinterpretEnumEntrygetUnitStateinterpretSetField
isReceiverinterpretBodygetThisOrSuperReceiverinterpretWhileinterpretFunctioninterpretGetFieldunfoldReturnunfoldThrow
unfoldBodyunfoldBranchunfoldClassReferenceunfoldBlockunfoldValueParametershandleAndDropResultunfoldSetValueunfoldStringConcatenationunfoldGetValueunfoldVariableunfoldGetEnumValueunfoldConstructorunfoldTypeOperatorCallunfoldDoWhileLoop
unfoldWhenunfoldGetObjectValueunfoldInstruction	unfoldTryunfoldInstanceInitializerCallisLastIndexunfoldGetClassunfoldFunctionunfoldFieldunfoldCompositeunfoldVarargunfoldWhileLoopunfoldContinueunfoldSetFieldunfoldPropertyReferenceunfoldStatementsunfoldFunctionReferenceunfoldBreakunfoldCatchinterceptProxyinterceptCallcalculateBuiltInshandleIntrinsicMethodsinterceptGetObjectValuecalculateRangeTointerceptJavaStaticFieldinterceptConstructortrySubstituteFunctionBodyinterceptEnumEntrygetCachedFunctionsetCachedFunctionconvertToStategetIrClassOfReflectionFromListcopyWithNewCallStackpushSimpleInstructionpushCompoundInstructionisObjectdefaultEqualsfallbackIfMethodNotFoundwasAlreadyCalleddefaultToStringdefaultHashCodegetActualTypeloadUpValues"unrollInstructionsForBreakContinuedropFrameAndCopyResultnewSubFramereturnFromFrameWithResultgetStackCountcopyUpValuesFromPreviousFrame	dropFramedropSubFramestoreUpValuesdropFramesUntilTryCatchnewFrameequalsByAdapteeCall	isAdaptergetAdapteeCallSymbolnullStateOfTypehasNoSubFramesforEachSubFrame"getLineNumberForCurrentInstructioncopyMemoryIntogetAlladdSubFrameremoveSubFramedropInstructions$removeSubFrameWithoutDataPropagationevaluateAdditionalStackTracecopyFieldsFromgetFullDescriptionevaluateFieldsrecalculateCauseAndMessage
setMessagesetCausegetOriginalOverriddenSymbolsgetStaticMethodgetConstructorMethod!isValueParameterPrimitiveAsObjectgetMethodTypegetCompanionObjectmustBeHandledWithWrappergetSignatureisReturnTypePrimitiveAsObjectgetJavaOriginalNameisExtensionReceiverPrimitivegetEnumEntrygetJvmClassNamegetStaticGettergetReflectionMethod	getMethodirClassFqNamegetIrFunctionFromGivenClassgetRealFunctionloadOuterClassesIntotakeFromEndWhilerenderReceivershasTheSameFieldsWithasIntarraySubtypeCheckmustBeHandledAsReflection	asBooleancheckNullabilityisNullasStringOrNullasBooleanOrNullgetEqualsFunctiongetKotlinNamegetIrFunctiongetToStringFunctioncreateToStringIrCallconvertGetterToKFunctionStateisKMutableProperty1isKMutableProperty0isKProperty2isKProperty0isKProperty1isKMutableProperty2createInvokeFunctiongetArity&isCallToInvokeOrMethodFromFunInterface'isCallToNonAbstractMethodOfFunInterfacecanEvaluateFunctionisMarkedWithisMarkedAsEvaluateIntrinsiccanEvaluateBodyisCompileTimePropertyisMarkedAsCompileTime
isContractisCompileTimeTypeAliasgetClassifierhandleUserExceptionverifywithExceptionHandler	asVisitedvisitValueParameters!isJavaStaticWithPrimitiveOrStringunwindInstructionsgetEnumEntryByNamecustomEvaluateInstructiongetListOfAcceptableFunctionsunwindarrayToStringcanHandleFunctionWithNamegetIrValueParametercopyAttributes	addMemberinterpretTernaryFunctioninterpretUnaryFunctioninterpretBinaryFunction"createEmptyExternalPackageFragmentcreateInitialSignatureFunctioncreateValueParameterscreateReturnTypecreateReceiverParametercreateLazyAnnotations
lazyParentgenerateReceiverParameterStubcreateLazyParentlazyVargetToplevel	tryLoadIrshouldBuildStubgenerateChildStubsremoveIfNecessaryclearVisitedaddExpressionevacuateFromextractNodeImplmakeDependenciesrootaddUsedByAstNodeextractNodeaddNodesForLocalVarspathFromRootmemberisAmdDefineisTopLevelFunctionisDefineInlineFunctionisDefineModuleisWrapFunctionisObjectDefinePropertyextractRootsImplextractReachableRootsisSpecialFunctionisObjectFunctionisKotlinFunction isObjectGetOwnPropertyDescriptorhandleAmdDefineisProperFunctionalParameterprocessFunctionhandleObjectCreate'extractVariableInitializedByEmptyObjectprocessAssignmenthandleObjectDefinePropertyenterFunctionWithGivenNodeszipFilegetZipModificationTime	printTreeisValidES5IdentifierisES5IdentifierStartisES5IdentifierStartFullisES5IdentifierPartisAllowedLatinLetterOrSpecialisAllowedSimpleDigitisNotAllowedSimpleCharacterreachshouldTraversereportAndNestreachDependenciesreachDeclarationnestedwithErasedThisvisitNameLikeNoderesolvePolicygetCodemetadataFileskjsmFileForPackagegetOutputFilesinlinecopyInlineMetadata$patchReturnsFromSecondaryConstructor!tryCreatePropertySetterInvocationdoAcceptStatementList!tryCreatePropertyGetterInvocationhasToBeInlinedtrySaveIncrementalDatacheckCanceledtoTranslationDatatranslateWithoutCodetranslateUnitsserializeInlineDatavalidateJsAstupdateMetadataMap	translatereportInlineCycleisResultNeededgetResultReferencereplaceThisgetThisReplacementapplyCapturedArgsgetLabelPrefixhasThisReferencegetThisAliasprocessReturnsgetInlineableCallReplacementgetBreakLabelgetResultLabeluncoverClosuregetInnerCalladdInlinedDeclarationaddInlinedModuleimportFunctionDefinition	addImport	hasImportaddNameBindingreplaceIfNecessary
preprocessreplaceThisReferencereplaceNamesfixForwardNameReferencesrefreshLabelNamesaliasArgumentsIfNeededrenameLocalNamesmarkDefaultParamsrewindToIdentifierStartoffsetmarkQualifiedSpecialFunctionreadFunctionreadFunctionFromSourcereplaceExternalNames	remapPathremoveRedundantPathPrefixrenameModulesmarkInlineArgumentstoIdentitySetIdentitySetzipWithDefaultgetCallerQualifierImplgetCallerQualifiergetSimpleIdenthasCallerQualifiergetSimpleNameisCallInvocationcanHaveSideEffectcanHaveOwnSideEffectisFunctionCreatorgetInnerFunctionmatchwithParentsOfNodestoStatementwithNewAdditionalStatementsprocessByIndicesaddAllUntilMatchedOrStatementprocessOrAndextractToTemporaryaddStatementspreserveEvaluationOrdergetReturnReplacementprocessCoroutineResultapplyToNamedNodegetSubstitution
unuseLabeluseLabelextractImportTagcollectNamedFunctions collectNamedFunctionsAndMetadatacollectLocalFunctionscollectAccessorscollectFreeVariablescollectBreakContinueTargetsextractImportTagImplhandleSwitch collectNamedFunctionsAndWrappersextractFunction
handleLoopappendArgumentscollectDefinedNamesInAllScopescollectDefinedNamescollectLocalVariablesgetImportTagcollectInstancescollectReferencedNamescollectUsedNamescollectNamedFunctionsOrMetadataextractSingleStatementlhsEqualsimplifyWrappedFunctionsreplaceManylabelLoopBreaksAndContinuesendVisitLoopOrSwitchtransformLabeledBlockToDoWhilecollectUsedImportsremoveUnusedImportsprocessBinaryExpressionhandleDefinitionshouldConsiderTemporaryuseVariableinvalidateTemporariesaddVarcleanUpwithNewScopeassignVariableshouldConsiderUnusedrenameLabelsemergePrimitiveKClass%removeUnusedLocalFunctionDeclarationsisLocalFunctionDeclarationprocessLocalFunctionprocessNonLocalFunctionremoveUnusedFunctionDefinitionswasProcessedgetNameFromInitializerremoveDefaultInitializersmarkAssignmentAsStaticRefisNameInitializedgetDefaultParamsNamesfindBreakInNestedLoopisInLoopprocessDoWhilesubstituteKTypes$checkNoInvocationsWithRecursiveKType checkDoesNotCreateRecursiveKTypegetTransitiveKTypetryEliminateextractConditionhasContinuenewNamingContext	lastUsagegenerateDeclarationscalculateDeclarationsgetUsageSequence	tryRecordcollectStatementsremoveDuplicateImportsreplaceNameapplyRenameToisReachableaddRemovableReferencegetReferencedByisReferenceToRemovableCandidatemarkReachableaddCandidateForRemovalencodeForSignaturenameTypeParametersgetOwnTypeParametersencodeSignaturelookUpStaticFunctionlookUpFunctionIndirectloadInfofragmentByTaggetFunctionDefinitionImpltryExtractCallableReferencelookUpFunctionExternallookUpStaticFunctionByTaghasFunctionDefinitionlookUpFunctionDirectgetFunctionDefinition
handleNodeapplySourceMapfindCorrespondingSegmentisNotBeforeStringReadertoJsAstparseFunctionparseExpressionOrStatementbase64valueskipCharcreateErrordebugVerbosesuggestregularAndUnstable	mangledIdmangleNameIfNecessarygetSuggestedNamegetStableMangledNamegenerateDefaultmangleRegularNameIfNecessarygetInternalMangledNamemangledPrivategetPrivateMangledNamemangledAndStablemangledInternalshouldReportNoBodyshouldReportUnusedParameterisLexicallyInsideJsNativeanalyzeFilesanalyzeFilesWithGivenTracecheckForErrors
skipSpacesexpectCharAndAdvanceparseNumberparseStringparseHexEscapeSequencetakeExponentTo	parseNodeadvanceAndThenexpectStringparseEscapeSequence	parseJsontakeIntegerDigitsTo
parseArrayparseObjectasSimpleLocationvisitDouble
acceptListvisitRegExpvisitExportvisitProgram	visitNullvisitPropertyInitializervisitDocCommentacceptWithInsertRemove
visitEmptyvisitBooleanvisitStringacceptLvaluevisitInt	visitThisvisitSingleLineComment	getSymbol	findLabel
hasOwnNamedeclareNameUnsafedeclareNamefindOwnNamehasData
removeDatagetDatacopyMetadataFromsetData configureModuleDependentCheckersconfigureModuleComponentsisDefinitelyLessSpecificcheckOnlyDynamicFlexibleType%computePlatformSpecificDefaultImportsadditionalCheck"getAnnotationsOnContainingJsModuleisInlineReasonableisCommonDiagnosticReportedpresentsInGeneratedCodecheckOverrideClashessuggestAllPossibleNamescheckDescriptorisFakeOverridingNativeareDescriptorsEquivalentisExportablecheckTypeParameterisExportableReturnreportWrongExportedDeclarationcheckValueParameterreportInOperation
reportedOncheckSpreadOperatorcheckEntriesvalidateQualifieroffsetOfextractStringValueisJsCallextractModuleCalleecheckReifieidTypeParametersmarkDiagnosticfindPsicheckDeclarationcheckSuperClassisAllowedReflectionApifindRootnormalizeDescriptorcheckJsModuleUsageunderlineAsHtmlunderlineAsText&isOverridingExternalWithOptionalParams2findFakeMethodOverridingExternalWithOptionalParamsinnercheckTypeIsNotInlineClassisPrivateMemberOfExternalClassisNonAbstractMemberOfInterfaceisNullablePropertycheckAnonymousInitializer	checkBodycheckEnumEntrycheckConstructorPropertyParamisDefinedExternallyExpressioncheckDelegationhasValidExternalBody"reportOnParametersAndReturnTypesIfisDirectlyExternaltransformCoroutinescalculateRelativePathTosplitIfNecessary
preProcesshasEnclosingFinallyBlockgenerateFinallyExitupdateFinallyPathrelativeFinallyPathstatejumphandleSuspendstateAndJumpjumpWithFinallygenerateCoroutinePrototypegenerateDoResumegenerateContinuationConstructorcollectAdditionalLocalVariablesgenerateCoroutineBodygenerateCoroutineMetadataassignToFieldtransformSimplegenerateCoroutineInstantiationassignToPrototypegenerateSignaturecollectNodesToSplitcollectTargetBlocksreplaceLocalVariablesisLocalInBlockcollectFinallyPaths
buildGraph(replaceSpecialReferencesInSimpleFunction&collectVariablesSurvivingBetweenBlocksisStateMachineResultreplaceCoroutineFlowStatementsreplaceSpecialReferencesaliasedNamesetInlineCallMetadatagenerateTestFunctionsgenerateTestFunctionannotationFinderfindPromisegenerateAliasexpandArgumentForTwoInvocationsexpandIsCallsgetReplacementForAndPredicategetReplacementForOrNullinvokeKotlinFunctionpadArgumentstoInvocationWithgetArgumentMapping getSmartCastDispatchReceiverTypegetExplicitReceivergetCallType*getNameForFunctionWithPossibleDefaultParamgetDataFlowInfoForArgumentsgetPrecisePrimitiveTypegetCalleeExpressiongetCoroutinePropertyNamegetTypeArgumentListgenerateDelegateCallgetReferenceToJsClassgetValueArgumentListgetFunctionLiteralArgumentsgetCallOperationNodeaddAccessorsToPrototypegetReferenceToJsClassOrArrayresolveAccessorCallgetCandidateDescriptorgetResultingDescriptorgetTypeArguments hasOwnParametersWithDefaultValueaddFunctionButNotExportdefinePackageAliasaddFunctionToPrototypesplitToRanges!getPrimitiveNumericComparisonInfogetPrecisePrimitiveTypeNotNullcreateCoroutineResultcreatePrototypeStatements'hasOrInheritsParametersWithDefaultValuegetCallElementexportStatementgetLocalPackageNameexportObjectnormalizeImportTagsgetTranslationResultisReceiverAncestorgetNameForCapturedDescriptorgetNameForCapturedReceivergetJsNameForCapturedDescriptorisSingletonReceiverhasCapturedExceptContainingisInLocalDeclarationcaptureIfNeedusedgetObjectIntrinsicgetFunctionIntrinsicgetBinaryOperationIntrinsiccreateIntrinsicwrapIfNecessaryaddClassPostDeclarationsdefineModuledecomposeTestInvocationisMemberReferencetryUpdateTests
mergeNamestryUpdateMainisBuiltinModuleaddClassPrototypesaddFragmentbuildNameMapisFakeOverrideAssignmentaddExportStatements(addImportForInlineDeclarationIfNecessarymethodIntrinsicwrapIntrinsicIfPresentcallHelperFunctioncreateKTypeParameterImplcreateTypedArray
intrinsifytypedArraysEnabledgetTagcastOrCreatePrimitiveArrayunsignedPrimitiveToSignedcreateConstructorIntrinsicisEnumEqualsIntrinsicApplicableappliedToDynamicprimitiveTypesbinaryIntrinsiccomputeAndCachebinaryOperationTypescomplexBinaryIntrinsiccoerceTotranslateAsSet	getCachedtranslateAsGetconcatArgumentsIfNeededremoveLastUndefinedArgumentstranslateUnresolvedArgumentstranslateResolvedArgumenttranslateVarargArgumentwrapInUArrayhasSpreadElementOrNamedArgumentbuildReifiedTypeArgsprepareConcatArgumentsfunctionWithMetadatadecomposeCreateFunctionCalldecomposeWrapper	decomposewrapFunctiontranslateForPropertyAccessortranslateForPropertybindIfNecessarytranslateForFunctionisSetterVisiblewrapPropertyCallableRefwrapFunctionCallableReftranslateAsSwitch)translateWhenConditionToBooleanExpressiontranslateOrConditiontranslateExpressionConditiontranslateIsConditioncollectConstantEntriescollectPrimitiveConstantEntriestranslateConditiontranslateConditions	isNegatedtranslateEntryExpressiontranslateRangeConditiontranslateCatchestranslateCatchBodywrapWithInlineMetadatagetCorrectTypeParametersreportInlineFunctiontranslateAndAliasParameterstranslateAsBlockisLocalInlineDeclarationaddDeclarationmoveCapturedLocalInsidedeclareAliasInsideFunctionaddFunctionDeclarationwithCapturedParametersgetStaticRefgetTemporaryNamesInScopegenerateStandardMethodstranslateForOverArrayWithIndex#translateForOverCollectionWithIndextranslateForOverArraytranslateForExpressiontranslateForOverLiteralRangeisForOverArraytranslateBodyiteratorMethodInvocationextractWithIndexCallfindSequence!translateForOverCollectionIndicesfindIterabletranslateForOverIteratorextractDescriptorisForOverRangehasNextMethodInvocationtranslateMethodInvocationfindCollectiontranslateForOverRangeextractForOverRangeLiteralcreateWhilefindOverriddenDescriptorfindMemberToCopyfindOptionalArgsMemberToCopycopyMemberWithOptionalArgsgenerateBridgeremoveRepeatedcopyProperty
copyMember/tryCopyWhenImplementingInterfaceWithDefaultArgscopyDefaultMembersgenerateBridgeMethodsgenerateBridgesToTraitImplcopySimpleMembergenerateClassModelcopyInvisibleFakeMember
copyMethodgenerateOtherBridges,transformCoroutineMetadataToSpecialFunctionsref,transformSpecialFunctionsToCoroutineMetadatagetSuperClassgenerateDelegateGetter%generateDelegateCallForFunctionMembergenerateDelegatesgenerateDelegateSettergenerateDelegateGetterFunctionaddInitCodegenerateDelegatedgenerateDelegateAccessorgenerateDelegateSetterFunction%generateDelegateCallForPropertyMemberemptyResultaddInitializerStatementgenerateClassOrObjectaddGetterAndSetteraccessorDescriptiongenerateDefaultSettergenerateGetterhasCustomSettertranslateCustomAccessorgenerateDefaultAccessortranslateAccessorshasCustomGetter/contextWithPropertyMetadataCreationIntrinsifiedgenerateDefaultGetterFunctiongetCustomGetterDeclarationtranslateHostgetCustomSetterDeclarationgenerateDefaultGetter(translateDelegateOrInitializerExpressiongenerateDelegatedGetterFunctiongenerateSetternewDeclarationIfNecessarygenerateDefaultSetterFunctionaddClosureParametersemitConstructorswithDefaultLocationmayBeAddThrowablePropertiesgenerateEnumStandardMethodstranslatePrimaryConstructorcreateMetadataRef*translatePropertiesAsConstructorParametersgetSupertypesNameReferencesisTraitaddMetadataTypecreateEnumInitFunctionaddMetadataObjectwithUsageTrackerIfNecessaryaddSuperclassReferencesaddObjectCachegenerateSecondaryConstructor!maybeConvertInterfaceToSamAdapteraddObjectMethodsisObjectLikebuildDefaultCallWithoutReceiverdoTranslateargsWithReceiver$buildDefaultCallWithDispatchReceiver.nativeSpreadFunWithDispatchOrExtensionReceivercanApplytranslateAsIntRangeChecktranslateAsLongRangeChecktranslateAsRangeCheckisGetAccessisSuperInvocationisNativeconstructAccessExpressiongetAccessDescriptorhasSpreadOperatorgetAccessDescriptorIfNeededtranslateSetmayBeMarkByRangeMetadataexpectedReceivers!computeExplicitReceiversForInvoke	intrinsictranslateReceiverAsExpressiontranslateGetcreateCallInfoconstructSafeCallIfNeededgetCallInfo constructSuspendSafeCallIfNeededhasPrimaryConstructorgetJetTypeFqNamesafeReferenceUsagesafeCallUsageinsideLValue!firstUninitializedNotNullPropertysafeThisUsagehandleLeakingThistranslateVariableAccesswhenSubjectTypeisWhenExhaustivegetMissingCase#createWhenMissingCaseForClassOrEnumgetSealedMissingCasesgetEnumMissingCasesgetMissingClassCasesgetNullCaseIfMissingcheckReservedPrefixgetMissingCasescheckDeprecatedWhenSyntaxcontainsNullCasegetClassDescriptorOfTypeIfEnumgetReferencegetClassIdForEnumSubject
isRelevant getClassDescriptorOfTypeIfSealedgetClassIdForTypeIfEnum whenSubjectTypeWithoutSmartCastsgetCheckedDescriptormarkReferablePoints
currentKeyremoveEntryAtIndexindexSegmentcreateEntries
getEntriespullLastBufferFromRoot	setInRootremoveFromRootAtpushFilledTailremoveFromTailAt	bufferForinsertIntoRootpullLastBufferinsertIntoTailpushTailrootSizewithPreviouswithNextcheckHasNextcheckForComodificationcheckNextWasInvokedbuilderemptyOfevaluatePresetNamedetermineCurrentlisthostTargetSuffixprefixavailableSubTargetgetNextInstructionsgetInstructionsupdateEdgeDataForInstructiongetPreviousInstructionstraverseFollowingInstructionstraverseIncludingDeadCodeisStartInstruction(getPreviousIncludingSubGraphInstructionsgetStartInstructioncollectDataFromSubgraphgetLastInstructiongetElementParentDeclaration-getDeclarationDescriptorIncludingConstructorsisBlockInDoWhilegetValueAsFunction$generateInitializersForClassOrObject"generateHeaderDelegationSpecifiers0generateDeclarationForLocalClassOrObjectIfNeededgenerateAndGetReceiverIfAnyprocessEntryOrObjectcheckNothingTypeelementsToValuesgetDeferredValuewriteLoopParameterAssignmentgenerateArrayAccessWithoutCallgetResolvedCallAccessTarget visitWhenConditionWithExpressionvisitInlinedFunctionvisitWhenConditionInRangeprocessParameterscreateNonSyntheticValuecheckAndGenerateCallgenerateArrayAssignmentgenerateTryAndCatchesgetCorrespondingLoop jumpDoesNotCrossFunctionBoundarygenerateArrayAccessvisitSuperTypeEntrygetArraySetterArgumentsvisitDelegatedSuperTypeEntryvisitSuperTypeCallEntrygetDeclarationAccessTargetreturnCrossesTryCatchBoundarygenerateCallvisitInitializerListdeclareLoopParameterprocessLocalDeclarationvisitObjectDeclarationgenerateQualifiergenerateLoopConventionCallgenerateJumpsToCatchAndFinallycheckReturnLabelTargetgenerateImplicitReturnValuegenerateArrayAccessArgumentsgeneratePseudocodejumpCrossesTryCatchBoundarygenerateBooleanOperationmergeValuesgetNearestLoopExpressiongetSubjectExpressiongenerateInstructionsgenerateInitializergetBoundOrUnreachableValue	copyValuevisitSuperTypeListisIncrementOrDecrement getCorrespondingLoopWithoutLabelplatformDefsruntimevisitDoubleColonExpressiongenerateCallOrMarkUnresolvedgenerateBothArgumentsAndMarkgetReceiverValuesgenerateValueArgumentcomputePseudoValueForParametercreateSyntheticValuevisitWhenConditionIsPatterngetLeavesOrReachableChildrenhasChildrenInSetisMeaninglesscollectSiblingsIfMeaninglessmergeAdjacentTextRanges.removeReachableElementsWithMeaninglessSiblingsgetUnreachableTextRangesregisterVariableDeclaredInScopecomputeBlockScopeVariableInfofilterOutVariablesOutOfScopeuserPropertyFilesdefinitelyInitializedcreateInitializedExhaustivelymayBeInitialized extractValWithTrivialInitializergetAllDeclaredVariablesgetDeclaredVariables%mergeIncomingEdgesDataForInitializerspreconfiguredPropertyFiles/addVariableInitStateFromCurrentInstructionIfAnyisTrivialInitializercomputeInitInfoForTrivialValsaddVariablesFromPseudocodecomputeUseInfoForTrivialValsgetDefaultValueForInitializersisValWithTrivialInitializergetBundleVersiongetUpperLevelDeclaredVariables isVariableWithTrivialInitializerisPropertyWithoutBackingField%computeDeclaredVariablesForPseudocodecomputeVariableInitializersdefaultNativescheckConstructorConsistencycheckIsInitializedmarkUnusedExpressions checkAssignmentBeforeDeclarationprocessUnusedDeclarationreportUnreachableCodecheckWhenExpressionstraverseCallscheckDefiniteReturn!isInitializationBeforeDeclarationcheckIfExpressionscheckValReassignmentpropertyFilesFromConfigDirgetResultingExpression"checkInitializationForCustomSetter!markReadOfSuspendLambdaParameterscollectReturnExpressions markReadOfSuspendLambdaParametermarkUnusedVariablesgetCompilerVersionadditionalPropertyFilesprocessUnusedParameterrecordUsedAsExpressionmarkAnnotationArgumentsmarkStatementsredirectToPrevInstructions(checkImplicitCastOnConditionalExpressionplatformLibsmarkIfNeededisDefinitelyInitializedreportValReassignedcustomerDistributioncheckWhenStatementmustBeReportedOnAllCopiescombineKindsmarkAndCheckRecursiveTailCallscollectUnreachableCodemarkAndCheckTailCalls#markImplicitReceiverOfSuspendLambdaisUsedAsResultOfLambdamarkUninitializedVariables&checkForSuspendLambdaAndMarkParameterscheckExhaustiveWhenStatementrecordInitializedVariables5collectResultingExpressionsOfConditionalExpressionRec2collectResultingExpressionsOfConditionalExpressionisCapturedWriteisInsideTrycheckLocalFunctionsgetSubtypesPredicateexpectedTypeForbuildDistribution
repeatPartkonanPlatformLibraryPathkonanCommonLibraryPathgetNextPositionprocessInstruction!repeatLabelsBindingForInstructionrepeatWholehostOsaddExitInstruction
copyLabelsaddSinkInstructionaddErrorInstructionrepeatInternaltargetManagercreateLabel	getLabelsresolveAliasmarkDeadInstructionsgetLocalDeclarationsaddInstructionaddValueUsageaddMergedValueshost_osgetMergedValuesgetJumpTarget$collectAndCacheReachableInstructionscopyInstructioncollectReachableInstructionshostArchbindElementToValuegetElementValuesRecursivelygetExpectedTypePredicategetReceiverTypePredicatecalcSideEffectFreeaddTypePredicatesaddSubtypesOfcollectValues)getTypePredicateForUnresolvedCallArgumentgetContainingPseudocodegetPseudocodeByElement$getPrimaryDeclarationDescriptorIfAnyaddByExplicitReceiverdetermineHosttargetByNamesimpleOsNametoKonanTargetslistAliaseshostArchOrNull	host_archknownplatformNamefindAppropriate
fromStringprintMillisecondssuffixIfNotprefixIfNotprefixBaseNameIfNot	profileIfremoveSuffixIfPresentnTabsparseSpaceSeparatedArgs*visitInlinedFunctionDeclarationInstructiongetValueOrNullprofileoutgoingEdgeToupdateCopyInfogenerateFinallyBlockhandleJumpInsideTryFinallygetMagicKind
popBuilderpushBuilderrenderInstruction	setResultsetResolvedTargetstrongWarningcollectFilesmergeStdlibPartscreateInsertionPlacerelativizeIfNecessaryisInsertionPlacecollectInputFilesmapSourcePathsparseCompilerVersiongetModuleNameFromPathcopyResourcecollectInputFilesFromZipcollectInputFilesFromDirectorymetaJs	copyFiles
performDcesingleInputFilereportCompiledSourcesListreportCacheStatusloadPluginsForTestssplitByPathSeparatorFilezipDirAsconfigureLibrarieszipFileSystemwithZipFileSystemaddRootpreordercreateAsSymlink	postordermkdirsrecursiveCopyTodeleteOnExit"invokeExtensionsOnAnalysisCompleteuseJavacdeleteOnExitRecursivelycheckKeyIsNull#exportsAtLeastOnePackageUnqualifiedgetRootFilesuffixpropertyListresolvablePropertyStringkeepOnlyDefaultProfilesdisposeAccessorsavePropertieshasConfigFiletoBooleanLenientgetProperFunctionresolvablePropertyListpropertyString	parkNanosregisterTimeLoopThreadwrapTaskunregisterTimeLoopThreadunTrackTaskmakeReplClassLoadercurrentTimeMillisconnect	trackTaskposInCurrentLine	getEnginenextCodeLinecreateBindingslocationStringgetCurrentStategetInvokeWrapperasJsr223EvalResultoverrideScriptArgsadjustHistoriesunparkhandleOnCompletionExceptiongetCompletionExceptionOrNullinvokeFunction
invokeImplproxyInterfacegetInterfaceprioritizedHistoryfindMapping
tryResetToassertSameSizeassertSameIdcancellationExceptionMessageremovePlaceholderprocessClassesaddPlaceholder prependClassLoaderWithNewClassescompiledClassesNamesclassNameFromPathaddFinalgetChildJobCancellationCausefirstMismatchWhileverifiedPopfirstMismatchFilteredmakeNodeonCompletionInternallastCodeLine	lastValuecheckHistoryIsInSyncfirstMismatchingHistoryresetToLinecopyAll
copyValueslastItemcopySourcesreplUnescapeLineBreakslistLocalUrlsAsFilesensureNotEmptyreplNormalizeLineBreaksscriptResultFieldNamemakeScriptBaseNamereplRemoveLineBreaksInTheEndrenderReplStackTracereplEscapeLineBreaksreplAddLineBreaklistAllUrlsAsFilesreplInputAsXmlreplOutputAsXml
getProgramgetMimeTypesgetLanguageNamegetOutputStatementgetMethodCallSyntaxgetEngineNamegetEngineVersiongetLanguageVersiongetCancellationExceptiongetOutputDirectoryaddSourceFilesgetJavaSourceRootsgetModuleTypeaddClasspathEntryaddCommonSourceFilesaddFriendDirgetClasspathRootsgetFriendPathsgetCommonSourceFilesattachChildvisitErrorElementisAtEofupdateField%parsePreprocessedCommandLineArguments(parseCommandLineArgumentsFromEnvironmentvalidateArgumentsupdateInternalArgumentsparseCommandLineArgumentsfrozenunfrozengetInstanceWithFreezeStatus	parseTailreportAndReturnNullcanParseparseInternalArgumentreadArgumentsFromArgFilepreprocessCommandLineArgumentsparseNextArgumentconsumeRestOfQuotedSequenceisPreIrBackendDisabledisIrBackendEnabledcopyPropertiescopyBean&setApiVersionToLanguageVersionIfNeededcopyFieldsSatisfyingcopyValueIfNeededcopyInheritedFields
copyBeanTo
mergeBeansreportDuplicateAnnotationparseJsr305StateparseJsr305UnderMigrationreportUnrecognizedReportLevelparseAnnotationWithReportLevel&parseNullabilityAnnotationReportLevelsparseJspecifyReportLevel+parsePlainNullabilityAnnotationReportLevelsinvokeOnCompletion)configureLanguageFeaturesFromInternalArgscheckProgressiveModeparseVersionfindOutdatedVersiongetCompletedcheckLanguageVersionIsStablecheckOutdatedVersionstoLanguageVersionSettings.checkApiVersionIsNotGreaterThenLanguageVersiongetSuccessfulResultsetIdeaIoUseFallback
trySuspendgetExceptionalResultlowestVisibilityAmongOverridescreateStatustoEffectiveVisibilityreturnExpressionscopyWithNewSourceKinddependenciesWithoutSelfbindSessiondependsOnDependencysourceFriendsDependenciessourceDependenciessourceDependsOnDependenciesfriendDependencies
createDatacreateDependencyModuleDatafriendDependencydependsOnDependenciestoQualifiedAccessrecordCallLookuprecordIfValidrecordTypeLookuprecordTypeResolveAsLookupisPrimitiveUnsignedNumberType%isPrimitiveNumberOrUnsignedNumberTypecontainingClassForLocaldispatchReceiverTypeOrNulldispatchReceiverClassOrNulloriginalIfFakeOverrideoriginalOrSelfunwrapFakeOverridescontainingClassparentCancelledbuildErrorReference"createCallableReferencesInfoForLHS2resolveOnlyEnumOrQualifierAccessAndSelectCandidateselectDelegatingConstructorCallinitTransformer+resolveVariableAccessAndSelectCandidateImplresolveCallAndSelectCandidatetransformExplicitReceiverresolveAnnotationCall resolveDelegatingConstructorCall'resolveVariableAccessAndSelectCandidateisValueParametersNotEmptycreateResolvedNamedReferencewithNoArgumentsTransform createCandidateForAnnotationCallconsumeCandidatecollectAllCandidatesresolveCallableReferencetoFirTypeProjectionreduceCandidatesUanalyzeLambdaAndReduceNumberOfCandidatesRegardingOverloadResolutionByLambdaReturnTypereduceCandidatesImplresolvedTypeFromPrototypeerrorTypeFromPrototypecopyAsImplicitInvokeCallcontinueQualifierInPackageextractNonFatalDiagnosticsresolveRootPartOfQualifiercontinueQualifier nullableSessionComponentAccessorsessionComponentAccessorgetTopLevelFunctionSymbolsTogetTopLevelPropertySymbolsTogetClassLikeSymbolByClassIdgetFirJavaClassgetTopLevelCallableSymbolsTocontainingNonLocalClassgetOwnerLookupTag
isSubClasscanSeePrivateMemberOf isAllowedToBeAccessedFromOutsideownerIfCompanioncanSeeProtectedMemberOfisSpecificDeclarationVisiblematchWithContainingDeclarationsisVariableOrNamedFunction%doesReceiverFitForProtectedVisibilityvisitWrappedDelegateExpressionrenderClassDeclarationsvisitElvisExpressionrenderTypesSeparatedvisitBackingField!renderAsDeclarationAttributeValuerenderDeclarationDatavisitTypeParameterRefvisitTypeRef
pushIndentvisitImplicitTypeRefvisitStarProjectionvisitPackageDirectivevisitBinaryLogicExpressionvisitEffectDeclarationvisitStringConcatenationCallvisitTypeRefWithNullabilityvisitDynamicTypeRefrenderContextsrenderDeclarationOriginIfNeededvisitAnonymousObjectExpressionvisitQualifiedAccessExpression%renderDeclarationResolvePhaseIfNeededvisitSuperReference	popIndent#renderDeclarationAttributesIfNeededvisitWhenSubjectExpressionvisitArrayOfCallvisitConstExpressionvisitExpressionWithSmartcastvisitResolvedCallableReferencevisitFunctionCallvisitQualifiedAccessunwrapIntersectionOverridesvisitContextReceivervisitTypeProjectionWithVariancevisitSafeCallExpressionvisitPropertyAccessExpressionvisitTypeOperatorCallvisitFunctionTypeRefvisitThisReferencevisitEqualityOperatorCallvisitResolvedTypeRefvisitBackingFieldReferencevisitCheckedSafeCallSubjectvisitCheckNotNullCall visitResolvedContractDescriptionvisitRawContractDescription
renderBodyvisitDelegatedConstructorCallvisitErrorNamedReferencevisitIntegerLiteralOperatorCallrenderInBracesrenderSeparatedvisitAnnotationCall visitAnonymousFunctionExpressionvisitImplicitInvokeCallrenderVariancerenderWithTypevisitGetClassCallvisitResolvedNamedReferencerenderContractDescriptionrenderDeclarationsvisitNamedReferencemodalityAsStringrenderParametersvisitVarargArgumentsExpression!visitLegacyRawContractDescriptionrenderSeparatedWithNewlinesvisitMemberDeclarationgetAttributesWithValuesrenderArgumentMappingvisitErrorTypeRefvisitComparisonExpressionrenderSupertypesvisitLoopJumpvisitRegularClassvisitUserTypeRefvisitContractDescriptionvisitResolvedQualifiervisitClassReferenceExpressionvisitDelegateFieldReferencevisitComponentCallvisitThisReceiverExpressiontoFirJavaTypeReftoConeFlexibleTyperesolveIfJavaTypetoLookupTageraseToUpperBound toConeKotlinTypeForFlexibleBounderaseAsUpperBound toConeKotlinTypeProbablyFlexibleeraseToUpperBounds getContinuationCancellationCausebuildEnumCalltoFirAnnotationCallfillAnnotationArgumentMappingconvertAnnotationsToFiraddFromJava!collectAllDependentSourceSessionsnewReferenceListmapToCanonicalStringcreateJavaFileStub#collectAllDependentSourceSessionsTonewTypeParameterList	buildStub
toFirClassaddSupertypesReferencesLists	packFlagsmapToCanonicalNoExpansionStringbuildDeclaredMemberScopefindJavaSuperClassgetUseSiteMemberScope getStaticMemberScopeForCallables!buildSyntheticScopeForAnnotations$buildUseSiteMemberScopeWithJavaTypesfindClosestJavaSuperTypesgetNestedClassifierScopebuildJavaEnhancementScopeaddStackoverriddenMembers"doProcessDirectOverriddenCallables
nameStringregisterSessionsetProperTypecreateConstantIfAnycreateArrayOfCallcreateConstantOrErrorbuildErasurehasPrimitiveReturnTypeInJvmdoesReturnTypesHaveSameKind*buildTypeParametersSubstitutorIfCompatibleisTypeParameterDependentisOverriddenFunction"isEqualArrayElementTypeProjectionsisOverriddenPropertyisPrimitiveInJavacompleteExceptionallytryResumeWithExceptionresumeUndispatchedcompleteResumeinvokeOnCancellationconvertJavaMethodToFir+convertJavaAnnotationMethodToValueParametercreateFirJavaClassbuildSelfTypeRef"buildConstructorForAnnotationClasstoFirTypeParameterconvertJavaInitializerToFirhasMetadataAnnotationtopLevelNameconvertJavaConstructorToFirresumeUndispatchedWithExceptionconvertJavaClassToFirhasTopLevelClassOfconvertJavaFieldToFir	tryResumecollectSafelygenerateSyntheticPropertySymbolcomputeJvmDescriptorForGettercollectFunctionscreateOverridePropertyIfExistsisVisibleInCurrentClasstoFir4processOverridesForFunctionsWithErasedValueParameterchooseModalityForAccessor0processOverridesForFunctionsWithDifferentJvmNamehasErasedParametershasKotlinSuperisOverriddenInClassByprobablyJavaTypeRefToConeTypecomputeJvmDescriptorForSetterprocessSpecialFunctionsextractDefaultQualifiersfirstOverriddenCallablevalueParametersAreEmptycompareAndSetfirstOverriddenFunctionisFromBuiltinClass findBuiltinSpecialPropertyFqNamecommandensureActivelexicalCastFromenhanceConeKotlinTypeenhanceInflexibleTypemutableToReadOnlycomputeSubtreeSizesbuildJavaValueParameterbuildJavaValueParameterCopyonSubscriptionresetReplayCachetryEmitconflatebuildJavaMethodCopy	retryWhenbuildJavaMethoddistinctUntilChangedcatchreplaceContractDescriptionflowOncancellableWhileSubscribedtransformDelegatedConstructor
createSlotcreateSlotArraydropChannelOperatorsfusebuildJavaConstructorflowCollectenhanceValueParameterTypeenhancedFunction
getTypeRefreplaceBoundsenhanceMethodenhanceReturnTypecomputeDefaultQualifiersenhancedPropertychildCancelledenhanceTypeParameterBoundenhanceReceiverTypeloadAnnotationsFromClassFileloadJavaClassgetPropertySignaturegetCallableSignature*findJvmBinaryClassAndLoadMemberAnnotationscomputeJvmParameterIndexShiftloadMemberAnnotationscheckContextreplaceCompanionObjectSymbolbuildJavaClassreplaceSuperTypeRefstransformSuperTypeRefstransformDeclarationsadditionalToStringPropsproduceImpl	collectToallocateLocked
freeLocked
tryAcquireacquirebuildJavaFieldtryLocktoIrInitializerprepareTypeParametersloadAnnotationIfNotSpecialtoEnumEntryReferenceExpressiontoDefaultResolvedTypeReftoFirClassReferenceExpressioncreateThisReceiverParameter	holdsLockshouldHaveDispatchReceiverasReversedFrozenpromotegetFakeOverridesByNameisAbstractMethodOfAnylistMultimapOfcreateEmptyContainersetMultimapOfisStableSmartcastconeTypeUnsafeextractContextReceiversCountconeTypeSafetoConstKinddropExtensionFunctionAnnotationhasNotNullUpperBoundprocessNextEventcomputeTypeAttributesshouldBeProcessedFromContextcreateClassLikeTypeapproximateIntegerLiteralBounds&commonSuperTypeBetweenTwoConstantTypescreateSupertypeListapproximateIntegerLiteralTypeaddUnsignedPossibleType/commonSuperTypeBetweenIntegerTypeAndRegularTypegetApproximatedTypeImplwithNullabilityAndAttributescommonSuperType
predefinedremoveQuestionMarkdoUnifyunwrapDefinitelyNotNulllowerBoundIfFlexibleforEachTypeupperBoundIfFlexiblemapTypeswithAlternativefindCommonIntersectionTypenoImplarrayElementTypevarargElementTypeisPotentiallyArraycreateOutArrayTypeisCustomAttributewithReplacedReturnTypecommonSuperTypeOrNullshouldHideLocalTypeintersectTypesOrNullwithAttributesapproximatedForPublicPositionapproximatedIfNeededOrSelf%requiresApproximationInPublicPositionregisterSelectClause1isUnsafeVarianceTypecaptureFromArgumentsInternalwithoutEnhancedNullabilityhandleJobExceptionconeFlexibleOrSimpleTypewithReplacedConeTypehideLocalTypeIfNeeded&makeConeTypeDefinitelyNotNullOrNotNullisKFunctionTypeisTypeMismatchDueToNullability1suspendFunctionTypeToFunctionTypeWithContinuation%findSubtypeOfNonSuspendFunctionalType!suspendFunctionTypeToFunctionTypeisKMutablePropertyisSubtypeOfFunctionalTypereceiverTypeisFunctionalTypefunctionClassKindtypeOrDefaultfindBaseInvokeSymboltoFunctionClassKindisBuiltinFunctionalTypefindContributedInvokeSymbol$valueParameterTypesIncludingReceiverwithPrettyRenderrenderAttributesapproximateToSubTypeapproximateToSuperTypeisAnyOfBuiltinTypefixedPeriodTickerconstructClassTypeconstructClassLikeType!computeSupertypePolicyAndPutInMapgetCorrespondingSupertypescaptureTypecomputeSupertypesMapflatIntersectionTypesresultNullabilitybuildJavaTypeRefperformAtomicTrySelectwithFakeSource	onTimeoutisIntegerLiteralTypeallBoundsAreNullabletrySelectOtherunknownConstructorError	trySelectfastCorrespondingSupertypesdisposeOnSelectinitCancellabilitybuildPlaceholderProjectionbuildTypeProjectionWithVariancebuildDynamicTypeRefbuildImplicitTypeRefCopybuildImplicitTypeRefbuildResolvedTypeRefCopybuildResolvedTypeRefbuildFunctionTypeRefbuildFunctionTypeRefCopybuildStarProjectionbuildUserTypeRefbuildIntersectionTypeRefbuildErrorTypeRefbuildErrorTypeRefCopyhandleBuilderExceptionresumeSelectWithExceptionregisterSelectClause2debugCollectOverridesonStartscopeForSupertypescopeForClasssubstitutoronCancelIdempotentListresumeOnCancellationFunscopeForClassImplcomputeReturnType&processOverriddenPropertiesWithVisitedaddOverriddengetDirectOverriddenFunctions"processDirectlyOverriddenFunctionsprocessOverriddenProperties*getDirectOverriddenPropertiesWithBaseScopegetDirectOverriddenProperties)getDirectOverriddenFunctionsWithBaseScopedoProcessAllOverriddenCallablesprocessOverriddenFunctions'getDirectOverriddenMembersWithBaseScope#processDirectlyOverriddenProperties%processOverriddenFunctionsWithVisitedgetDirectOverriddenMemberscollectAllPropertiesprocessAllPropertiesprocessAllFunctionscreateImportingScopesdoCreateImportingScopesisSymbolFromUnstableSmartcastprocessTypedCompositemarkSymbolFromUnstableSmartcastgetDeclaredConstructorsgetSingleClassifierprocessClassifiersByName"processOverriddenPropertiesAndSelf!processOverriddenFunctionsAndSelfextractBothWaysOverridableisTypeMoreSpecificresumeReceiveClosedappendClassLikeTypeisVoidappendConeType"computeJvmDescriptorRepresentation getFunctionsFromSupertypesByName/processDirectOverriddenMembersWithBaseScopeImplcollectDeclaredFunctionsextractSomeSymbolFromSuperType*computeDirectOverriddenForDeclaredFunctioncollectFunctionsFromSupertypesprepareSignaturesgetOrCreateSubstitutedCopygetOrCreateCopygetAllDefaultImportsupdateReturnType	toNameSet*getPropertiesAndFieldsFromSupertypesByName*computeDirectOverriddenForDeclaredPropertyisPublicInAny!collectFunctionsFromSpecificField
buildScope"collectPropertiesFromSpecificField	hasTypeOffilterOutOverriddenfilterOutOverriddenFunctionsfilterOutOverriddenPropertiesbuildResolvedImportByClassIdprocessCallablesgetStaticsScopeprocessImportsByName5wrapNestedClassifierScopeWithSubstitutionForSuperTypeisCompatibleTypeParametersisEqualReceiverTypesisEqualBoundmaybeEqualErrorTypes%createSubstitutionOverrideConstructorcreateSubstitutedData$processDirectOverriddenWithBaseScope similarFunctionsOrBothPropertiescreateCopyForFirConstructorcreateCopyForFirFunctioncreateCopyForFirProperty%createNewTypeParametersAndSubstitutor configureAnnotationsAndSignature#createSymbolForSubstitutionOverridesubstituteReceiverAndReturnType.configureAnnotationsTypeParametersAndSignature
toConeTypewrapIntOperator'isWrappedIntegerOperatorForUnsignedType-getOrBuildScopeForIntegerConstantOperatorTypeisWrappedIntegerOperatornestedClassifierScopecreateNestedClassifierScopelazyNestedClassifierScopedeclaredMemberScope&declaredMemberScopeWithLazyNestedScopecreateDeclaredMemberScopegetDirectOverriddenSymbols-processDirectOverriddenCallablesWithBaseScopeprocessCallablesByNameprepareIntersectionScope!buildSubstitutorForOverridesCheckgenerateNestedClassifiergenerateMemberFunctionsgenerateMemberPropertiesgetExtensionsForClassgroupExtensionsByNameconvertToDescriptorVisibilitycollectCallableschooseIntersectionVisibilityisIntersectionOverridecollectClassifiersrealOverridden"chooseIntersectionOverrideModalityunwrapSubstitutionOverridescollectMembersByScopecollectCallablesImplcreateIntersectionOverridecollectRealOverridden&calcBaseMembersForIntersectionOverridegetIrClassSymbolcreateIrEnumEntrycreateIrAnonymousObjectpreCacheTypeParametersenumClassModalityregisterIrClassgetIrTypeParametercreateLocalIrClassOnTheFlydeclareSupertypesregisterTypeAliasdeclareIrClass getIrAnonymousObjectForEnumEntrygetCachedIrTypeParametergetCachedLocalClassdeclareValueClassRepresentationputEnumEntryClassInScope getIrClassSymbolForNotFoundClasssetThisReceiverdeclareIrTypeAliasgetCachedTypeAliasdeclareTypeParameters"createIrTypeParameterWithoutBoundsprocessClassHeader$processMembersOfClassCreatedOnTheFly%getFieldsWithContextReceiversForClass&processMembersOfClassesCreatedOnTheFlycreateContextReceiverFieldspreCacheBuiltinClasses"declareSupertypesAndTypeParametersgetCachedIrClassdeclareIrEnumEntrygetCachedIrEnumEntrygetIrTypeParameterSymbol)processLocalClassAndNestedClassesOnTheFlyprocessClassMembersbindFakeOverridesInFilesyntheticPropertiesLast!processClassAndNestedClassHeadersreferencePropertiesdelegatedMembersrunSourcesConversionprocessNestedClassHeaderscreateModuleFragmentbindFakeOverridesInClass!processLocalClassAndNestedClassesprocessAnonymousObjectMembersregisterFileAndClassesreferenceTopLevelprocessFileAndClassMembersprocessMemberDeclarationreferenceFunctionsregisterNestedClassesregisterClassAndNestedClassescreateDiagnosticReporterprocessClassHeadersprocessAnonymousObjectOnTheFlyreferenceConstructorsbindFakeOverridesOrPostponeinsertImplicitCasts!insertImplicitNotNullCastIfNeeded#typeCanBeEnhancedOrFlexibleNullableacceptsNullValuesimplicitNotNullCastimplicitCastOrExpression implicitCastFromDispatchReceivertoIrTypeArgumentgetBuiltInClassSymbolisRecursivegetArrayClassSymbolhandlePropertydispatchReceiverParameter
withParentreturnTargetwithContainingFirClasslastSafeCallSubjectwithSafeCallSubjectcontainerFirClasscontainingFileIfAnywithWhenSubject	lastClassparentparentFromStacklastWhenSubject!parentAccessorOfPropertyFromStackinitComponents*unwrapSubstitutionAndIntersectionOverridesdeclareThisReceiverParametercomputeIrOrigin$createFilesWithGeneratedDeclarationswithInvariantProjectionsirOrigintoIrConstKind/contextReceiversForFunctionOrContainingPropertycreateSafeCallConstruction.createTemporaryVariableForSafeCallConstruction+processOverriddenPropertiesFromSuperClasses processOverriddenPropertySymbolsgetIrConstKindgetIrSymbolsForSealedSubclassesinSettergetSuperTypesAsIrClasses processOverriddenFunctionSymbolstoSymbolForCall*processOverriddenFunctionsFromSuperClassesdefinitelyNotNullgetIrAssignmentOrigin!generateOverriddenPropertySymbolsstatementOriginconvertWithOffsetsunwrapCallRepresentative!generateOverriddenAccessorSymbolscreateIrConstructorgetIrBuiltInsPackageFragmentgetOrCreateIrPropertygetIrCallableSymboloriginalDeclarationForDelegatedareCompatible'convertAnnotationsForNonDeclaredMemberspreCacheBuiltinClassMembersisIllegalFakeOverridecreateIrFunctiongetIrVariableSymbolcreateIrLocalDelegatedPropertygenerateLazyFakeOverridescreateIrParameterconvertCatchingbindAndDeclareParametersgetIrDelegateFieldSymbolcreateIrLazyPropertygetIrConstructorSymbol$createIrParameterFromContextReceiverregisterFilegetCachedIrCallable	getIrFilegetOrCreateIrFunctiongetCachedIrConstructordeclareIrAccessordeclareIrSimpleFunctiondeclareIrConstructorgetIrFieldSymbolgetCachedIrFieldgetFakeOverrideInClassgetIrBackingFieldSymbol&getIrExternalOrBuiltInsPackageFragmentgetIrExternalPackageFragmentgetIrPropertyForwardedSymbolcacheDelegationFunctionsetAndModifyParentcacheDelegatedPropertygetIrValueSymbolgetCachedIrAnonymousInitializergetIrPropertySymbolcreateIrLazyFunctioncreateIrPropertyAccessortoStubPropertysaveFakeOverrideInClasscreateBackingFieldfindIrClassdeclareIrFieldgetCachedIrPropertycomputeDeclarationOriginfindIrFakeOverridecreateIrPropertydeclareDefaultSetterParameter createIrFieldAndDelegatedMembersgetOrCreateDelegateIrFieldcreateIrVariabledeclareTemporaryVariablegetIrFunctionSymbolgetCachedIrFunctionfindIrParent getOrCreateIrPropertyByPureFieldaddContextReceiverParametersTodeclareParameterscreateIrFielddeclareIrPropertyputParametersInScopedeclareIrVariablecreateDefaultSetterParametergetOrCreateIrConstructorcreateIrAnonymousInitializerenterCallablegetLocalClassleaveCallableputLocalClassgetPrimitiveTypeOrSupertype!promoteIntegerTypeToIntIfRequiredleastCommonPrimitiveNumericType#inferPrimitiveNumericComparisonInfoconvertToIrBlockopenSubscriptiontoIrDeclarationconvertCallableReferenceAccessonCancelIdempotentmapToIrStatementsgetStatementsOriginpollSelectInternal!isThisForClassPhysicallyAvailablepollInternalenqueueReceiveInternalcompleteResumeReceivevisitLocalVariabletryResumeReceivereceivetoIrStatementconvertToIrBlockBodytoIrClassSymbolreceiveOrNullreceiveCatchingconvertToIrVarargElement
tryReceivetoIrWhenBranchsendtakeFirstReceiveOrPeekClosedundeliveredElementtrySendcompleteResumeSendconvertJumpWithOffsetsgenerateWhenSubjectVariableconvertToArrayOfCallinvokeOnCloseirGetLhsValueregisterSelectSendvisitWrappedArgumentExpressiontryResumeSendofferInternalconvertToIrReceiverExpressiongenerateWheninsertImplicitCastresumeSendClosedenqueueSendinvokeOnCloseHandlerofferofferSelectInternalconvertToIrExpressionOrBlockafterCompletionafterResumeisDispatchNeeded,flexibleNullabilityAnnotationConstructorCall rawTypeAnnotationConstructorCall,enhancedNullabilityAnnotationConstructorCallannotationSymbolByIdtoConstructorCall.extensionFunctionTypeAnnotationConstructorCallcreateSerializergenerateMetadataExtraFlagsresolveToClassDescriptorscopyToFreeAccessor#makeFirMetadataSerializerForIrClasscopyToFreeProperty/makeLocalFirMetadataSerializerForMetadataSourcebindMethodMetadatabindPropertyMetadatainvokeOnTimeoutbindFieldMetadatascheduleResumeAfterDelaycopyToFreeAnonymousFunctionmakeElementSerializertransformAnnotationtransformSingleArgconvertToConstIfPossibletransformVarArgevaluateConstantsreplaceIfErroreffectiveParentcomputeManglemangleTypeParametermangleFunctionappendSignaturemangleSimpleDeclarationspecialValueParamPrefix
mangleTypeaddReturnTypemangleValueParameterplatformSpecificFunctionNamemangleTypeParameterReferencemangleSignaturedelaywriteGenericArguments$hasNothingInNonContravariantPositiongetJvmShortNamecontinuationTypeConstructorasTypeParameterwriteInnerPartsgetClassInternalNamefunctionNTypeConstructorrepresentativeUpperBoundparentClassOrNullwriteGenericType	isRawTypegetScriptInternalName	toIrClassmapTypeDefaultserializeJvmPackage&isJvmFieldPropertyInInterfaceCompanion,writeVersionRequirementForJvmDefaultIfNeeded(writeInlineParameterNullCheckRequirement
getBindingmethodSignaturefieldSignature(needsInlineParameterNullCheckRequirementwriteLocalPropertiesrequiresSignaturepropertySignaturetransformEqualityOperatorCallnegatetransformIdentityOperatorCalleraseImplicitCastgenerateEqualityOperatorCallconvertComparisonExpressiongetSymbolAndOriginForComparisonconvertEqualityOperatorCallgenerateComparisonCallfallbackToRealCalltoIrAnnotationssetReceiversetDefaultValueinitializeBackingFieldconvertFunctionContentsetPropertyAccessorContentconvertClassContentconvertPropertyContentconvertFieldContenttoIrDelegatingConstructorCallcreateStandardNumericMembersconfigureSuperTypesaddPackageFunaddArrayMembersreferenceClassByFqname#createStandardNumericAndCharMembersreferenceClassByClassIdensureLazyContentsCreatedfinalizeClassDefinitioncreateStandardBitwiseOpsgetNumericConstantsExpressionscreateMemberFunctionaddBuiltinOperatorSymbolforEachSuperClasscreateStandardRangeMemberscreatePrimitiveArrayClasscreateNumberClass(getPrimitiveArithmeticOperatorResultTypegetMaybeBuiltinClassbuildIrGetValueArgumentneedSuspendConversioncreateAdapterParametergetArgumentTypeAtapplyConversionOnVararg createAdapterFunctionForArgument%createAdapteeCallForCallableReferencecreateAdapteeCallForArgumentneedCoercionToUnitneedVarargSpread(generateFunInterfaceConstructorReference&needToGenerateAdaptedCallableReference generateAdaptedCallableReferencefindInvokeSymbolapplySamConversionIfNeededtoIrGetValue)createAdapterFunctionForCallableReferenceapplySuspendConversionIfNeededfindBoundReceiver&generateFunInterfaceConstructorAdapterneedSamConversion)discardAccessorsAccordingToBaseVisibility&calcBaseSymbolsForFakeOverrideFunction#getOverriddenSymbolsForFakeOverride%shouldHaveComputedBaseSymbolsForClassallowsToHaveFakeOverrideIngetFakeOverridescomputeBaseSymbolssetOverriddenSymbolsForPropertycreateFakeOverriddenIfNeeded getOverriddenSymbolsInSupertypesbindOverriddenSymbolsgenerateFakeOverridesForNamebuildPackageDirective
buildLabelgenerateDataClassComponentBody$generateSingleFieldValueClassMemberscreateSyntheticIrParametergenerateCopyBodygenerateDataClassCopyBody#generateMultiFieldValueClassMembersgenerateDataClassMembersgenerateComponentBody!generateDispatchReceiverParametercreateSyntheticIrFunctionfindDelegateToSymbol%bindDelegatedMembersOverriddenSymbolsgenerateBodiesgenerateDelegatedFunctiongenerateDelegatedPropertyisDefaultJavaMethod
boundClassshouldSkipDelegationForunwrapDelegateTargetcreateDelegateBodypushFirTypeParametersdropLastLabelwithNewLabelgetLastLabelforwardLabelUsagePermissionaddNewLabelsetNewLabelUserNodeappendOuterTypeParameterspopFirTypeParametersapplyReceiversapplyCallArgumentsconvertToIrSetCallfreezetryConvertToSamConstructorCallputContextReceiverArgumentsconvertToIrCallableReferencegenerateErrorCallExpressionneedArgumentReorderingfindIrReceiverconvertArgumentfindTypeParameterapplyTypeArgumentstoAnnotationCallconvertToGetObject buildSubstitutorByCalledFunction&computeFieldSymbolForCallableReferencefindIrDispatchReceiver$applyArgumentsWithReorderingIfNeededsuperQualifierSymbolconvertToIrConstructorCall.applyAssigningArrayElementsToVarargInNamedFormfindIrExtensionReceiverlookupSuperTypescreateSubstitutionisClassBasedTypescopeSessionKeycollectSuperTypescomputePartialExpansioncollectSymbolsForTypecollectClassIdsisThereLoopInSupertypescreateSubstitutionForSupertypedelegateAccesscreateSafeCallgenerateNotNullOrOthergenerateContainsOperationtoFirOperationgenerateLazyLogicalOperationisContractPresentFirCheckfilterUseSiteTargetgenerateAccessorsByDelegate$extractContractDescriptionIfPossible generateResolvedAccessExpressiontranslateEscapeparseCharactergenerateComparisonExpressionthisRefpropertyRefgenerateAccessExpressionpullUpSafeCallIfNecessarytoUnaryNametoBinaryNamegetDiagnosticescapedStringToCharactercreateConventionCallwithExpectedTypeexpectedTypemode
outerClass	outerTypereplaceReceiverTypegetOriginalTypeaddContextReceiverputIfNameIsNotNulladdAllContextReceiversgetReceiverIndexaddReceiverLabelAliasisEqualsfirClassLike(isValidTypeParameterFromOuterDeclarationputAssignmentToSafeCallinitCompanionObjectSymbolAttr/generateIncrementOrDecrementBlockForArrayAccess(dispatchReceiverForInnerClassConstructor!generateIncrementOrDecrementBlockwithCapturedTypeParametersgenerateAugmentedArraySetCalladdCapturedTypeParameters!putIncrementOrDecrementStatementsgenerateComponentAccessreportIncorrectConstantinitContainingClassForLocalAttr4convertUnaryPlusMinusCallOnIntegerLiteralIfNecessarygenerateComponentFunctionsupdateThreadContextprepareTargetbuildBlockProbablyUnderSafeCall#generateConstantExpressionByLiteral-constructorTypeParametersFromConstructedClasstoReturnregisterSelfTypebuildExpressionWithErrorLabelbuildLabelAndErrorSourcetoDelegatedSelfTypewithDefaultSourceElementKind*buildErrorTopLevelDestructuringDeclarationcallableIdForClassConstructortoInterpolatingCallconvertValueParameterNamebindToErrorFunctionconvertFirSelectorwithChildClassNamecallableIdForNameinitializeLValuegenerateAssignment3generateIncrementOrDecrementBlockForQualifiedAccesscopyWithSpecialenumMapexpandedRegularClassIfAnycanBeConsideredProperTypeshouldTryResolveLHSAsExpressionresolveTypeOnLHSresolveExpressionOnLHSresolveDoubleColonLHSshouldTryResolveLHSAsTypecanBeConsideredProperExpressiontryResolveLHS.propagateTypeFromQualifiedAccessAfterNullCheck"getAsForbiddenNamedArgumentsTargetgetNarrowedDownSymbolinitialTypeOfCandidateconstructFunctionalTypeRef typeForReifiedParameterReferencerestoreThreadContextgetContainingClass*transformQualifiedAccessUsingSmartcastInfoconstructFunctionalTypeisIntegerLiteralOrOperatorCall)createConeDiagnosticForCandidateWithError!propagateTypeFromOriginalReceiver!expressionTypeOrUnitForAssignmenttypeFromSymbolgetHasStableParameterNames0transformWhenSubjectExpressionUsingSmartcastInfo!getCorrespondingClassSymbolOrNulltypeForQualifiertypeForQualifierByDeclarationtypeFromCalleebuildResolvedQualifierForClass%transformExpressionUsingSmartcastInfo
getOrBuildscopescreateWithEmptyScopeSessioncreateCurrentScopeListisClosedapplyAttributesFromfullyExpandedTypeNoCache)convertProjectionKindToConeTypeProjectionapplyNullabilityFrommapTypeAliasArgumentsdirectExpansionTypefullyExpandedTypevisitSuperExpressiontoFirPropertyAccessorconvertElementtoFirBackingFieldtoFirEnumEntrytoFirStatement
lazyBodiesconvertSafe
toFirBlockbindFunctionTargetextractArgumentsTobuildTypeReferencevisitTypeReferenceextractDelegateExpressiontoFirDeclaration
updateHeadcreateDispatchertoFirOrUnitTypeextractSuperTypeListEntriesTodisabledLazyModetoFirConstructortoFirOrErrorTypeconvertPropertyconfigureBlockWithoutBuildingresumeCancellableWithbuildFirBody	takeStateunwrapNullable visitCollectionLiteralExpressionreleaseextractTypeParameterextractValueParametersTogetAllModifierListsextractAnnotationsFromtoFirOrImplicitType visitCallableReferenceExpressionextractAnnotationsTosplitToCalleeAndReceiverdefaultVisibilityvisitClassLiteralExpressioncancelCompletedResult&findClassRepresentationThatIsSubtypeOftoSymbolOrErrorfindClassRepresentationgetSymbolByLookupTagbindSymbolToLookupTagwithParameterNameAnnotationwithCombinedAttributesFromtoFirRegularClassSymbol
isIteratorisIteratorNextisInvokeisIteratorHasNextisKFunctionInvoke	onRemoved	onPreparegetCallableReferenceContextstoreAnonymousFunctionContextdropAnonymousFunctionContextgetAnonymousFunctionContext&createErrorReferenceWithErrorCandidate)createErrorReferenceWithExistingCandidatefullyProcessCandidatetypeWithStarProjectionssmartcastScopefindSingleAbstractMethodByNamesbuildSamConstructorisPublicInObjectcomputeSamCandidateNames3hasMoreThenOneAbstractFunctionOrHasAbstractPropertytoOperationisBooleanNotisEqunwrapSmartcastExpressionunwrapElement-getOrCreateRealVariableWithoutUnwrappingAliasgetOrCreateRealVariablecreateSyntheticVariableremoveSyntheticVariablecreateRealVariableInternalgetStabilityremoveRealVariablegetIdentifierBySymbolgetOrCreateVariablestackOf	topOrNull	popOrNulltop'enterFunctionCallWithMultipleLambdaArgsenterLocalFunctionhandleFunctionFork finishPostponedAnonymousFunctionexitLocalFunctionrecordAssignmentresolveLocalVariable&exitFunctionCallWithMultipleLambdaArgscomputeAssignedLocalVariables	addLastIfretrynextIfRemoved
isEqualsTounwrapVariablehasDifferentReassignments"forEachTransitiveDependentVariablegetApprovedTypeStatementslowestCommonFlow"approveOperationStatementsInternaladdApprovedStatementsasMutableStatementpreparereplaceVariabletoPersistentsanitizeStackTraceprocessApprovedStatementsnanoTimecomputeAliasesThatDontChangefoldFlowaddVariableAliasestoDebugStringandForTypes
orForTypesremoveAllAboutVariable	runSafelyintersectSetsdispatchshutdown(replaceVariableFromConditionInStatementsmanipulateTypeStatementsorForTypeStatementstypeEqeqnotEqmergeTypeStatements	typeNotEqisRealisSyntheticinvertConditionexitCommonLoopprocessEqWithConst'exitLeftArgumentOfBinaryBooleanOperatorhasOverriddenEqualspropagateNotNullInfoenterSafeCallAfterNullCheckwithIgnoreFunctionCallsexitLocalVariableDeclarationenterFunctionCallprocessPossibleIdentity
chooseInfoisAccessToStableVariableexitRegularClass	processEqgetTypeUsingSmartcastInfoprocessEqNullexitBooleanNotexitVariableInitializationcreateFirDataFlowAnalyzerhasEqualsOverridenewAssignmentIndexexitComparisonExpressionCallunionFlowFromArgumentsexitBinaryBooleanOperatormergeIncomingFlow*getOrCreateLocalVariableAssignmentAnalyzer shouldAddImplicationForStatemententerQualifiedAccessExpressionprocessConditionalContractassertStateremoveSubGraphwalkThrowSubGraphs
orderNodesaddNodevisitCallableReferenceNodevisitClassExitNode"visitWhenSubjectExpressionExitNodevisitEnterDefaultArgumentsNode"visitPartOfClassInitializationNodevisitGetClassCallNodevisitElvisRhsEnterNodevisitElvisLhsExitNode(visitAnonymousFunctionExpressionExitNodevisitClassEnterNodevisitExitDefaultArgumentsNode&visitAnonymousObjectExpressionExitNodevisitFieldInitializerEnterNodevisitLocalClassExitNodevisitAnonymousObjectEnterNode!visitContractDescriptionEnterNodevisitFieldInitializerExitNodevisitElvisExitNodevisitElvisLhsIsNotNullNodeinitializeNodesrenderEdgesWithoutLabel	fillColorcollectNodesenterClusterforEachSubGraphsortedNodesexitClusterrenderEdgesrenderNodescreateFieldInitializerExitNode"createWhenBranchConditionEnterNode"createPropertyInitializerEnterNode!createWhenBranchConditionExitNodecreateEnterDefaultArgumentsNodecreateGetClassCallNodecreateFieldInitializerEnterNodecreateBlockExitNodecreateClassExitNode#createBinaryOrEnterRightOperandNodecreateStubNodecreateFinallyProxyExitNodecreateVariableDeclarationNode#createWhenSubjectExpressionExitNodecreateLoopEnterNodecreateLoopConditionEnterNodecreateAnnotationExitNode"createDelegatedConstructorCallNode!createWhenSyntheticElseBranchNodecreateClassEnterNode$createUnionFunctionCallArgumentsNodecreateElvisLhsExitNodecreatePostponedLambdaEnterNodecreateTryMainBlockExitNodecreateEnterContractNodecreateExitContractNode!createStringConcatenationCallNodecreateFinallyBlockExitNodecreateJumpNodecreateTypeOperatorCallNodecreateResolvedQualifierNodecreateBinaryOrExitNodecreateWhenExitNodecreateBinaryAndEnterNodecreateCatchClauseEnterNodecreateWhenBranchResultExitNodecreateWhenBranchResultEnterNodecreateAnonymousObjectEnterNodecreateAnnotationEnterNodecreateLoopConditionExitNodecreateComparisonExpressionNodecreateFunctionExitNodecreateElvisLhsIsNotNullNodecreateTryMainBlockEnterNodecreateThrowExceptionNodecreateBlockEnterNode"createContractDescriptionEnterNode"createLocalFunctionDeclarationNodecreateWhenEnterNodecreateCallableReferenceNodecreateFunctionEnterNodecreateEnterSafeCallNode!createPropertyInitializerExitNodecreateInitBlockExitNodecreateAnonymousObjectExitNodecreateTryExpressionExitNodecreateExitSafeCallNodecreateElvisRhsEnterNodecreateBinaryOrEnterNode)createAnonymousFunctionExpressionExitNodecreateEqualityOperatorCallNodecreateFinallyProxyEnterNodecreateTryExpressionEnterNode!createBinaryOrExitLeftOperandNodecreateExitDefaultArgumentsNodecreatePostponedLambdaExitNodecreateElvisExitNodecreateQualifiedAccessNodecreateLoopExitNodecreateBinaryAndExitNodecreateFunctionCallNode"createBinaryAndExitLeftOperandNodecreateCatchClauseExitNodecreateLocalClassExitNode$createBinaryAndEnterRightOperandNodecreateFinallyBlockEnterNodecreateLoopBlockExitNodecreateLoopBlockEnterNodecreateConstExpressionNodecreateCheckNotNullCallNodecreateInitBlockEnterNodecreateVariableAssignmentNode#createPartOfClassInitializationNode'createAnonymousObjectExpressionExitNoderemoveAllIncomingEdgesupdateDeadStatusremoveAllOutgoingEdgesaddJustKindEdgecallableScopeclassifierScopecreateQualifierReceiverbuildContractFirvisitValueParameterReferencevisitIsNullPredicatevisitLogicalNotcreateConstNullvisitIsInstancePredicate!visitConditionalEffectDeclaration-visitLogicalBinaryOperationContractExpressionvisitConstantDescriptorvisitInputFileProperty!chosenExtensionReceiverExpressiondispatchReceiverExpressioncontextReceiverArguments	isSuccessbestCandidates
newDataSet)buildCallKindWithCustomResolutionSequencefindTypesForSuperCandidatesAisContainedInInvariantOrContravariantPositionsAmongTypeParametersgetTypeParameterByVariable=isContainedInInvariantOrContravariantPositionsAmongUpperBoundgetDependentTypeParametersgetDependingOnTypeParameter>isContainedInInvariantOrContravariantPositionsWithDependenciesprocessNonLambdaArgumentsprocessNonLambdaArgumentaddVarargArgumentprocessPositionArgumentprocessNamedArgumenttoArgumentToParameterMappingprocessExcessLambdaArgumentsprocessExternalArgumentgetParameterByNamenumDefaultsprocessDefaultsAndRunCheckscompleteVarargPositionArgumentsremoveTypeVariableTypesconvertTypeVariableTypeyieldDiagnosticyieldIfNeedreportDiagnosticIfNotNullisLocalClassOrAnonymousObjectwithLevelOfNodeexitContract,dropPostponedLambdasForNonDeterministicCallsaddNodeWithJumpToCatchescreateIdaddNodeThatReturnsNothingexitVariableDeclarationpopAndAddEdge
isTopLevelcompleteFunctionCalladdNodeWithJumpenterSafeCalladdBackEdgeprocessUnionOfArgumentsenterContractprepareForLocalClassMembersexitIgnoredCallforEachMemberaddNewSimpleNodeIfPossiblefinallyBeforepopGraph	pushGraphpropagateDeadnessForwardextractArgumentcleanAfterForLocalClassMembersaddEdgeIfNotExistexitComparisonExpressionaddNewSimpleNodevisitLocalClassFunctionshasJavaOverriddencheckGetAndCreateSyntheticcreateFakeArgumentsForReference,needCompatibilityResolveForCallableReferencegetCallableReferenceAdaptationbuildReflectionType&varargParameterTypeByExpectedParametercanBeMutableReferencereplaceTypeRef$markCandidateForCompatibilityResolvecollectDslMarkerAnnotationsgetDslMarkersOfImplicitReceiverisSuperReferenceExpressionisSuperCall	checkImplcheckReceiverValue%getDslMarkersOfThisReceiverExpressionfindClosestMatchingReceiversprepareReceiversgetExpectedReceiverTyperesolveExtensionReceiverhasContradiction(isNotLessSpecificCallWithArgumentMappingregisterTypeVariablesisOfNotLessSpecificShape.chooseCandidatesWithMostSpecificInvokeReceiverexactMaxWithfindMaximallySpecificCallreceiverExpressioncompareCallsByUsedArgumentscomputeSignatureTypesisNonSubtypeNotLessSpecificcreateEmptyConstraintSystemargumentTypeprepareExpectedTyperesolvePlainExpressionArgument!checkApplicabilityForArgumentType!argumentTypeWithSuspendConversionresolveBlockArgumentresolvePlainArgumentTyperesolveArgumentExpressionisFunctional&tryGetConeTypeThatCompatibleWithKtType*captureFromTypeParameterUpperBoundIfNeededsubtypeErrorprepareCapturedTypecaptureTypeFromExpressionOrNullhasSupertypeWithGivenClassIdresolveSubCallArgument getExpectedTypeWithSAMConversionreplaceExplicitReceiverwithReceiverAsArgumentreplaceWithVariableAccessprocessConstructors%processFunctionsAndConstructorsByNamefindSAMConstructorForTypeAliasgetFirstClassifierOrNullprocessSyntheticConstructorsprocessConstructorsByNamegetSingleVisibleClassifierfindSAMConstructorisInvisibleOrHidden*prepareSubstitutorForTypeAliasConstructors8createToFreshVariableSubstitutorAndAddInitialConstraints!getTypeParameterFromExpandedClass+getTypePreservingFlexibilityWrtTypeVariablegetBackingFieldIfApplicableareEquivalentTopLevelCallablesfilterOutEquivalentCallsenqueueResolutionTasks#runResolverForDelegatingConstructorrunResolver$buildCandidateFactoriesAndCollectors#unwrapIntegerOperatorSymbolIfNeededbuildBaseSystemaddSubsystemFromExpression	candidatecreateCandidate'isCandidateFromCompanionObjectTypeScopecreateErrorPropertySymbolcreateErrorFunctionSymbolhandleLevel
resumeTasksuspendResolverTaskrunTasksstopResolverTaskenqueueResolverTaskrequestGroupdebugCompareToContextReceiverGroup	subscriptdebugKindArrayOfInvokeResolvePriorityNonLocalTopPrioritizedappendDebugKindImplicitInvokeReceiverLocalUnqualifiedEnumkindOfwrapSubstitutionScopeIfNeedwrapScopeWithJvmMappedprocessScopeForExplicitReceiverprocessHideMembersLevel processExtensionsThatHideMemberstoScopeTowerLevel.processCandidatesWithGivenContextReceiverGroupprocessQualifierScopesrunResolverForSuperReceivertoMemberScopeTowerLevelenumerateTowerLevels1processCandidatesWithGivenImplicitReceiverAsValuerunResolverForNoReceiver runResolverForExpressionReceiverprocessClassifierScoperunResolverForQualifierReceiverprocessLevelbuildCommonSystemupdateCallsskipCallisSuitableForBuilderInferencegetResultingSubstitutoraddLambdaImplicitReceiver!enqueueResolveForExplicitReceiver#enqueueResolveTasksForSuperReceiver(enqueueResolveTasksForExpressionReceivercreateInvokeFunctionResolveTaskcreateExplicitReceiverForInvokeenqueueInvokeReceiverTaskrunResolverForInvoke)createExplicitReceiverForInvokeByCallableprocessLevelForRegularInvoke8runResolverForBuiltinInvokeExtensionWithImplicitArgument(enqueueResolveTasksForImplicitInvokeCall enqueueResolveTasksForNoReceiverenqueueResolverTasksForInvoke/enqueueResolverTasksForInvokeReceiverCandidatesenqueueResolveTasksForQualifier8runResolverForBuiltinInvokeExtensionWithExplicitArgument4shouldSkipCandidateWithInconsistentExtensionReceiver areThereExtensionReceiverOptionsrecordCallableMemberLookupconsumeCandidatesprocessObjectsByNamewithMemberCallLookupprocessMembersdispatchReceiverValuehasConsistentExtensionReceiverconsumeCallableCandidatehasExtensionReceiverregisterSyntheticVariablescompleteCandidatesintegrateResolvedCall(createToSyntheticTypeVariableSubstitutorcreateFinalSubstitutorextractLambdaInfopreprocessLambdaArgumentpreprocessCallableReference#extractLambdaInfoFromFunctionalTypeintegrateConstraintToSystemanalyzeLambdaprocessCallableReference-applyResultsOfAnalyzedLambdaToCandidateSystemtransformToResolvedLambda(createSubstituteFunctorForLambdaAnalysisapproximateLambdaInputType createPostponedArgumentsAnalyzeraddConstraintFromExpectedType"prepareLambdaAtomForFactoryPatterncreateCompletionResultsWriterrunCompletionForCallcompleteCallhasProperConstraintprocessTypeWithoutParameterscomputeDirections-isLowerConstraintForPartiallyAnalyzedVariablehasRequiredKind%collectRequiredDirectionsForVariables%directionRequirementsForVariablesHoldcompositeVariancecomputeCompletionModeupdateDirectionenqueueTypesFromConstraintscreateConstraintSystem#updateParameterTypesFromDeclarationreplaceExpectedType&replaceTypeVariableForLambdaReturnType8extractInputOutputTypesFromCallableReferenceExpectedTypereviseExpectedType isFunctionExpressionWithReceiver%createTypeVariableForLambdaReturnType"collectDeclaredValueParameterTypes*extractLambdaParameterTypesFromDeclarationhasOnlyInputTypesAttribute#createFixVariableConstraintPosition createArgumentConstraintPositionisFunctionExpression0createTypeVariableForCallableReferenceReturnType(createTypeVariableForLambdaParameterType3createTypeVariableForCallableReferenceParameterTypegetSymbolByTypeRefgetTopLevelPropertySymbolsgetClassDeclaredFunctionSymbolsgetClassDeclaredConstructorsgetClassDeclaredPropertySymbolsgetClassDeclaredMemberScope,transformToAtomWithNewFunctionalExpectedTypereportNotEnoughTypeInformationprocessCandidateIfApplicabletoTypeConstructor"processAllContainingCallCandidatesfindFirstAtomContainingVariablesuggestElementgetOrderedAllTypeVariablesrunCompletionfixVariablecollectAllTypeVariables'processVariableWhenNotEnoughInformationcollectNotFixedVariables'getOrderedNotAnalyzedPostponedArgumentscreateCannotInferErrorTypefixNextReadyVariable!tryToCompleteWithBuilderInferencefindResolvedAtomBycomputeTopLevelCallablescomputeTopLevelPropertiescomputeTopLevelFunctionsloadTransitiveSourceProvidescomputePackagecomputeClassgetAllFirFiles
recordFilecheckMMapDiffcheckMapDiffregisterCallablesetFromensureConsistentsubstituteOrSelf"tryGetSyntheticFunctionalInterfacecreateFromStream.getTopLevelFunctionSymbolsToByPackageFragmentsloadBuiltInscreateSuperType"createSyntheticFunctionalInterfacedescribeSymboltoFqNamegetTypeArgumentsOrNameSourcegetActualTypeParametersCountresolveEnumEntrySymbol!getClassesAlignedToQualifierPartsresolveLocalClassChainresolveUserTypecreateDiagnosticsIfExistsresolveBuiltInQualifiedresolveUserTypeToSymbolwithClassDeclarationCleanuptransformVarargTypeToArrayTypetransformTypeToArrayTypetakeIfAcceptablewithBareTypeswithIsOperandOfIsOperatortransformFunctionTypeRef&createTypeSubstitutorByTypeConstructorwrapProjectionupdateNullabilityIfNeededsubstitutorByMapsubstituteCapturedTypesubstituteBoundssubstituteOriginalsubstituteIntersectedTypeschainsubstituteRecursivefindConversionFunctionapproximateIfIsIntegerConstcheckSessionConsistency4resolveConstructedTypeRefForDelegatedConstructorCall'unboundCyclesInTypeParametersSupertypesresolveClassContenthasSupertypePathToParameter runTypeResolvePhaseForLocalClassaddTypeParametersScoperesolveModalityhasPrivateConstructorhasOwnBodyOrAccessorBodyapplyExtensionTransformersresolveVisibilitygetOverriddenStatusesgetOverriddenPropertiesprocessFiletryCalculateReturnTypeprepareQualifiedTransformreplaceTypeRefWithSubstitutedhandleVarargstoResolvedReferencetoExpectedTypetransformSyntheticCallChildrenremoveExactAttributecomputeTypeArgumentTypes+transformImplicitTypeRefInAnonymousFunctioncomputeTypeArgumentssubstituteTypeReftransformSyntheticCallextractClassFromTypeRefcheckTypeArgumentsRecursivelyresolveAllSupertypesgetSupertypesComputationStatusstoreSupertypesgetResolvedSupertypeRefscheckIsInLoopgetOrPutFileScopeprepareFileScopesvisitDeclarationContentcalculateScopes"resolveSpecificClassLikeSupertypesprepareScopesapplyResolvedSupertypesToClassprepareScopeForNestedClasses,createOtherScopesForNestedClassesOrCompanionstartComputingSupertypesprepareScopeForCompanioncreateErrorTypeRefaddSupertypesFromExtensionspushAllgetOrPutScopeForCompanion%runSupertypeResolvePhaseForLocalClasssupertypeRefsresolveSupertypesInTheAirpushIfNotNullgetOrPutScopeForNestedClassestypeParametersScope
breakLoopsvisitNestedTypeAliases"createAllCompilerResolveProcessorscreateCompilerProcessorByPhasecreateAllResolveProcessorsgetCheckerscollectMissingCasescomputeMissingCasesprocessExhaustivenessCheckcomputeAllMissingCasesgetSubjectType#computeStatusForNonIntersectionTypeunwrapIntersectionTypecollectAllSubclassesTocollectAllSubclassesprocessBranch generateCalleeForElvisExpressiongenerateCallInfo%generateSyntheticCheckNotNullFunction#generateSyntheticCallForArrayOfCallgenerateCandidategenerateSyntheticSelectFunctiongenerateSyntheticElvisFunctiongenerateCalleeForWhenExpression.resolveCallableReferenceWithSyntheticOuterCall!generateCalleeForCheckNotNullCall$generateSyntheticSelectTypeParametergenerateCalleeForTryExpression$generateCalleeReferenceWithCandidatetoValueParameterensureResolvedTypeDeclarationensureResolvedForCallsresolveToPackageOrClasstransformImportForFqName!transformLambdaArgumentExpression transformNamedArgumentExpression forceResolveStatusesOfSupertypes&forceResolveStatusOfCorrespondingClassshouldSkipClassneedResolveMemberstryCalculateResolvedStatusneedResolveNestedClassifiersrunStatusResolveForLocalClassforceResolveStatusesOfClassendComputingcomputeOnlyClassStatuswithFullBodyResolve$computeRepresentativeTypeForBareTypecanBeUsedAsBareTypetoArrayOfCallgetOriginalFunctionisOneBranch replaceReturnTypeIfNotExhaustiveaddDeclarationContextaddStatementContextaddFileContextpathForCallable!collectLocalClassesNavigationInfowithValueParameterwithAnonymousObjectstoreClassIfNotNestedwithWhenSubjectType	withField2forConstructorParametersOrDelegatedConstructorCallforConstructorBodyforPropertyDelegateAccessorsforDelegatedConstructorCallforBlockwithWhenExpressiontypeParameterScopewithRegularClassaddNonLocalTowerDataElement&scopesWithPrimaryConstructorParametersreplaceTowerDataContext$addInaccessibleImplicitReceiverValue)withLambdaBeingAnalyzedInDependentContextforConstructorParameterswithAnonymousInitializerforFunctionBody(buildSecondaryConstructorParametersScopeforPropertyInitializerwithNewTowerDataForClasswithPropertyAccessorwithConstructor'getPrimaryConstructorAllParametersScopeforEnumEntrywithTowerDataModewithScopesForClasswithTowerDataCleanupwithInferenceSession%withCallableReferenceTowerDataContextwithAnonymousFunctionwithContainerClasscreateSnapshotForLocalClasseswithSimpleFunction%withAnonymousFunctionTowerDataContextwithWhenSubjectImportingScopewithTypeParametersOfdropContextForAnonymousFunctionupdateLastScopewithTowerModeCleanupwithContainingClass(getPrimaryConstructorPureParametersScopewithContainerremapArgumentsWithVarargconstructLiteralTypewriteResultTypeexpectedConeTypegenerateCompanioncomputeReturnTypeRef+runContractAndBodiesResolutionForLocalClassgetTransformerCreator createReturnTypeCalculatorForIDEstoreResult!computeCachedTransformationResultrunAllPhasesForLocalClassdescriptionvisitClassPathvisitNoTransformdoTransformConstructordoTransformTypeParameters"transformChildrenWithoutComponentstransformAccessorsstoreVariableReturnType	addReturn+obtainValueParametersFromResolvedLambdaAtom*transformAnonymousFunctionWithExpectedTypegetDefaultAccessorStatus.transformAnonymousFunctionWithLambdaResolutiontransformLocalVariable#transformFunctionWithGivenSignatureprepareSignatureForBodyResolvetransformTypeWithPropertyType&transformPropertyAccessorsWithDelegatetoExpectedTypeRefdoTransformRegularClasscreateTypeParameterScope/replacePropertyReferenceTypeInDelegateAccessorswithFileScopeschooseOperatorcreateSimpleOperatorCall
getDidWorkcreateFunctionCall withContainingSafeCallExpressiontoBlocktransformBlockInCurrentScope)resolveCandidateForAssignmentOperatorCallextractSuperTypeDeclaration	getOutputoperatorReturnTypeMatchesreportAmbiguityaddReceiversFromExtensionscompleteAssignCallstoreTypeFromCallee,tryResolveAugmentedArraySetCallAsSetGetBlock!transformTypeOperatorCallChildren5transformToIntegerOperatorCallOrApproximateItIfNeededwithTypeArgumentsForBareTypecreateAssignOperatorCallmarkSuperReferenceErrorreportUnresolvedReferencetransformSuperReceiverchooseSetOperatorchooseAssignregisterClasssimpleEffectcontractBuilderinvocationKindrunContractResolveForLocalClassparseInvocationKindisAccessorOftoValueParameterReferencewithFileAndScopes%registerJavaSpecificResolveComponentsregisterModuleDataregisterCommonJavaComponents!registerCliCompilerOnlyComponentsregisterCommonComponentsregisterResolveComponents*transformLegacyRawContractDescriptionOwner$transformRawContractDescriptionOwnertransformOwnerOfErrorContract$transformOwnerWithUnresolvedContractgetSourceFilePathregisterFileSourcecreateJavaModuleBasedSessioncreateLibrarySessioncreateSessionWithDependenciescreateModuleDataForBuiltinsregisterExtensionsuseCheckerscreateEmptySessionconstructStarProjectedType
ensureTypebuildChildSourceElementgetChildanalyzeClassInitializerrunAssignmentCfaCheckersanalyzePropertyInitializeranalyzePropertyAccessorgetPropertySymbolinvestigateVariableAccessinvestigateVariableAssignmentgetParameterTypeisApplicableWithsimpleTypeStatementgetParameterSymbolcollectBranchExitsbuildTypeStatementsisInapplicableWithisWrongConditionOnNode
applyLabelprocessVariableWithAssignment,filterDeclaredVariableSymbolsInCapturedScopeupdateRangeoverwriteRangeaddRangegetEnterNodeisEnterNodegetNodesInOrder	operationcollectDataForNodecollectDataForNodeInternalinvestigatereferenceToSymboltoQualifiedReferenceisInPlaceLambdacollectDataForReferencecheckReferencegetParameterCallsEffect"getParameterCallsEffectDeclarationisFunctionalTypeRefcheckExpressionForLeakedSymbolsgetArgumentCallsEffectaddInvocationInfoisCompiledToJvmDefault5isPlatformSpecificSymbolThatCanBeImplicitlyOverriddenisJvm6findContainingMembergetTypeSymbol"isTypeConstructorEqualOrSubClassOfremoveOutProjectionisInlineThatRequiresManglingisRenamableFunctionfindJvmNameAnnotation"isInsideCompanionObjectOfInterfacehasCustomAccessor0isInterfaceCompanionWithPublicJvmFieldPropertieshasJvmFieldAnnotationisInsideJvmMultifileClassFilecheckInternalcheckUnderscoreDiagnostics&checkNonJvmDefaultOverridesJavaDefault$isCompiledToJvmDefaultWithProperModetoVisibilityOrNull*checkKotlinRepeatableAnnotationDeclaration(checkJavaRepeatableAnnotationDeclarationresolveContainerAnnotationcheckContainerRetention"checkRepeatableAnnotationContainercheckContainerParameterscheckContainerTargetfillInDeepSubstitutorbuildDeepSubstitutionMultimapcheckInconsistentTypeParameterscheckIfAnnotatedcontainerIsNonCompanionObjectcheckForInterfacegetMinimumVisibilitysupportscheckOverrideCannotBeStaticcheckAnnotatedhasAnnotationNamedAsgetContainerAtcontainerIsInterfacecheckStaticOnConstOrJvmFieldreportStaticNotInProperObjecthasExternalPartsgetReferencedClassSymbolcheckConstantArguments$checkSinceKotlinVersionAccessibilitygetOwnSinceKotlinVersionconsider loadWasExperimentalMarkerClassescheckUpperBoundViolatedwithProjectionisCollectablegetModifierListgetModifiergetClassLikeElementcollectLowerBoundscomputeLeafClassesOrInterfaces getHasPredefinedEqualityContractisConcreteType areClassesOrInterfacesCompatiblecollectUpperBoundstoFirClassWithSuperClassescollectTypeArgumentMappingtoTypeArgumentMappinggetTypeParametergetCompatibilitygetImplicitUseSiteTargetList getAnnotationClassForOptInMarkergetAllowedAnnotationTargetsgetRetentionextractClassesFromArgumentgetRetentionAnnotationgetDefaultUseSiteTargetunfoldArrayOrVarargcontainsRepeatableAnnotationcheckRepeatedAnnotationisRepeatablegetTargetAnnotationisNonReifiedTypeParameterallParameterReifiedcheckCastingpsiisInTypeConstraintisCatchElementParametergetRawIdentifierisRedundantNullableisInConstructorCallee	forSource
getRawNamegetNullableChildwithNavigatorgetParentOfParentcheckCommaInBranchConditiongetActualTargetListcanHaveSubtypesfindClosestClassOrObject)isSubtypeOfForFunctionalTypeReturningUnit extractArgumentsTypeRefAndSourcegetImplementationStatussubjectToManyNotImplementedisVisibleInClassgetContainingDeclarationSymboltoRegularClassSymbolisSubtypeOfThrowableisMembermodalityfindNonInterfaceSupertypeimplicitModalitycheckTypeMismatchouterClassSymboloverriddenFunctionsgetContainingClassSymbolisSubtypeForTypeMismatchlowerThanBoundcheckSyntaxdotQualifiedExpressionisClassIdPointingToEnumEntryprocessErrorImportselectorExpressiongetOutermostClassNamecheckConditionExpressionisRootLabelContainermarkTraversalRootreportRedundantLabelscheckVisibilityModifierreturnTypeRequiredcheckExplicitReturnTypereturnTypeCheckIsApplicableexplicitVisibilityIsNotRequired
getMessagestringParentChildrenCountfindClosestcanBeValgetDestructuringChildrenCounthasSameNameWithoutModifiers	getColumnvisitQualifiedAccessesretrieveSymbolgetCallableIdgetNullabilityskipNodeallNodescollectInnerNodesisRedundantreportDeprecationgetWorstDeprecationreportDeprecationIfNeededlightTreeMatcherisCommutativeisCommutativeOperatorcanBeAugmentedisHierarchicallyTrueisLightNodesHierarchicallyTruematcher'checkAnnotationUsedAsAnnotationArgumentcheckNotAClass&checkAnnotationArgumentWithSubElementscheckAnnotationsWithVersionparseVersionExpressionOrReportcheckDeprecatedSinceKotlincheckArgumentListcheckArgumentcheckPropertyAndReportfindFunctionVisibilityisEffectivelyHiddenByfindBiggestVisibilitycheckElementAndReportfindPropertyVisibilitycanMakeSetterMoreAccessiblefindPropertyAccessorVisibilityimplicitVisibilitycheckSensiblenesscheckCompatibility
isEnumTypecheckAndReportcheckPropertyAsOperatorhadExplicitTypeInSource&findPathAndCheckWithAddingErrorElementfindPathAndCheckreportElseMisplacedreportNotExhaustivecheckArgumentAndReport'isReifiedTypeParameterOrFromKotlinArraycheckClassLikeSymbolisReturnAllowedisInsideAnnotationCallisInsideAnnotationClass&loadExperimentalitiesFromConeArgumentsloadExperimentalitiesisAnnotatedWithOptInisExperimentalityAcceptable"reportNotAcceptedExperimentalitiesaddExperimentalities&loadExperimentalityForMarkerAnnotation%loadExperimentalitiesFromAnnotationTo*reportNotAcceptedOverrideExperimentalities$isExperimentalityAcceptableInContext&loadExperimentalitiesFromTypeArgumentscheckOptInIsEnabledcheckExpressionItselfcheckExplicitReceiverisNullableTypeParametershouldInvisibleSetterBeReportedcheckInvisibleSetter#checkValReassignmentViaBackingField$checkValReassignmentOnValueParameterfindEnclosingSuspendFunctionisRestrictSuspensionReceiversameInstanceOfReceivercomputeReceiversInfocheckNonLocalReturnUsagecheckRestrictsSuspension!hasFormOfSuspendModifierForLambdacheckSuspendModifierForm-checkProjectionInImmediateArgumentToSupertype"checkExpandedTypeCannotBeInheritedcheckDelegationNotToInterfacecheckAnnotationOnSuperclass"checkClassCannotBeExtendedDirectlycheckSpecialFunctionCallcheckAllUnderFromEnumEntrycheckConflictingImports0getImportStatusOfCallableMembersFromNonSingletonhasFunctionresolvesToClasscheckCanBeImported-getImportStatusOfCallableMembersFromSingletonresolveToClasscheckOperatorRenamecheckDeprecatedImport getImportStatusOfCallableMembershasThrowableSupertypehasGenericOuterDeclarationfindVisibilityExposurecheckSupertypescheckParameterBounds
checkClasscheckTypeAliascheckMemberReceiver	hasSetter	hasGettercheckTargetcheckModifiercheckModifierscheckParentfirstOrThischeckCompatibilityTypevisitDeclarationStatusisExpectAndActualareCompatibleMainFunctionscollectLocalConflictscheckConflictingParameterscollectExternalConflictcheckRegularClass	checkFilecollectWithExternalConflictsonConstructorsisNotFinalReadOnlyisSubtypeOfCloneableisCloneableIdisRecursiveInlineClassTypeisRelatedToParameterisGenericArrayOfTypeParameterisInapplicableParameterTypecheckGettercheckSetter!checkAccessorForDelegatedPropertyisLegallyAbstractgetSeveritycheckRecursiongetOverriddenSymbolscheckParameters)checkReceiversOfQualifiedAccessExpressioncheckCanBeInlinedisDefinedInInlineFunctionisInvokeOrInlineExtensioncheckPrivateClassMemberAccesscheckArgumentsOfCall
partOfCallcheckVisibilityAndAccesscheckChildrenWithCustomVisitorcheckParametersInNotInlinecheckInlineFunctionBodycheckNothingToInlineisInlinableDefaultValuecheckSuperCallsisInsidePrivateClassgetProperDiagnosticcollectAllTypescheckNameAndReportareCompatibleTypeParametersareCompatibleModalitiesvalueParametersCountCompatibleareCompatibleTypeListsfindExpectForActual)areDeclarationsWithCompatibleVisibilitiesareCompatibleCallablesareCompatibleFunctionsgetMembersToareCompatibleTypestoClassLikeDeclarationareCompatibleClassifiers!isExpectedClassAndActualTypeAliaseffectiveModalitycreateTypeParameterSubstitutorgetConstructorsToequalsByequalByareCompatiblePropertiesareCompatibleClassScopes
toTypeListgetLinecheckFunctionReferenceErrorscheckFunctionCallreportInapplicableDiagnosticsgetDelegated	findCyclecheckDynamicBoundscheckExtensionFunctionTypeBoundcheckConflictingBoundscheckBoundUniqueness$checkInconsistentTypeParameterBoundscheckFinalUpperBoundscheckTypeAliasBoundanyConflictingTypescheckOnlyOneTypeParameterBoundisEffectivelyExpectisInsideSpecificClassisEffectivelyFinalisInsideExternalClassisInsideExpectClassisInlineOrValueClassreportIfUnderscore'checkExpectDeclarationVisibilityAndBodycheckPropertyInitializer checkOuterClassArgumentsRequiredcollectInitAssignmentsfindUsedTypeParameterSymbolcheckCyclesInParametersprimaryConstructorSymbolisAllowedArrayisAllowedClassKindparameterHasCycletypeHasCycleannotationHasCyclecheckAnnotationClassMembercollectSymbolisFromInterfaceOrEnumhasExtensionOrDispatchReceivercheckDeprecatedCalls"checkRepeatedAnnotationsInPropertycheckWithUseSiteTargetsgetAnnotationTypescheckAnnotationTargetcheckAnnotationUseSiteTargetcheckHasReturnIfBlockcheckAsFieldNotSubtypecheckAsPropertyNotSubtypecheckComponentCallcheckInitializercheckVarianceConflictcheckTypeParametersgetPositioncheckAmbiguousExpectsisEnumConstructorrequireActualModifierisExplicitActualDeclaration!checkActualDeclarationHasExpectedexpandedClassallStrongIncompatibilitiesisCompatibleOrWeakCompatiblecheckAnnotationConstructorshasSingleActualSuspectcheckValOverridesVarcheckConflictingMemberscanOverridereportTypeMismatchsubstituteTypeParameterscheckInheritanceClashcollectDeadEndDeclarationscollectPropertyInitializationcollectInfoFromGraphgetSourcePath	isDeadEndareAccessorsInlinecheckVarargParameterscheckUninitializedParametercheckParameterTypescheckValOrVarParameter2checkSupertypeInitializedWithoutPrimaryConstructorcheckSuperTypeNotInitializedcheckLocalDeclarationcheckGlobalDeclaration'isKClassTypeWithErrorOrNullableArgumentexactlyatLeastsimplecheckForfull
findCyclesoriginalBoundsextractTypeParamNamesextractTypeParamNameunwrapBoundcheckTypeRefgetClassPath$getDiagnosticsSuppressedForContainercollectDiagnosticscanBuildhasMoreFollowingInstructionsreportTypeMismatchOnVariablereportTypeMismatchOnPropertyreportOverridingFinalMembercheckMutabilitycheckDeprecationgetExceptions!reportCannotChangeAccessPrivilegesubstituteAllTypeParameterscheckMemberreportNothingToOverridereportVarOverriddenByValretrieveDirectOverriddenOf!reportCannotWeakenAccessPrivilegehasAnnotationItselfOrInParentcheckModality checkOverriddenExperimentalities"reportReturnTypeMismatchOnFunctioncreateAllDiagnosticComponentsbuildAllcannotBeResolvedgetEditorReportsreportFirDiagnosticcheckMissingMessagesonDeclarationExitshouldVisitDeclarationwithGetClassCallgetImplicitImportsvisitWithDeclarationvisitWithDeclarationAndReceiver#withQualifiedAccessOrAnnotationCallvisitNestedElementsvisitClassAndChildren!addSuppressedDiagnosticsToContextbuildEditorReportsForwithAnnotationContainer(visitWithQualifiedAccessOrAnnotationCallvisitWithGetClassCallreportOnWithSuppressionwithSuppressedDiagnosticstoDiagnostictoFirDiagnosticsmapInapplicableCandidateErrormapUnsafeCallErrormapSystemHasContradictionErrorcreateOntoKtDiagnostic
COLLECTIONrenderSymbol
renderList renderIncompatibilityInformationrenderIncompatibleClassScopesbuildFirViaLightTreebuildFirFromKtFilesregisterJvmCheckersregisterCommonCheckersregisterExtendedCommonCheckersrunResolutionrunCheckersrewriterewriteMessagecontainsWarningsToBeSilencedaddGradleKotlinDslDependencyTocreateOptionsExtensionsetWarningRewriternagUserAboutExperimentalWarningkotlinDslPluginOptions&warnOnUnexpectedKotlinDslPluginVersionwarnOnDifferentKotlinVersionstrictgetLayoutXmlFileManagertransformSingleacceptAllElementstransformInplacedoExtractResources	visitInsninterceptClassBuilderFactorydefineClass	newMethodcreateMethodisExperimentalgetGlobalCacheImplreportMarkDirtyClassreportMarkDirtyreportMarkDirtyMember	addMetric
addMetrics
getMetricsaddAttribute
endMeasureaddTimeMetricNsstartMeasuretoProtoData	getResultclearCacheForRemovedClassesgetStorageOrCreateNewgetStorageIfExists	createMapcleandumpKeytoFileremoveValues	markDirty	dumpValue	readValue
writeValuesave
differencecheckEqualsremapTypeAbbreviationremapTypeArgumentrenderTypeArgumentremapDeclaredEnumEntryremapDeclaredConstructortoFirEffectDeclarationbuildEffectDeclarationbuildRawContractDescription!buildLegacyRawContractDescriptionnegated"transformControlFlowGraphReferenceremapDeclaredPropertytransformResolvedImporttransformCallableDeclarationtransformTypeParameterRefsOwnertransformWrappedExpressiontransformTargetElement"transformResolvedCallableReferencetransformClassLikeDeclarationtransformResolvableremapDeclaredTypeParameterremapDeclaredVariableremapDeclaredField%transformLegacyRawContractDescriptionremapDeclaredSimpleFunctiontransformErrorPropertyremapDeclaredValueParametertransformBackingFieldReference"transformAnnotationArgumentMappingtransformTypeProjectiontransformControlFlowGraphOwnerremapDeclaredClass$transformResolvedContractDescriptiongetDeclaredTypeParameter1transformWhenSubjectExpressionWithSmartcastToNullgetReferencedScript*transformResolvedReifiedParameterReferencetransformLabeltransformErrorImporttransformQualifiedAccesstransformDiagnosticHoldertransformPackageDirectivetransformTypeParameterReftransformContextReceivergetReferencedProperty transformExpressionWithSmartcast&transformExpressionWithSmartcastToNullgetReferencedFieldtransformRawContractDescriptiongetReferencedEnumEntrytransformTypeParametersOwnertransformLoopJump"getDeclaredExternalPackageFragment#transformTypeProjectionWithVariancegetDeclaredConstructor"transformResolvedDeclarationStatustransformCall'transformWrappedExpressionWithSmartcasttransformResolvedQualifiergetDeclaredFieldtransformEffectDeclarationtransformStarProjection+transformWhenSubjectExpressionWithSmartcasttransformDelegateFieldReferencetransformVariablegetReferencedTypeAliastransformPlaceholderProjectiongetReferencedClassOrNull!transformClassReferenceExpression-transformWrappedExpressionWithSmartcastToNullgetDeclaredFilevisitBooleanExpressionvisitBooleanConstantDescriptorvisitContractDescriptionElement#visitBooleanValueParameterReference
visitValue buildResolvedContractDescriptionneedsBracketsinBracketsIfNecessarygetReferencedConstructor!getDeclaredLocalDelegatedPropertygetDeclaredVariablegetDeclaredValueParametergetDeclaredEnumEntrygetReferencedValueisAtom#getReferencedLocalDelegatedPropertygetReferencedVariablegetReferencedReturnableBlocktoFirDestructingDeclarationgetReferencedSimpleFunctionisEnumEntrydefaultConstructorVisibilitymakeDiagnosticContext	makeLexerbuildLightTreebuildLightTreeBlockExpressionbuildLightTreeLambdaExpression
hasReified toFirWhenConditionWithoutSubjecthasValOrVarhasNoAnnotationsgetDeclaredTypeAliashasLateinithasExternalgetDeclaredFunction	hasVararghasModality
hasTailrechasFlaghasOperatorhasNoinlineaddModifiersetFlag	hasActualgetReferencedClasshasInfixisFunctionalInterface	hasInlinehasConstisDataClasshasOverridehasCrossinlinegeneratedNestedClassifiersgeneratedMembersnameAsSafeNamegetAsStringWithoutBacktickisClassLocalextractArgumentsFromforEachChildrenReturnListforEachChildrengetChildrenAsArray
getParentsgetFirstChildExpression getFirstChildExpressionUnwrappedgetFirstChildgetLastChildExpressiongetChildNodesByTypedisableenablegetInstancesconfigurePluginregisterExtensionaddNewImplicitReceiversgetTopLevelClassIdsgetNestedClassifiersNamesgeneratePropertiesgetTopLevelCallableIdsgetCallableNamesForClassgenerateFunctionsconvertIndicesconvertThisExpressionconvertThrowconvertFinallyconvertTryExpressionconvertCallExpressionconvertLoopBody"convertBinaryWithTypeRHSExpressionconvertWhenConditionIsPatternconvertClassLiteralExpressionconvertStringTemplateconvertReturnconvertLoopJumpparseIfExpressionconvertLambdaExpressiongetAsFirExpressionconvertValueArgumentconvertValueArgumentsconvertSuperExpressionconvertCatchClauseconvertLoopOrIfBodyconvertWhileconvertBinaryExpressionconvertUnaryExpressioncreateSimpleNamedReferenceconvertWhenEntryconvertExpressionconvertAnnotatedExpressionconvertSimpleNameExpression"convertCollectionLiteralExpressionconvertQualifiedExpressionconvertDoWhile
convertForconvertArrayAccessExpressionconvertIfExpression"convertCallableReferenceExpressionconvertConstantExpressionconvertLabeledExpression convertShortOrLongStringTemplateconvertWhenExpressionconvertWhenConditionExpressionconvertWhenConditionInRangeneedTransformSupertypescomputeAdditionalSupertypesregisterUserDefinedAnnotationcollectAnnotationssaveAnnotationsFromPlugin getAnnotationsWithMetaAnnotationgetAnnotationsForPredicategetDeclaredScriptgenerateTopLevelFunctionsgenerateTopLevelPropertiesgetDeclaredClassregisterAnnotatedDeclarationfileHasPluginAnnotationsregisterOwnersDeclarations
matchUnder	matchWithgetOwnersOfDeclarationgetSymbolsByPredicateregisterPredicatesextractAttributeFromAnnotationconvertAttributeToAnnotationgetDeclaredPropertygetReferencedFunctionvisitMetaAnnotatedbuildWithScopegetArrayElementType	toBuildercreateTestContainerFunvisitAnnotatedneedTransformStatus
hasOrUndermetaHasOrUndermetaHas	metaUnderundergetModuleDescriptorregisteredExtensionsgetAllExtensionsconvertTypeConstraintconvertAnnotationconvertValueParametersconvertPropertyDeclarationhasValueParametersconvertBlockconvertUserType"convertDestructingDeclarationEntryconvertTypeArgumentscollectSegmentsconvertGetterOrSetterconvertTypeAliasconvertClass convertConstructorDelegationCallconvertTypeConstraintsconvertModifierListconvertConstructorInvocationconvertImportAliasconvertIntersectionType%convertBlockExpressionWithoutBuildingconvertBackingFieldconvertAnnotationEntryconvertPackageDirectiveconvertPrimaryConstructorconvertTypeParameterModifiersconvertInitializerListconvertDelegationSpecifiersconvertTypeProjectionconvertTypeParameterconvertFunctionTypedefaultAccessorStatusconvertFunctionDeclarationconvertExplicitDelegationconvertClassBodyconvertAnonymousInitializerfetchArtifactsconvertTypeModifierListconvertObjectLiteralconvertFileAnnotationList
withOffsetconvertFileconvertSecondaryConstructorconvertBlockExpressionconvertAnnotationTargetconvertSetterParameterconvertTypeconvertEnumEntryconvertNullableTypeconvertReceiverTypeconvertImportDirectivesconvertTypeArgumentModifierListconvertImportDirectiveconvertDestructingDeclarationconvertFunctionBodyhashForExternalFunctionprocessClasshandleAssociatedObjectsbuildResolvedNamedReferencebuildErrorNamedReferencebuildBackingFieldReference0buildPropertyFromParameterResolvedNamedReferencebuildExplicitSuperReferencebuildSimpleNamedReferencebuildResolvedCallableReferencebuildImplicitThisReferencebuildExplicitThisReferencebuildDelegateFieldReferencesetExpected"processConstructedClassDeclarationextractValueParametersgetFunctionSignaturegetBridgeOriginhasStrictSignaturebuildImplicitCastcreateIrSetFieldbuildFactoryFunctiontransformFunctionAccesslowertransformSuspendFunctionbuildIsCheckupdateStategenerateCoroutineStartnameForCoroutineClassbuildStateMachinegenerateDelegatedCallgetCoroutineBaseClasstoReferencetoResolvedCallableReferenceunwrapArgumentreplaceFirstStatementtransformStatementsIndexedtoResolvedCallableSymbolbuildConstOrErrorExpressionbuildArraySetArgumentListbuildArgumentListForErrorCallbuildResolvedArgumentListbuildBinaryArgumentListbuildUnaryArgumentList stableNameForExternalDeclarationdumpbuildSingleExpressionBlockgetNameForPropertygetNameForConstructorgetNameForClassgetNameForStaticFunctiongetNameForFieldisClassInlineLikegetNameForMemberFieldgetNameForStaticDeclarationgetNameForMemberFunction	endRegionprocessClassModelsstartRegionaddWithCommentcomputeMappingexternalModuleNamegenerateMainArgumentsgenerateModulegenerateWrappedModuleBodytranslateCallArgumentsgetHashCodebuildAnnotationCallbuildNamedArgumentExpressionbuildThisReceiverExpressionbuildThrowExpression'buildWhenSubjectExpressionWithSmartcastbuildArgumentListbuildVarargArgumentsExpressionbuildLambdaArgumentExpressionbuildExpressionWithSmartcastbuildLazyExpressionbuildCallableReferenceAccessbuildSpreadArgumentExpressionbuildConstExpressionbuildAugmentedArraySetCallbuildBreakExpressionbuildCheckNotNullCallbuildSafeCallExpressionbuildVariableAssignment buildAssignmentOperatorStatementbuildPropertyAccessExpressionbuildIntegerLiteralOperatorCallbuildStringConcatenationCallbuildReturnExpressionbuildUnitExpressionbuildTryExpressionbuildEmptyExpressionBlockisOriginalDescriptorbuildWhileLoopirBlockBodybuildDelegatedConstructorCallbuildAnnotationbuildComponentCallbuildFunctionCallbuildElseIfTrueConditionbuildResolvedQualifierbuildContinueExpressionbuildElvisExpressionbuildEqualityOperatorCallbuildArrayOfCallirCompositebuildAnnotationArgumentMappingbuildBinaryLogicExpression-buildWhenSubjectExpressionWithSmartcastToNullbuildGetClassCall buildAnonymousFunctionExpressionbuildImplicitInvokeCallbuildCheckedSafeCallSubjectbuildAnonymousObjectExpressionbuildErrorResolvedQualifier"buildExpressionWithSmartcastToNullbuildWhenBranchbuildExpressionStubbuildComparisonExpressionbuildDoWhileLoopbuildClassReferenceExpressionbuildLazyBlockbuildTypeOperatorCallbuildWhenExpressionbuildWrappedDelegateExpressionbuildWhenSubjectExpression&buildResolvedReifiedParameterReference isRecursiveSingleFieldValueClass'substitutedUnderlyingTypeForInlineClass)unsubstitutedUnderlyingTypeForInlineClass'valueClassRepresentationTypeMarkersList!getValueClassUnderlyingParametersattributesAccessor extractDeprecationInfoPerUseSitegetDeprecationInfosgetDeprecationForCallSite"getDeprecationInfosFromAnnotationsgetDeprecationsFromAccessorsdeprecatedLevelAppliedgetDeprecationLevelgetVersionFromArgumentgetDeprecationirBlockconstructorsconstructorsSortedByDelegationprimaryConstructorIfAny
updateFromtoAnnotationLookupTagtoAnnotationClasstoAnnotationUseSiteTargetsgetAnnotationByClassIdgetAnnotationsByClassIdtoAnnotationClassIdunwrapVarargValuemapAnnotationsWithClassIdTogetStringArgumentfindArgumentByName useSiteTargetsFromMetaAnnotationaddNonLocalScopeaddNonLocalScopeIfNotNullcreateContextReceiverValuesstaticScopecollectImplicitReceivers collectTowerDataElementsForClassasTowerDataElementsetLastLocalScopeaddContextReceiverGroupfromMap
combineMininheritableOnly
forUseSitecombinePreferLeftvisitRawFunctionReferencegetSealedClassInheritorssetSealedClassInheritorsvisitDynamicOperatorExpressionresolvedcreateGetterOrSettervisitErrorDeclarationaddDeclarationsaddDefaultBoundIfNecessary!getDanglingTypeConstraintsOrEmptygetExplicitBackingFieldbuildOuterClassTypeParameterRefbuildTypeAliasbuildTypeAliasCopybuildErrorImportbuildAnonymousObjectbuildSimpleFunctionCopybuildSimpleFunctionbuildErrorPropertybuildBackingFieldbuildValueParameterCopybuildAnonymousInitializer	buildFilebuildConstructorCopybuildPropertyAccessorbuildPropertyAccessorCopy%buildConstructedClassTypeParameterRef buildDefaultSetterValueParameterbuildPrimaryConstructorbuildAnonymousFunctionbuildAnonymousFunctionCopybuildImportbuildRegularClassbuildRegularClassCopybuildPropertyCopybuildErrorFunctionbuildResolvedImportbuildContextReceiverbuildSyntheticPropertyserializeValueParameterserializeEnumEntryserializeTypeAlias
valueProtoserializeAnnotationvisitDynamicExpressionvisitConstantObjectvisitErrorCallExpressionvisitDynamicMemberExpressionvisitSingletonReferencevisitElseBranchvisitConstantPrimitivevisitConstantArrayaddValueParametervisitLogicalAndfillEffectProto serializeContractOfFunctionIfAnycontractExpressionProto
writeFlagscontractProtoconstantValueProtobufEnumeffectProtoinvocationKindProtobufEnumvisitLogicalOrgetQualifiedClassNameIndexgetFqNameIndexstringTemplateValuetryComputePackagePartInfosloadPropertiesByCallableIdgetTypeAliasloadFunctionsByCallableIdfindAndDeserializeTypeAliasinvertIfNecessarytoDescriptorInvocationKindloadSimpleEffectloadExpressionextractTypeextractPrimitiveExpressionloadContractloadPossiblyConditionalEffectextractVariablegetComplexTypehasTypecreateRootContextcreateForPackagecreateForClassloadContextReceiverFromTypeRef	toTypeRefloadPropertySettercreateContextReceiversForClassloadPropertyGetterloadContextReceiverFromTypeIdloadContextReceiverFromType%isSuspendOrHasSuspendTypesInSignaturedeclarationsgetSimpleNameIndexhasInlineClassTypesInSignaturegetClassifierIdconstructorProtocreateForLambdaserializeVersionRequirementswriteVersionRequirement3writeVersionRequirementDependingOnCoroutinesVersiontypeAliasProtopackagePartProtopropertyProto'writeVersionRequirementForInlineClassesfillFromPossiblyInnerTypetypeParameterProtofunctionProto serializeAnnotationFromAttributetypeIdgetTypeParameterId
classProtoaddDeclarationIfNeededgetInitialSignatureDescriptoruseTypeTablewriteLanguageVersionRequirement,serializeVersionRequirementFromRequireKotlinvalueParameterProtoenumEntryProtogetAccessorFlagsnormalizeVisibility	typeProtocreateChildSerializer%serializeCompilerDefinedTypeAttributecreateTopLevelgetContextReceiverParametersloadTypeAliasAnnotationscreateArgumentMappingconstisContinuationtypeParameterSymbolcomputeClassifier
typeSymboltypeReferencelabelNameAsNametargetLabelbuildFirConstantdeserializeClassToSymboladdSerializableIfNeededaddCloneForArrayIfNeededisThisWithoutLabelfindExpressionUndernameForReceiverLabelhasParenthesesgetReferencesFromProvidersaddItemaddItemAfteraddItemBefore
removeItemfindDocCommentgetDelegationCallgetDelegationCallOrNull)replaceImplicitDelegationCallWithExplicithasImplicitDelegationCallgetObjectKeywordgetCompanionObjectsgetInnerExpressionsgetArgumentExpressiongetArgumentName	asElementgetSpreadElementisNamed	isOneLinegetOffsetInHostgetRelevantTextRange	buildTextgetDebugTextvisitTypeConstraintList	appendInnrenderChildrenvisitDynamicTypevisitNullableTypevisitClassBodyvisitImportListvisitParameterListvisitTypeArgumentListvisitTypeConstraintvisitUserTypevisitTypeParameterList visitConstructorCalleeExpressionvisitImportDirectivevisitSuperTypeListEntryvisitFunctionTypesuppressDiagnosticsInDebugModegetTargetLabelgetLabelNameAsNameimportClasscontextReceiverstypeReferenceshasConstructorKeywordhasSynthesizedParameterNamesgetEqualsTokengetExtensionReceiverParameter
isOperatorgetTypeConstraintList	getFqNamehasBlockBody/isHiddenForResolutionEverywhereBesideSupercalls isHiddenToOvercomeSignatureClashgetTypeConstraintsgetTypeParameterListgetReceiverTypeReferencegetNameAsSafeNamehasDeclaredReturnTypegetNameAsNamecreateNameIdentifierIfPossiblecreateDestructuringParametercreateTypeArguments#createSimpleNameStringTemplateEntrycreateEnumEntryInitializerListcreateParameterListreceivercreateNameIdentifier
createStarcreateBlockStringTemplateEntrycreateValKeywordcreateIfcreateCallArgumentscreateFunctionTypeReceivercreateLambdaParameterListIfAnycreateCommentcreatePackageDirectiveIfNeededcreateIdentifier
bodyPrefixcreateParametercloseParamscreateExpressionCodeFragmentcreateFileAnnotationcreateClassKeywordcreateConstructorKeyword	baseClassKtPsiFactorycreateWhitespaceAndArrowcreateWhenConditioncreateLabeledExpressioncreateStringTemplatecreateSimpleNamecreateBlockCodeFragmentcreateBlockcreateWhiteSpaceinitializercreateImportDirectivecreateColoncreateLambdaExpressionappendInAngleBracketscreateWhenEntrygetStatementscreateEmptyModifierListcreateExpressionlazyBodycreareDelegatedSuperTypeEntryappendImportcreateSingleStatementBlockcreateAnnotationEntrycreateTypeParameterListgetterExpressioncreateTypeIfPossible	createDot!createCallableReferenceExpressioncreateTypeCodeFragmentcreateAnalyzableFilecreateExpressionIfPossiblecreateModifierparamcreateSecondaryConstructorcreateSemicolondoCreateExpressiondoCreateFilecreatePackageDirectivecreatePhysicalFilecreateImportDirectivescreateNewLinecreateEmptyBodycreateFunctionTypeParametertypeConstraintscreateDestructuringDeclarationgetBaseExpressioncreateOperationNamecreatePropertySettersuperDelegation
typeParamscreatePropertyGettercreateCommacreateLambdaParameterListplaceKeyword&createFileAnnotationListWithAnnotationcreateEmptyClassBodynoReturnTypecreateThisExpressioncreateLoopParametercreateVarKeywordcreateArgumentcreatePropertyDelegatecreateSuperTypeCallEntry%createPrimaryConstructorWithModifierscreateObjectcreateFileWithLightClassSupportcreateSuperTypeEntrywrapInABlockWrappermodifiercreateDeclarationcreateEQ createLiteralStringTemplateEntryremoveSuperTypeListEntryaddDeclarationAftergetSuperTypeListhasStableParameterNamesgetAnonymousInitializershasSecondaryConstructorsaddDeclarationBeforegetContextReceiverList"getPrimaryConstructorParameterListgetOrCreateBodyaddSuperTypeListEntryisEquivalentTogetDeclarationKeywordclearCachesfindChildByTypeOrClassfindImportByAliasgetNameForGivenImportAliasfindChildrenByTypeOrClassshouldChangeModificationCounthasTopLevelCallablesfindAliasByFqNameisInfixgetFileTypeisConventionOperatorgetExpressionssubtreeChangedsetReceiverExpressionaddModifierList
placeAftersetModifierListsortModifiersunpackFunctionLiteraldeleteSemicoloncomputeNameAsStringcalcReferencedElementputArgumentcopyWithOffsetsgetAnnotationUseSiteTargetgetOrCreateConstructorKeywordfromSymbolDescriptor)removeRedundantConstructorKeywordAndSpacefromSymbolOwnerirEqualsgetFileClassesasProxygetTypeAliasKeyworddoSetReceiverTypeReferencesetReceiverTypeReferencerewriteStategetOriginalElementgetNavigationElementannotationEntryVisitornamedDeclarationVisitorvisitReferenceExpressionwhenExpressionVisitorcallExpressionRecursiveVisitor#qualifiedExpressionRecursiveVisitorwhenExpressionRecursiveVisitorcallExpressionVisitor$simpleNameExpressionRecursiveVisitor"binaryWithTypeRHSExpressionVisitorclassOrObjectVisitorlambdaExpressionVisitorreturnExpressionVisitorcontainsStateInMemory#referenceExpressionRecursiveVisitorexpressionRecursiveVisitorpostfixExpressionVisitorvalueArgumentListVisitorifExpressionVisitorvisitArgument propertyAccessorRecursiveVisitorclassVisitorpopStatedotQualifiedExpressionVisitor namedDeclarationRecursiveVisitorprimaryConstructorVisitor lambdaExpressionRecursiveVisitorpropertyRecursiveVisitorparameterRecursiveVisitorpackageDirectiveVisitor&dotQualifiedExpressionRecursiveVisitor prefixExpressionRecursiveVisitorvisitPrimaryConstructorenumEntryVisitorpropertyVisitordeclarationRecursiveVisitorbinaryExpressionVisitorparameterVisitornamedFunctionRecursiveVisitor"primaryConstructorRecursiveVisitormodifierListRecursiveVisitorreferenceExpressionVisitorclassRecursiveVisitor packageDirectiveRecursiveVisitorsimpleNameExpressionVisitor(destructuringDeclarationRecursiveVisitorvisitValueArgumentListifExpressionRecursiveVisitormodifierListVisitorvalueArgumentVisitorclassOrObjectRecursiveVisitorprefixExpressionVisitor binaryExpressionRecursiveVisitorqualifiedExpressionVisitorannotationEntryRecursiveVisitordestructuringDeclarationVisitorenumEntryRecursiveVisitorpropertyAccessorVisitorclassInitializerVisitortypeReferenceRecursiveVisitordelegatedSuperTypeEntryexpressionVisitordeclarationVisitorvisitNamedDeclarationvalueArgumentRecursiveVisitornamedFunctionVisitorgetLeftTypeRefgetTypeArgumentsAsTypesgetRightTypeRef-createPrimaryConstructorParameterListIfAbsentpopInstruction createPrimaryConstructorIfAbsentgetClassKeywordgetClassOrInterfaceKeywordgetFunKeywordgetReferencedNameImplgetReferencedNameAsNameImpl getReferencedNameElementTypeImplgetChildExpressionsByStubimportsAsImportListsetThisTypegetSuperTypegetOriginalContextgetForcedResolveScopeimportsToStringgetVisibilityCheckergetExceptionHandlerinitImportsgetViewProvidergetResolveScopegetThisTypeaddImportsFromStringforceResolveScopesetExceptionHandlersetVisibilityCheckersetSuperTypegetContextContainingFileprocessPatterncreateByPatternbuildValueArgumentListcreateDeclarationByPattern'createDestructuringDeclarationByPatternreplacePlaceholderElementbuildExpressionappendExpressionsappendTypeReferenceappendChildRangecreateExpressionByPatternbuildDestructuringDeclaration createValueArgumentListByPatternappendFixedTextbuildDeclarationappendExpressionappendNonFormattedText
charOrNullbuildByPatternserializeClassIddeserializeClassIdwrapStringsgetFileAndPositionInfo	peekStateisGetterhasNoInstructions	pushStatepushInstruction
storeState	loadStatesetFieldgetFieldgetIrFunctionByIrCallvisitVararggetStubTypegetPropertyNamerenderPropertyValues
visitConstvisitClassReferencevisitBranchvisitEnumConstructorCallvisitGetFieldvisitSetFieldvisitTypeOperatorvisitGetValuecomputeMaskFromModifierListmaskToStringcomputeMaskmaskHasModifiervisitSyntheticBodyvisitConstructorCallvisitDelegatingConstructorCallvisitFunctionExpressionvisitInstanceInitializerCallvisitSetValueforMultifileClassStubforFileFacadeStubrelativeToPackage	indexFile
indexClassindexObjectindexFunctionindexPropertyindexTypeAliasserializeFileStubindexScriptcreateFileStubindexAnnotationdeserializeFileStubindexParameterdeclarationSignaturecreateNestedClassIdcreateLocalDelegatedPropertyconstantElementTypeToKindkindToConstantElementTypecheckReservedYieldBeforeLambdacheckReservedPrefixWordsingleElementcalculateClassIdcreateExpressionBodywrapAsInOldcreateBlockBodymakeKtExpressionFromTextgetScriptDeclarations%createUnsubstitutedPrimaryConstructor&getScopeForConstructorHeaderResolution,getScopeForStaticMemberDeclarationResolutiongetDeclaredCallableMembers&getScopeForMemberDeclarationResolutiongetClassOrObjectDeclarationsgetTypeAliasDeclarationsfindClassDescriptorgetDeclarationNamesgetPropertyDeclarations
descriptorgetFunctionDeclarations*getScopeForCompanionObjectHeaderResolution#getDestructuringDeclarationsEntries getScopeForInitializerResolution getScopeForClassHeaderResolutionregisterReferenceProvidersgetReferencesByElementregisterProviderregisterMultiProvidercontentRangeisSingleQuotedisInImportDirectiveisIdentifierisFunctionalExpressionnonStaticOuterClassessafeNameForLazyResolveisPlainWithEscapes"getPossiblyQualifiedCallExpressionparameterIndexisPlainvisibilityModifierTypeOrDefaultisImportDirectiveExpressiongetOrCreateParameterListisCallee
astReplaceisTypeConstructorReferencefindPropertyByNamefindLabelAndCallunwrapNullabilityisTopLevelInFileOrScriptflatMapDescendantsOfTypeVisitormodifierFromTokenSetisFirstStatementgetQualifiedElementSelector%collectAnnotationEntriesFromStubOrPsigetContentRangeisDotSelectorisProtectedcollectAnnotationEntriesFromPsigetAssignmentByLHSforEachDescendantOfTypeVisitor getQualifiedElementOrCallableRefaddSuperNamegetFileOrScriptDeclarationsmodalityModifierType!isContractDescriptionCallPsiCheckaddTypeArgumentisDoubleColonReceivergetReceiverExpressionfindAssignmentquoteIfNeededreferenceExpressiongetQualifiedElementisExtensionDeclarationtopParenthesizedParentOrMe!getQualifiedExpressionForSelectorvisibilityModifiersafeFqNameForLazyResolve'getQualifiedExpressionForReceiverOrThisisTopLevelKtOrJavaMemberasAssignmentgetLabeledParentgetOrCreateValueArgumentListcanPlaceAfterSimpleNameEntryblockExpressionsOrSinglegetOutermostParenthesizerOrThisgetCallNameExpressioncallExpressionfindFunctionByName!getQualifiedExpressionForReceiver'collectAnnotationEntriesFromStubElement'getQualifiedExpressionForSelectorOrThis.getTopmostParentQualifiedExpressionForSelectorisLambdaOutsideParentheseseffectiveDeclarationsisPropertyParameterisDotReceiverisContextualDeclarationgetTrailingCommaByElementsListisContractPresentPsiCheckmodalityModifierlastBlockStatementOrThis getTrailingCommaByClosingElementgetBinaryWithTypeParentvisibilityModifierTypeisPackageDirectiveExpressionisAccessorNamecreateErrorDeclarationacquireSymbolgetBracketRangeleavesgetText getLastParentOfTypeInRowWithSelftrimWhiteSpacesgetParentOfTypesAndPredicategetIfChildIsInBranchfindDescendantOfTypegetParentOfTypecontainsInsidenextLeafprevLeafanyDescendantOfTypebeforegetLastParentOfTypeInRowgetTextWithLocationhasValueModifierclosestPsiElementgetTopmostParentOfTypegetChildOfTypegetChildrenOfTypeforEachDescendantOfTypenextSiblingOfSameTypegetOutermostParentContainedInchildrensiblingsfindFirstLeafWhollyInRange%unwrapParenthesesLabelsAndAnnotationsprevSiblingOfSameTypecollectDescendantsOfTypegetParentOfTypes2 getNextSiblingIgnoringWhitespacegetElementTextWithContextcreateSmartPointerhasFunModifierhasSuspendModifierhasExpectModifiergetParentOfTypesparentsstartsWithCommentgetStartOffsetIn+getPrevSiblingIgnoringWhitespaceAndCommentsgetParentOfTypeAndBranchreplaceFileAnnotationListhasActualModifiergetParentOfTypes3
isInsideOf
isAncestorgetParentOfTypeAndBranches getPrevSiblingIgnoringWhitespace+getNextSiblingIgnoringWhitespaceAndCommentselementsInRangecollectDescendantsOfTypeTogetIfChildIsInBranches+unwrapParenthesesLabelsAndAnnotationsDeeply'hasAnnotationWithExactNumberOfArgumentsisParameterNumberSuitsForMainisMainWithParameterisMainReturnTypegetMainFunctiongetJVMFunctionNamecreateMainFunctionDetectorgetCalleeByLambdaArgumentadjustisReferenceToViaExtensionbindToFqNamegetImportAliasgetRange doRenameImplicitConventionalCallcanBeReferenceToisReferenceToImportAliasisConstructorOfcanBePsiMethodReferencenormalizeRangefindTagsByNamefindTagByNamemarkSpecialFunctionsisFunctionReferencegetTokenTypevisitStatements
doTraversegetContainingDocgetContainingSectiongetNameTextRangegetNameText
calcIndent
hasSubjectflushCodeBlockisCodeBlockchildrenAfterTagNamegetSubjectLinktrimCommonIndentstartCodeBlockgetLinkTextRangegetLinkTextgetTagIfSubjectisNameparseMarkdownLinkfindByTagName	childSafe,getPropertyNameCandidatesBySpecialGetterNamepushSourceInfopopSourceInfopropertyNamesByAccessorNamepropertyNamesBySetMethodNamepropertyNameBySetMethodNamepropertyNameByGetMethodName(getPropertyNamesCandidatesByAccessorNamesetMethodNamepossibleGetMethodNames"propertyNameFromAccessorMethodNameisGetterNameisSetterName
getterName+getSyntheticMethodNameForAnnotatedTypeAlias
setterName*getSyntheticMethodNameForAnnotatedPropertystartsWithIsPrefix2getDefaultMigrationJsr305ReportLevelForGivenGlobalgetDefaultJsr305SettingsgetReportLevelForAnnotation"getDefaultReportLevelForAnnotation getBuiltinFunctionNamesByJvmNamevisitDefaultcheckParametersetScoperesolveTypeQualifierAnnotationresolveJsr305CustomStatevisitPrefixOperationallIfTypeUseresolveDefaultAnnotationStateisTypeUseAnnotationresolveJsr305AnnotationState%resolveTypeQualifierDefaultAnnotation(resolveQualifierBuiltInDefaultAnnotationextractMutabilityextractNullabilityknownNullabilityfindByDescriptionfqNameListOfgetPurelyImplementedInterfaceimplementedWith	visitCase
visitForInvisitNewcreateJavaClassFindervisitPostfixOperationvisitArrayAccessvisitConditionalvisitObjectLiteraldeepCopycheckIdentifiervisitIfvisitForvisitDoWhilehandleExpression
visitWhile
visitBreakvisitExpressionStatementvisitContinuevisitDebuggervisitInvocationfindFunctionbuildProgramisSuperWildcardisMethodWithOneObjectParameterisObjectMethodInInterfaceisObjectMethodbuildLazyValueForMapclassifierTypesmethodsfieldsnamedAnnotationArgumentsnullabilityAnnotationsclassespackagesconvertCanonicalNameToQNamesplitCanonicalFqName
toNonEmptygetAnnotationOwnerPsigetSupportTokensassertNotLightClassgetCalladdTypeParametersaddInnerClasscopyForMembergetExplicitReceiverKind1convertNestedClassInternalNameWithSimpleHeuristicgetValueArgumentsByIndexresolveByInternalNamemapInternalNameToClassIdfillCoroutineMetadataendVisitparseTypeStringparseVarianceparseDimensionsparseClassOrTypeVariableElementparseClassifierRefSignatureparsePrimitiveTypeparseTypeVariableRefSignatureparseTypeParameter
mapAsmTypeparseTypeParametersDeclaration#parseParameterizedClassRefSignature parseTypeWithoutVarianceAndArrayconvertConstValuevisitAnnotationDefaultcomputeTypeParameterBoundcomputeTargetTypevisitAnnotableParameterCounttranslatePathcreateAnnotationAndVisitorparseMethodDescriptionparseMethodSignature#convertInternalNameToClassifierTypeprocessValuevisitPermittedSubclassvisitRecordComponentparseClassSignatureisSetgetBackingFieldReferencepropagatedToOverrides
updateNamegenerateClassSyntheticPartsisNotTopLevelClasspreprocessFileconvertLiteralValuefindInPackageFragmentsgetClassResolvedFromSourcecomputeQualifiersForOverrideshouldEnhanceflattenTree extractQualifiersFromAnnotationscomputeIndexedQualifiersextractQualifiersmostSpecific	toIndexedtranslateFunctionCall
canBeApply'findClassWithAnnotationsAndInitializerstoBinaryClassbothReceiversisImplicitRepeatableContainer!findClassAndLoadMemberAnnotationsgetCachedFileContentgetSpecialCaseContainerClassfunctionenhancementtoGenericArgumentModedontWrapInlineClassesModewrapInlineClassesMode.createWithConstantDeclarationSiteWildcardsModegetModeForReturnTypeNoGenericgetPackagePartFqNamegetDefaultPartFqNamedecapitalizeAsJavaClassNamegetPathHashCodegetFilePartShortNamegetFileNameByFacadeNamegetFilesWithCallablesfromMethodNameAndDescfromJvmMemberSignature
fromMethod$fromMethodSignatureAndParameterIndexfromFieldNameAndDescwriteArrayTypewriteJvmTypeAsIsmapBuiltInTypewriteArrayEndwriteTypeVariableclearCurrentTypeescapeClassNamedispatchReceiverjavaLang
inJavaUtilinClassjavaFunctionjavaUtiljvmDescriptorgetArgs
inJavaLangrenderFileReadingErrorMessagelogFileReadingErrorMessage)getJvmModuleNameForDeserializedDescriptornoReceiversextensionReceivervisitSecondaryConstructorcollectData!checkDefiniteInitializationInWhenasMapresolveToInstruction$createControlFlowInformationProvidercheckForLocalClassOrObjectMode	getUsagesgetElementValueinstructionForElement!getContainingKotlinJvmBinaryClassclassFileName&getKotlinBinaryClassOrClassFileContent$isContainedByCompiledPartOfOurModulegetValueElementstoKotlinJvmBinaryClassgetById/visitInlinedLocalFunctionDeclarationInstructionvisitLoadUnitValue#getPackageFragmentForMultifileClassasSingleFqNameasFqNameForDebugInfoisSafeIdentifiersafeIdentifiercapitalizeAsJavaClassNamegetPackagePartClassNamePrefixgetScriptNameForFilesanitizeAsJavaIdentifierhasNameisSubpackageOfcallableIdForConstructorparentOrNullfindValueForMostSpecificFqnameisValidJavaFqNametailisOneSegmentFQN	isChildOf	classDesctypeDescunknownSignature	primitiveentriesjavaAnnotationId
internalId
javaLangId
callableIdbyNameprimitiveArrayId
KFunctionNcollectionsId	reflectIdbaseId	FunctionNjvmIdrangesIdjvmInternalIdreflectByNameKSuspendFunctionN
inverseMap
unsignedIdSuspendFunctionNcoroutinesIdinternalIrIdannotationId*buildNotFixedVariablesToPossibleResultTypecontainingNonLocalDeclarationfindImplementationFromInterface&getNonPrivateTraitMembersForDelegationgetExceptionMessage
withIndentgetCurrentIndentInUnitsgetIndentUnitsaveArgremoveComponentvisitReadValue!allValuesThreadUnsafeForRenderinggenerateAnyNullableAccessorgenerateNullableAccessorgenerateAccessorextractValuevisitInstructionWithNextbfsgetKeymakeRawValueVersioncomputeHashbuildWasmExpressionfoldWasmInstructionscalculateIdsbuildStructNewbuildRefCastbuildConstI64	buildBrIfbuildGetGlobalbuildConstI32	buildLoopbuildSetGlobalbuildEnd	buildDrop	buildElsebuildConstF64buildRefNullbuildGetLocalbuildBrbuildIfbuildUnreachablebuildSetLocalbuildStructGetbuildCallIndirectbuildRttCanonbuildConstF32buildRttSubbuildConstI32SymbolvisitThrowExceptionInstructionbuildStructSetgetHeapTypeappendReferencedTypetoWatStringappendModuleFieldIdIfNotNullappendOffset	toWatDataappendRefTypesameLineListappendImportPairnewLineListf64StrisValidWatIdentifierCharappendLocalsanitizeWatIdentifierf32StrappendAlignappendWasmElementappendStructFieldfunByIdxtagByIdxreadTagreadRefTypereadValueType	mapVectorreadSignedLeb128readVarUInt32AsIntreadVarUInt7
readLimitsreadUnsignedLeb128	limitSizeforEachVectorElementreadVarUInt1byIdx	elemByIdxreadVarInt64readVarInt7
tableByIdxglobalByIdxreadVarInt32readTypeDeclaration	readUBytereadBlockType
readUInt64memoryByIdxreadValueTypeImplreadVarUInt32parseModulereadInstruction
readUInt32readExpressionvisitReturnNoValuewriteVarInt32visitNondeterministicJumpwriteUInt64writeUInt32visitReturnValue
appendCode
createTemp
appendExpr
visitMergevisitSubroutineExitvisitWriteValuewriteSignedLeb128visitAccessInstructionwriteUnsignedLeb128visitMarkInstruction
visitMagicvisitSubroutineSinkwriteVarInt7(visitLocalFunctionDeclarationInstructionappendFiledTypevisitUnconditionalJumpwriteTypeOrKindwriteVarUInt7!withVarUInt32PayloadSizePrependedappendSection#visitVariableDeclarationInstructionwriteVarUInt1visitInstructionwriteVarUInt32visitCallInstructionvisitSubroutineEntervisitOperationvisitConditionalJumpwriteElementsappendVectorSizeloadStringTemplatewriteVarInt64enterSubroutinereturnValueenterLoopBodyappendTextSection	bindValueexitTryFinally	enterLoopmagicjumpOnFalseexitSubroutinedeclareFunctiondeclareEntryOrObjectsetUTF8Encoding	putOptionfindVisibleInnerOrNestedClassgetJavaClassFromPathSegments
findImportfindInnerOrNestedfindJavaOrKotlinClasspathSegmentsremoveBeingResolvedbeingResolvedasteriskImportstryToResolvefindByFqName getPackageAnnotationsFromSourceshasKotlinPackagefindClassesFromPackagefindPackageInSymbolsfindClassInSymbolstoVirtualFilefindSubPackagesresolveFieldcreateCommonClassifierType
parseFiles!makeOutputDirectoryClassesVisibleisDeprecatedsetClassPathForCompilationfindSimplePackageInSymbolsisDeprecatedInJavaDocevaluateBinaryExpressionevaluateUnaryExpressiongetLoopExitPoint
jumpOnTruecreateMockKotlinClassifiercreateClassifierstaticAsteriskImportsstaticImportsfindFieldIncludingSupertypesenclosingClassesfilterTypeAnnotationscreateAnnotationArgumentresolveArgumentValuecreateAnnotationArgumentsarrayAnnotationArgumentscreateAnonymousObjectdeclareParametergetLoopConditionEntryPointgetSubroutineExitPointpostVisitDirectorypreVisitDirectorycreateUnboundLabelloadPropertiesSafelynewValuegetEffectiveVariancehackForTypeIntersectorpredefinedOperationcreateDeferredType%createRecursionIntolerantDeferredTypeselectOnlyPureKotlinSupertypescheckSubtypeForSpecialCasesisStubTypeSubtypeOfAnother!checkSubtypeForIntegerLiteralType!isIntegerLiteralTypeOrCapturedOnerunWithArgumentsSettingshasDifferentFlexibilitynondeterministicJump,isIntegerLiteralTypeInIntersectionComponentsisSubtypeForSameConstructorisAllowedTypeVariablehasDifferentFlexibilityAtDepthfindCorrespondingSupertypesgetLowerCapturedTypePolicyisCapturedIntegerLiteralTyperunForkingPointeffectiveVariance.isTypeVariableAgainstStarProjectionForSelfTypeisApplicableAsEndNodehasNotNullSupertypehasPathByNotMarkedNullableNodesrunIsPossibleSubtypeisCommonDenotableTypehasNothingSupertypeisTypeInIntegerLiteralTypeisPossibleSubtypecollectAndFilter2getTypeParameterForArgumentInBaseIfItEqualToTarget"isSubtypeOfForSingleClassifierTypeanySupertypecompleteIsSubTypeOf,collectAllSupertypesWithGivenTypeConstructorjumpToError!computeExpandedTypeForInlineClasscomputeExpandedTypeInnerrepeatPseudocodecreateLambdareturnNoValuegetBoundValueapproximateDeclarationTypeadjustedTypedefaultResultapproximateIntersectionTypeapproximateSimpleToSubTypeisTrivialSuperapproximateLocalTypes approximateDefinitelyNotNullTypeisApproximateDirectionToSuperapproximateCapturedTypeenterBlockScopedeclareInlinedFunctionreadVariableisTrivialSubapproximateParametrizedTypetoApproximationResultcheckExceptionalCases$isIntersectionTypeEffectivelyNothingapproximateSimpleToSuperTypestrictEqualTypesInternalstrictEqualSimpleTypesexitBlockScope6isPrimitiveNumberRangeExtensionContainsPrimitiveNumber%findTypeInModuleByTopLevelClassFqNameisUnsignedIntegerRangeToisTopLevelExtensionOnTypeisArrayOrPrimitiveArrayIndicesisSequenceWithIndexisPrimitiveRangeContains isUnsignedIntegerClassDescriptor isPrimitiveNumberClassDescriptorisUnsignedRangeisClassTypeWithFqnisUnsignedProgressionisPrimitiveRangeToExtensionisUnsignedIntegerUntilisPrimitiveNumberRangeToisPrimitiveNumberDownToisPrimitiveNumberUntilisComparableRangeToisCharSequenceIteratorisIterableWithIndexisCollectionIndicesisCharSequenceWithIndexisCharSequenceIndices getRangeOrProgressionElementTypeisPrimitiveProgressionisPrimitiveProgressionReverseisUnsignedIntegerRangeContainsisClosedRangeContainsisUnsignedIntegerDownTo"isClosedFloatingPointRangeContains isArrayOrPrimitiveArrayWithIndexisPrimitiveRangeloadUnitisCastPossiblemapToPlatformIndependentClassesallParametersReifiedcastIsUselesscheckExactTypeForUselessCastgetEffectiveProjectionKindfromVariance$substituteNotNullTypeWithConstructor"substituteAlternativesInPublicTypecapturedTypeexitLoopBodyenterTryFinallyisIncompatibleEnums"representativeTypeForTypeParametercheckEnumsForCompatibilitymapArrayType
toVariancemapClassTypemapSuspendFunctionTypemapClassthrowException	superposeoppositeallowsPositiondependsOnTypeParametersdependsOnTypeConstructorisDefinitelyNotNullTyperequireOrDescribeisCapturedDynamicisCapturedTypegetArgumentOrNullisSimpleTypeisFlexibleNothinghasFlexibleNullability'createCapturedStarProjectionForSelfTypeextractTypeVariablesreplaceArgumentsDeeplyfirstMismatchasStateresetToresolveInitializer1resolveLocalVariablesFromDestructuringDeclarationgetExpectedTypeForComponent0defineLocalVariablesFromDestructuringDeclaration"resolveComponentFunctionAndGetTypecreateTypeInfo
noTypeInfogetNextLineNocompileAndEvalcompileToEvaluablecreateStatecheckPlatformSpecificSettingscheckIrSupportconfigureLanguageFeaturesconfigureAnalysisFlagsdefaultLanguageVersionplatformVisibilityCheck
getSessiontoConeKotlinTypetoConeTypeProjectionwithArgumentsisBuiltinTypegetValueIfComputedcreateCacheWithPostComputecreateCacheprocessCompositecreateSubstitutionOverrideField+createSubstitutionOverrideSyntheticProperty"createSubstitutionOverrideFunction"createSubstitutionOverridePropertymayContainName.processDirectOverriddenPropertiesWithBaseScope-processDirectOverriddenFunctionsWithBaseScopegetNestedClassSymbol(processClassifiersByNameWithSubstitutionvisitMemberAccessgetDelegatedPropertygetLocalFunctionputParameterputVariableputDelegatedPropertyputLocalFunctionvisitParentgetClassSymbolByIdconvertToIrExpressionapplyParentFromStackTodeclareSimpleFunctioncurrentDispatchReceiverType	bindLabelinitContainingClassAttrtoTypeProjectionslastDispatchReceiverreceiversAsReversedgetVariablegetExpressionUnderLabelgetLabelNamesIfAnygetContainingCallExpressiongetReceiverParameterDescriptorresolveControlLabelgetCallerNamereportLabelResolveWillChangeresolveNamedLabellabelResolutionFailedlabelResolutionSuccessgetElementsByLabelNamegetLabelForFunctionalExpressionresolveThisOrSuperLabelcreateForExpressiontopMostNonClassDeclarationgetVisitorByVariablecreateForDeclaration&shouldTryResolveLHSAsReservedCallChainrefineBareTyperesolveReservedCallChainOnLHS/resolveReservedExpressionSyntaxOnDoubleColonLHSsetExpressionTypingServicesisMemberExtensioncheckClassLiteralcontextReceiverTypesForresolveReservedExpressionOnLHSgetQualifiedNameStringPart'shouldTryResolveLHSAsReservedExpressionisMutablePropertyReference*reportUnsupportedCallableReferenceIfNeededbindFunctionReferencecreateKCallableTypeForReferencegetCallableReferenceTypetryResolveRHSWithReceiverbindPropertyReferencereportUnsupportedIfNeededgetQualifierChainParts canBeReservedGenericPropertyCallreceiverTypeForresolveCallableReferenceRHS?buildNewExpressionForReservedGenericPropertyCallChainResolutiondiagnoseMissingPackageFragment!getClassMemberDeclarationProvider	isMyClassinsideMyClass#getPackageMemberDeclarationProvidergetResolutionScopeForClassgetClassDescriptor"getOuterDataFlowInfoForDeclaration getResolutionScopeForDeclarationgetClassDescriptorIfAny checkSenselessComparisonWithNull'reportDeprecatedDefinitelyNotNullSyntax
hasWritersgetRealVariable
unsafeCall	ambiguitytypeInferenceFailedmakeAndResolveFakeCallInContextresolveFakeCallresolveDefaultValuereplaceJumpFlowInfo	clearTypereplaceDataFlowInforeplaceJumpOutPossiblecomputeUnsafeReturnTypecheckTypesForReturnStatements%getRealVariableWithoutUnwrappingAliascollectReturnscreateFunctionLiteralDescriptor)computeReturnTypeBasedOnReturnExpressions"checkSmartCastsInSubjectIfRequiredjoinWhenExpressionBranchesprocessVariableSubject!getCalleeExpressionForSpecialCall%checkSmartCastToExpectedTypeInSubjectdetectRedundantIscheckWhenConditioncreateDataFlowValuemakeValueArgumentcheckTypeForExpressionConditioncheckTypeCompatibility.wrapWhenEntryExpressionsAsSpecialCallArgumentsanalyzeConditionsInWhenEntriesinferTypeForWhenExpressioninitDataFlowValuenoChangecheckTypeForIsanalyzeWhenEntryConditionsvisitTryBlockvisitCatchBlocks*clearDataFlowInfoForAssignedLocalVariablesloadMetadatahasMetadataparseMetadatareplaceSuffixformatMetadataAsStringreadFromfromInteger	toInteger,resolveUnqualifiedSuperFromExpressionContext#isPossiblyAmbiguousUnqualifiedSuperisCallingMethodOfAnyWithSuperconvertToHashMapdescendantRelativeTowithReplacedExtensionOrNullsubstringWithContextpositionmalformedLinewithVersiongetSyntheticVariablesequenceUntilnextWithoutConsumingconvertAnyArrayImplallowsNulls&tryCreateCallableMappingFromStringArgstryConstructClassFromStringArgstryConvertVarargtryCreateCallableMappingconvertPrimitivesArraytryConvertTail%tryCreateCallableMappingFromNamedArgstryConvertSingleconvertAnyArraycreateStringInternercreateConcurrentMultiMapgetAttachmentswithAttachmentcheckWithAttachmentgetTypeStatementgetImplicationscontentIfExistsprocessDirectorytraverseDirectorygetSuggestedPathtraverseArchiverunIfFileExistsisZippedKlibtraverseJsLibrariesisKotlinJavascriptLibraryisZippedKlibInZipcopyLibrarycopyJsFilesFromZipisKotlinJavascriptIrLibrarycopyJsFilesFromDirectorytraverseJsLibrarycopyJsFilesFromLibrariescorrespondingSourceMapFile	classPathjargetVariablesInTypeStatementsgetSafedecodePluginOptionsthreadLocal isSyntheticValuesOrValueOfMethodisPrimitiveOrStringisJavacComponentinspectStaticsloadedClasses getJdkClassesRootsFromCurrentJregetResourcePathForClassgetJdkClassesRootsFromJregetJdkClassesRoots+getManifestMainAttributesFromJarOrDirectoryisKotlinJavascriptStdLibrarygetPropertyOrFailgetManifestFromJarOrDirectorygetManifestFromDirectorycheckAttributeValue
getJarFilegetManifestFromJarvalueOfOrNullinterceptFieldsBuildinginterceptMethodsBuildinginterceptModalityBuilding
higherThangetDiagnosticsForClassalreadyReportedgetDiagnosticsForFileFacadedoGetDiagnosticsgetJvmSignatureDiagnosticsgetLightClassMethodsByNamegetAccessorLightMethodscanGenerateLightClassfindFileFacadegetPsiMethodWrappergetLightClassMethodgetLightClassPropertyMethodsgetLightClassAccessorMethodsgetLightClassAccessorMethodbuildLightTypeParameterListgetPsiMethodWrappersgetWrappingClassesextractPropertyAccessorsgetLightClassMethodsgetLightClassBackingFieldgetWrappingClassgetLightFieldForCompanionObjectcreateUltraLightClassForFacadecreateUltraLightClassForScriptcreateConstantEvaluatorcreateUltraLightClassifSurebuildLightClasslogErrorWithOSInfogetPackageFilesFiltergetPackageFilessortByPreferenceToSourceFilefindSyntheticInnerClassfindInterfaceDefaultImpls!findRepeatableAnnotationContainerremoveOperationsbyClasspathComparatorfindClassesAndObjectsgetClassNamescollectClassNamesfindDataForFacadefindDataForClassOrObjectfindDataForDefaultImplsfindDelegatefindDataForScriptfindDatatoLightMemberOrigintoLightClassOriginisNonAbstractMemberhasNonAbstractMemberspropertyNameByAccessortoLightClassWithBuiltinMappingwithNestedAnnotationstoAnnotationLightMethodcomputeExpressioncheckIsMangleddefaultImplsChildaccessorNameByPropertyNametoPsiParameters(getAccessorNamesCandidatesByPropertyNamegetRepresentativeLightMethodtoLightSettertoLightElementstoPsiTypeParametershandleValuefastCheckIsNullabilityAppliedevalConstantValue"repeatableAnnotationContainerChildtoFakeLightClasstoLightGettertoLightClassfindFacadeClasstoLightMethodsstubComputationTrackerInstancecreateDummyJavaFilecreateDummyVoidMethodcreateDummyClassjoinFlowgetIconcreateEmptyFlowgetImplicationsWithVariableapproveStatementsInsideFlow	findFilescomputeLightClassDataonStubComputed#removeAliasInformationAboutVariable	unionFlowremoveLocalVariableAliashasFieldAnnotationnonExistentcollectInfoForBooleanOperatorforkFlowgetValueOfMethodrecordNewAssignmentmakeNotNullAnnotationapproveStatementsTo!removeTypeStatementsAboutVariable"removeLogicStatementsAboutVariablegetValuesMethodisClassNameSealedaddLocalVariableAlias	getAccess*translateVariableFromConditionInStatementstoAnnotationMemberValueinvertaddTypeStatementobtainLightAnnotationsisAccessToUnstableLocalVariableaddImplicationaddSubGraph!visitWhenBranchConditionEnterNodevisitBinaryAndExitNode#visitBinaryAndEnterRightOperandNodevisitEnterSafeCallNodevisitStubNode visitBinaryOrExitLeftOperandNodevisitJumpNodevisitBinaryOrEnterNode(computeCheckNeedToErasureParametersTypes!visitBinaryAndExitLeftOperandNodecomputeThrowsListvisitBlockExitNodevisitAnonymousObjectExitNode*buildTypeParameterListForSourceDeclarationcreatePsiLiteralannotateByKotlinType#createGeneratedMethodFromDescriptorlooksLikeDeprecatedcleanFromAnonymousTypestryResolveMarkerInterfaceFQName
safeScriptsafeIsScriptrunReadActionescapeStringtryGetPredefinedName	asPsiTypetoQualifiedNamepackMethodFlagsvisitBinaryOrExitNodeasStringForPsiLiteralsimpleVisibilitygetAnnotationsSequencetoLightAnnotationsapplyCompilerPluginspackCommonFlagshasNonTrivialBoundssafeIsLocalinvalidAccesscreateTypeFromCanonicalTextrecursiveAnnotatorasDescriptorlooksLikeLevelArgument
parameters#buildTypeParameterListForDescriptorvisitLoopBlockExitNodeloadMethodsFromFilevisitFinallyProxyEnterNodecreateForFacadevisitTypeOperatorCallNodecreateForSyntheticFilevisitTryExpressionEnterNodevisitBinaryAndEnterNodevisitAnnotationExitNodecreateForFacadeNoCachevisitBlockEnterNode#visitUnionFunctionCallArgumentsNodegetParentByPsiMethodgetParentForLocalDeclaration visitWhenSyntheticElseBranchNodevisitComparisonExpressionNodevisitExitSafeCallNodevisitResolvedQualifierNodevisitEqualityOperatorCallNodeaddSuperTypeEntrygetExternalDependenciescannotModifylazyPub	findEntrycreateCachedValueForScriptvisitFinallyProxyExitNodevisitAnnotationEnterNode visitWhenBranchConditionExitNodevisitConstExpressionNode!visitDelegatedConstructorCallNode visitStringConcatenationCallNode"visitBinaryOrEnterRightOperandNodevisitWhenBranchResultExitNodevisitCheckNotNullCallNodevisitWhenExitNodevisitTryExpressionExitNodevisitWhenBranchResultEnterNodegetAllMethods
getMethodsvisitExitContractNodevisitThrowExceptionNodegetAllFieldsvisitWhenEnterNode	getFields.getFirstSupertypeFQNameForAnonymousDeclarationtryGetContainingDescriptorcomputeParameterTypevisitEnterContractNodetryGetKotlinTypevisitLoopConditionExitNodecollectAugmentsisTypeForInheritanceListaddMethodsFromDataClasspropertyParametersaddDiagnosticdefaultConstructoraddDelegatesToInterfaceMethodsnoArgConstructorupdateWithCompilerPluginsaddTypeToTypeListallSuperTypesvisitPostponedAnonymousFunctioncreateConstructorsshouldGenerateNoArgOverloadcreateInheritanceListgetCallableNamesprocessDeclaredConstructorsaddScriptDefaultMethodscreateFlatSignature!chooseMaximallySpecificCandidatesisMethodOverridegetMemberOriginisImplementationInInterfacefindReferenceAt!classDeclaredInUnexpectedPositioncreateSubstitutorshouldNotBeVisibleAsLightClasshasParseErrorsAroundcheckSuperTypeByFQNamegetJavaFileStubonSuccessfulLevelgetSupertypeByPsigetOutermostClassOrObjectisPossiblyAffectedByAllOpencomputeLightClassCachedValueinterceptTowerGroupprocessFunctionsByNameisEnumEntryWithoutBody defaultJavaAncestorQualifiedNameprocessPropertiesByNameintegrateConstraintsgetLanguageLevelgetVirtualFilecreateFakeJavaFileStub'createNonFixedTypeToVariableSubstitutorgetParametersCountgetParameterIndexgetterIfPropertyhasPostponedcreateMethodshasBackingFieldcomputeMethodNamegenerateUniqueFieldNamecreatePropertyFieldcontainsStubTypemethodReturnTypecreateSyntheticStubTypesasJavaMethodisInternalNonPublishedApi
tryComputepropertyAccessorsaddReceiverParameterisSyntheticTypeVariablepsiType
getOperandhasSyntheticTypeVariablesfromClsFields0fixSyntheticTypeVariableWithNotEnoughInformationaddPartiallyResolvedCallregisterStubTypesaddCompletedCall"analyzeAndGetLambdaReturnArgumentsnormalizeDeclarationgetTypeElementshouldBeFlexiblecompletegetClassNamesInPackagegetReferenceNameprocessVariantsisQualifiedgetReferenceNameElementadvancedResolve	setParentgetFirClassifierContainerFileisTraitFakeOverridegetFirCallableContainerFilegetFirFilesByPackagegetTopLevelFunctionSymbolsgetTopLevelCallableSymbolsfromClsMethodsadjustMethodOrigintryConvertAsRetentionextractArrayAnnotationFqNamestryConvertAsRepeatabletryConvertAsTargettryConvertAs createRetentionRuntimeAnnotationtryConvertAsMustBeDocumentedtryConvertAsRepeatableContainerextractAnnotationFqNamecheckSetModifierPropertysetModifierProperty%nonSourceAnnotationsForAnnotationTypelightAnnotationsForEntriesthrowInvalidOperationisFromSourcesgetAnnotationDescriptorshasAnnotationsInSourcegetApplicableAnnotationsgetDeclarationScopesubstituteOrNull!withAllowedAnnotationsClsDelegategetAnnotationNamegetWrappedToArrayNameValuePair checkIfToArrayConversionExpectedgetClsNullabilityAnnotation!getNotWrappedToArrayNameValuePair
unwrapCall#convertToLightAnnotationMemberValuefqNameMatchesgetAttributeValuegetCallEntrywithScopeCleanupavailableValues
createCopyforNewInferencegetFeatureSupportisStableOrReadyForPreviewfromVersionStringtoKotlinVersiongetFlag!forcesPreReleaseBinariesIfEnabledisPreReleasesupportsFeaturefromFullVersionStringcreateByLanguageVersionsupportedValuesisConstructorDelegatingToSuperdeparenthesizegetChildTokenStartOffsetOrNullfindSingleFunctioncontainsNullinlineAccessorsJvmNamesinlineFunctionsJvmNames'generateAnonymousInitializerDeclarationgenerateTryCatchgenerateFunctiongenerateLambdacreateGeneratorContextaddPostprocessingStepgenerateModuleFragment"getFirClassifierContainerFileIfAnygetFirClassifierByFqNametryCalculateReturnTypeOrNullstartComputingfindHashCodeFunctionOrNullisSamConstructor&getOriginalForFunctionInterfaceAdapter$getSubstitutedFunctionTypeForSamTypegenerateTypicalIrProviderListtoIrValueParametergenerateScriptDeclarationmakeParameter&visitStringTemplateEntryWithExpressiongenExprgetReturnExpressionTarget postprocessStringTemplateEntries declareComponentVariablesInBlockgenerateStatementsvisitLiteralStringTemplateEntrygenerateConstantExpressionvisitEscapeStringTemplateEntryscopeOwnerAsCallablegenStmtgenerateThisReceiver)generateExpressionForReferencedDescriptorvisitSafeQualifiedExpressiongeneratePropertygenerateTypeAliasgenerateOverridenSymbolswithFirArrayOfCallTransformergenerateSimpleFunctiongenerateObjectLiteralgenerateLocalClass'generateLocalDelegatedPropertyReference maybeKFunctionTypeToFunctionTypeadaptResolvedValueArgumentrequiresCoercionToUnitresolvePropertySymbolrequiresSuspendConversionputAdaptedValueArgumentsgetBoundReceiverType-generateFunctionInterfaceConstructorReference$createFunInterfaceConstructorAdaptercreateAdapteeCalladaptValueArgumentcreateAdapterFungenerateClassLiteralisAdaptedCallableReferencegetFieldForPropertyReferencegetTypeInferredByFrontendOrFail#getExpressionTypeWithCoercionToUnit)getExpressionTypeWithCoercionToUnitOrFail	getOrFailgetTypeInferredByFrontendcreatePropertyStubcreateFunctionStubcreateEnumEntruStubdeclareAccessorinsertDeclarationdefaultArgumentFactorydeclareTypeAliasStubcreateClassStubcreateConstructorStubisExtensionInvokeCall0applySuspendConversionForValueArgumentIfRequiredgetSuperQualifiergenerateReceiverOrNullgenerateVarargExpressionUsing+castArgumentToFunctionalInterfaceForSamTypepregenerateExtensionInvokeCallpregenerateValueArgumentsUsing0generateSamConversionForValueArgumentsIfRequired4shouldComputeTypeOfGetClassCallWithNotQualifierInLhsgenerateReceivergenerateThisOrSuperReceiver*shouldGenerateReceiverAsSingletonReferenceapplySamConversion(unwrapCallableDescriptorAndTypeArgumentspregenerateCallUsingpregenerateCallloadContextReceiverunwrapSpecialDescriptorimplicitCastTo"createFunctionForSuspendConversionisFunctionReferenceAdapter3generateContextReceiverForDelegatingConstructorCallgenerateSingletonReferencecomputeVarargTypegenerateValueArgumentUsing+generateReceiverForCalleeImportedFromObjectpregenerateCallReceiverssamConvertScalarExpressiongenerateBackingFieldReceiver!generateAnnotationsForDeclarationgetErrorExpressionTypegenerateErrorSimpleNamegenerateErrorExpressiongenerateErrorCallgetPostfixOperatorgetInfixOperatorgetIrTypeOperatorgetPrefixOperatorcreateFileScopeContext(resolveQualifiedAccessAndSelectCandidate#isAcceptableResolvedQualifiedAccesswithFile4generateReceiverExpressionForDefaultPropertyAccessor!generateLambdaFunctionDeclaration'generateDefaultAnnotationParameterValuecalculateDeprecationsgenerateDefaultGetterBody5generateDefaultAccessorForPrimaryConstructorParametergenerateDefaultAccessorBody2generateFunctionParameterDeclarationsAndReturnTypeafterTransformingChildrengenerateDefaultSetterBody$generateReceiverParameterDeclarationgeneratePropertyAccessordeclareSimpleFunctionInnerbeforeTransformingChildrenfindParentLoopgenerateDoWhileLoopBodygenerateForLoopgetLoopLabelgenerateDoWhileLoopgenerateContinuegenerateBreakgenerateWhileLoopBodygenerateWhileLoop+generateAsPrimitiveNumericComparisonOperandgeneratePrefixExpressiongenerateComparisonOperatorfindConversionFunctionTogenerateInstanceOfExpressiongetComparisonOperatorSymbolgeneratePostfixExpressioncreateErrorExpressionisDynamicBinaryOperatorgetResultTypeForElvispromoteToPrimitiveNumericTypegenerateBinaryExpressiongenerateCastExpressiongenerateDynamicUnaryExpressionisDynamicUnaryOperatorgenerateExclExclOperatorgenerateIdentityOperatorgenerateEqualitygenerateElvisgenerateEqualityOperatorgeneratePrefixOperatorAsCallgenerateBinaryOperatorAsCallkotlinTypeToIrTypeinvokeConversionFunctiongenerateBinaryBooleanOperatorgenerateDynamicBinaryExpressiongenerateDynamicArrayAccessgenerateInOperator1createFakeOverrideDescriptorForParentStaticMembergenerateDelegatedMembergenerateDelegateFunctionBody!generateFieldsForContextReceiverssubstituteDelegateToDescriptor"generateMembersDeclaredInClassBody3generateAdditionalMembersForSingleFieldValueClasses&generateDelegatedImplementationMembers%generateAdditionalMembersForEnumClasshasEnumEntriesWithClassMembers&generateFakeOverrideMemberDeclarations5getTypeArgumentsForOverriddenDescriptorDelegatingCall2generateAdditionalMembersForMultiFieldValueClasseshasMemberDeclarations3generateDeclarationsForPrimaryConstructorParameterstransformDeclarationContent%generateAdditionalMembersForDataClass&generateMembersDeclaredInSupertypeListgetDynamicOperatorisImplicitInvokeisImplicitSetisImplicitGet generateSecondaryConstructorBodygenerateSuperConstructorCallgenerateEnumConstructorCallgenerateAnySuperConstructorCall8generateSetContextReceiverFieldForPrimaryConstructorBody generateEnumSuperConstructorCallgeneratePrimaryConstructorBody%generateEnumEntrySuperConstructorCallgenerateReturnExpressioncreateStatementGenerator6generateSecondaryConstructorBodyWithNestedInitializers&generateEnumConstructorCallOrSuperCallensureResolvedgenerateFunctionBodyputLoopgenerateEnumEntryInitializergenerateExpressionBodygenerateSingleFilegenerateValueOfgenerateValuesgenerateSpecialMembers$generateExpressionAssignmentReceiver!generatePostfixIncrementDecrement%generateArrayAccessAssignmentReceiver%generateAssignmentReceiverForProperty generatePrefixIncrementDecrementgenerateAssignmentReceiver%getDynamicAugmentedAssignmentOperatorcreateBackingFieldLValueunwrapPropertyDescriptorcreateVariableValuecreatePropertyLValuegenerateAugmentedAssignmentgetPreviousScripts$remapDebuggerFieldPropertyDescriptor&getStartOffsetOfClassDeclarationOrNull3getStartOffsetOfConstructorDeclarationKeywordOrNull0getStartOffsetOfFunctionDeclarationKeywordOrNullgetSyntheticField4generateInitializerForLocalDelegatedPropertyDelegate1generateDelegateVariableForLocalDelegatedProperty%createLocalDelegatedPropertyReferencecreateVariableValueForDelegate createPropertyDelegateDescriptor"createBackingFieldValueForDelegate&createLocalPropertyDelegatedDescriptor*generateInitializerBodyForPropertyDelegatecreatePropertyReference#generateDelegatedPropertyGetterBody#generateDelegatedPropertySetterBody getDelegatedPropertyDelegateType generateDelegateFieldForProperty)getKPropertyTypeForLocalDelegatedPropertycreateLocalPropertyAccessor!generateDelegatedPropertyAccessorupdateNullThisRefValuecreateThisValueForDelegate$getKPropertyTypeForDelegatedPropertyensureMemberScopecollectDescriptorsgenerateSyntheticDeclarations generateWhenConditionWithSubject&addElseBranchForExhaustiveWhenIfNeeded"generateEmptyBlockForMissingBranchgenerateWhenBodygenerateWhenSubjectgenerateWhenExpressioncreateIrWhengenerateIsPatternConditiongenerateEqualsConditiongenerateIfExpressiongenerateWhenConditionNoSubjectgenerateInConditionforEachExpectreferenceExpectsForUsedActualsupdateAllReceivers generateEnumConstructorSuperCalladdParametersToCallisAcceptableForSmartcast"generateCallWithArgumentReorderinggenerateValueReferenceprocessUpdatedReceiverVariablegenerateFunctionCallgenerateSamConstructorCallgenerateGetVariablehasNoSideEffectsisUnchanging*makeDynamicOperatorExpressionWithArgumentsmakeDynamicOperatorExpressiongenerateDynamicFunctionCallgenerateConstructorCallgetDynamicExpressionReceivergeneratePropertyGetterCalllinkCorrespondingPropertySymbol(generateSyntheticPropertyWithInitializervisitLoopConditionEnterNodegeneratePropertyDeclarationgenerateGetterIfRequiredgenerateSimpleProperty.generatePropertyForPrimaryConstructorParameter:generateDestructuringDeclarationEntryAsPropertyDeclarationactuallyHasBackingFieldgetPropertyDescriptorgeneratePropertyBackingFieldgenerateSetterIfRequiredgenerateSyntheticPropertyvisitLoopEnterNodecreateTemporaryVariableInBlockgenerateInitializerBody generateClassOrObjectDeclarationgenerateEnumEntryDeclarationvisitLoopExitNodegenerateTypeAliasDeclarationgenerateSyntheticClassOrObjectgenerateMemberDeclarationcreateBodyGeneratorgenerateFakeOverrideDeclarationgenerateClassMemberDeclarationvisitLoopBlockEnterNodecreateWithFragmentParameterInfo!getValueArgumentsInParameterOrdersetExplicitReceiverValuedelegatingCallToAnyConstructorshouldPromoteToSharedVariableenterCapturingStatementgenerateFunctionForFragmentgenerateClassForCodeFragment*generateFragmentValueParameterDeclarationsexitCapturingStatementgetDynamicReceiverwithReceiver!visitPropertyInitializerEnterNodewithReceivers visitPropertyInitializerExitNodegenerateExpressionValuesafeCallOnDispatchReceiver#computeSubstitutedSyntheticAccessorcopyTypesFromExtensionAccessorloadAtadjustForCalleeprocessDeclaration createSamConvertedVarInitializer-postprocessSamConversionsInCompoundAssignmentcreateLValuegetSamConvertedGetValuefillArgumentsmakeSerializerSessionvisitFunctionEnterNodevisitInitBlockEnterNodecreateSpecialAnnotationClassvisitInitBlockExitNodeoverrideCanBeOmittedcodegenPhaseisBuiltInIntegerType%invokeUnsignedIntegerCoercionFunctionvisitPostponedLambdaEnterNodeinvokeIntegerCoercionFunctioncoerceInnerExpression+recordExpectedLambdaReturnTypeIfAppropriatecoerceIntToAnotherIntegerTypegetFunctionReturnTypeOrNullvisitPostponedLambdaExitNodepostprocessReturnExpressionsimplicitNonNulltoNonIrBasedisSamConversion getEffectiveDispatchReceiverType2preventDeprecatedIntegerValueTypeLiteralConversionscopedVisibilitymakePatchParentsPhasevisitFunctionExitNodemakeCheckParentsPhaseaddClassunsafeCoerce	getIrTypecreateJavaLangReflectClassisMultifileBridge	unboxTypeunboxInlineClassasInfoForManglingmangledNameForgenerateModuleInFrontendIRMode7configureBuiltInsAndGenerateIrProvidersInFrontendIRModecollectImpl'collectAllDependencyModulesTransitively>isInlineClassMemberFakeOverriddenFromJvmDefaultInterfaceMethodbuildReplacementInnercreateMethodReplacementcomputeOverrideReplacementgetSpecializedEqualsMethodisRemoveAtSpecialBuiltinStubcreateStaticReplacementcreateJavaPrimitiveClassgetPropertyReferenceClass/generateCallableReferenceSuperclassConstructorsgetAnnotationTargetMaptypeToStringValueOfFunctiongetArraysCopyOfFunctiongetJvmSuspendFunctionClassgetJvmFunctionClassbuildAnnotationConstructorfunctionByNameaddArraysEqualsFunction"addSuspendLambdaInterfaceFunctionsfieldByNamecreateIncrDecrFun generateCallableReferenceMethodsaddArraysCopyOfFunctiongetLocalClassTypegetOverridesWithoutStubsputLocalClassTyperecordOverridesWithoutStubsgetOrCreateClassCodegeneraseTypeParameterscollectVisibleTypeParameterseraseToScopegetFieldForObjectInstance getStaticAndCompanionDeclaration	makeProxygetDefaultImplsClassgetStaticBackingField getPrivateFieldForObjectInstancegetDefaultImplsFunctiongetFieldForEnumEntry!getOriginalFunctionForDefaultImpl'getRepeatedAnnotationSyntheticContainergetDefaultImplsRedirectionbuildSimpleArrayirArraybuildComplexArray	irArrayOf	copyArrayfindInlineLambdasfindInlineCallSitesisCoroutineIntrinsicfindContainercreateJvmIrBuilderisWithFlexibleMutabilityisWithFlexibleNullabilityasJvmFlexibleTypeisReifiableisInlineArrayConstructorisInlineFunctionCallunwrapInlineLambdaisPrivateInlineSuspendisEffectivelyInlineOnly isInvokeSuspendForInlineOfLambdacontinuationParameterisReadOfCrossinlineisBridgeToSuspendImplMethodshouldContainSuspendMarkers"isInvokeOfSuspendCallableReferenceisInvokeSuspendOfContinuation,isStaticInlineClassReplacementDelegatingCall7isStaticInlineClassReplacementForDefaultInterfaceMethodisNonBoxingSuspendDelegationhasContinuationsubstituteSetter(createSyntheticMethodForPropertyDelegate?isDefaultAccessorForCompanionPropertyBackingFieldOnCurrentClasspatchFieldAccessReceiver createSyntheticMethodForProperty!shouldSubstituteAccessorWithFieldsubstituteGettercomputeSyntheticMethodNamelowerPropertypatchReceiver#createSyntheticMethodForAnnotations0createDelegatingCallWithPlaceholderTypeArgumentsgetBooleanConstArgument%getJvmVisibilityOfDefaultArgumentStubhasAssertionsDisabledField#getCallableReferenceOwnerKClassTypecopyCorrespondingPropertyFromcreatePlaceholderAnyNType!isSmartcastFromHigherThanNullablehasPlatformDependentrawType!isOrOverridesDefaultParameterStubhasChildisAssertionsDisabledField$copyFromWithPlaceholderTypeArgumentsreceiverAndArgsbuildAssertionsDisabledFieldisJvmAbstractgetStringConstArgumentcheckConditionhasJvmDefaultgetIntConstArgumentsuspendFunctionOriginal$isSimpleFunctionCompiledToJvmDefaultextensionReceiverName	getIoFileisInCurrentModule	getKtFilemakeRawTypeAnnotationconstantValuereplaceThisByStaticReferenceisBridge wrapAnnotationEntriesInContainergetOrCreateContainerClassisRealLateinitcheckPsiisLateinitBackingFieldgetOrBuildLateinitBackingFieldcheckLightTreegetOrBuildLateinitBackingVaraddSuppressedDiagnosticsaddAnnotationContainerthisOfClassisVisitingSuperConstructorisThisAccessibleaccessorBody	canInline&replaceUseOfPromotedParametersWithRefsvisitFunctionNew"promoteParametersForCapturesToRefsgetAccessCallForScriptInstancedropAnnotationContainergetAccessCallForEarlierScriptpatchForClassgetDispatchReceiverExpressionaddSimplePropertyFromprepareScriptClassunexpectedElementfinalizeScriptClasscollectCapturingClassesaddScriptMainFun"addQualifiedAccessOrAnnotationCalltransformParentaddAnonymousInitializerremapSuperTypesdropGetClassCall getAccessCallForImplicitReceivercallToStringisAppendFunctionunwrapImplicitNotNullnormalizeArgument,findStringBuilderAppendFunctionWithParameterappendWindowlowerInlineClassArgumentvisitTypeAliasesbuildUnboxFunctionsaddImplicitReceiveraddJvmInlineAnnotationbuildBoxFunctionisSpecificFieldGetterdropDeclarationbuildSpecializedEqualsMethodtransformFunctionFlat!buildPrimaryValueClassConstructortransformSimpleFunctionFlataddBindingsFor!isSpecificLoweringLogicApplicabletransformConstructorFlatisArrayOrNullableArrayOffindOrCreateisSyntheticDelegateMethodcreateDefaultImplbridgeViaAccessorTobridgeToStatichandleInterfaceaddGetClassCall%createJvmDefaultCompatibilityDelegatehandleAnnotationClassisCastgenerateTargetAnnotationgenerateDocumentedAnnotationgenerateRepeatableAnnotationgenerateRetentionAnnotationrewriteDirectInvokeToLambdaaddAndGetTemporaryVal#dropQualifiedAccessOrAnnotationCall+createFakeBoundReceiverForJvmStaticInObjectirVarargOfRawFunctionRefsinlineAdapterCallIfPossiblecreateFakeFormalTypeParametersisEqualsFromAny(wrapLambdaReferenceWithIndySamConversion,createProxyLocalFunctionForIndySamConversionirRawFunctionRefgetTargetCallArgument)createFunInterfaceConstructorInvokeMethod'getDeclarationParentForDelegatingLambda,wrapSamDelegatingLambdaWithIndySamConversioncalculateOwnerKClass generateConstructorCallArgumentscalculateOwner$wrapIntoTemporaryVariableIfNecessary5wrapFunctionReferenceInsideBlockWithIndySamConversion getAdaptedCallableReferenceFlags.wrapSamConversionArgumentWithIndySamConversionisSuspendFunctionReferenceisInvokeOperatorcreateLegacyMethodOverride&rewriteDirectInvokeToFunctionReferencegetFunctionReferenceFlagswrapWithIndySamConversion,copyReceiverAndValueArgumentsForDirectInvokehasVarargMappedToElementaddAndGetProxyValueParameter generateSamEqualsHashCodeMethods2canGenerateIndySamConversionOnFunctionalExpressionisHashCodeFromAnybuildOverrideshouldPopUpgenerateCloneImplementationisDefaultImplsBridge#reinterpretAsDispatchReceiverOfTypegenerateDelegationToDefaultImplpostprocessMovedThisisCloneableClonefoldSafeCall
parseElvis
irEqEqNullirValNotNullisJvmNullable!isFoldedSafeCallWithNonNullResultwrapWithBlock	foldElvisparseSafeCallgetLiteralStringFromAnnotation"findAnnotationEntryOnFileNoResolvegetFileClassInfogetFileClassInfoFromIrFilecreateFileClass'checkAllFileLevelDeclarationsAreClassesmanglePartNameparseJvmNameOnFileNoResolvemoveFieldsOfConstPropertiesgetReplacementFacadeClassOrNullgetOrCopyPropertyvisitVariableDeclarationNode modifyMultifilePartsForHierarchyshouldMoveToFacadegenerateMultifileFacadescreateMultifileDelegateIfNeededkClassArrayToJClassArraykClassToJClassIfNeededkClassToJClassisKClassArrayreplaceWithCallTocoerceIfPossiblereportInlineConstshouldDropConstReceiverlowerConstReadtoLambdareplaceOrigin	wrapFieldirRunSuspendisMainMethodgenerateMainMethodisParameterlessMainMethodaddInvokeSuspendForLambdaaddFunctionOverride generateAnonymousObjectForLambda	addCreateaddInvokeCallingConstructorcallInvokeSuspendcloneLambdaaddInvokeCallingCreate"generateContinuationClassForLambdaaddCompletionValueParameteraddInvokeSuspendForInlineLambdacapturesCrossinlinegenerateErrorForInlineBodyaddPrimaryConstructorForLambdabuildValuesFieldpassConstructorArgumentsbuildEnumEntryFieldbuildValuesHelperFunction$getOverriddenMethodsRequiringBridgesisDefinitelyNotNullmapDeserializedLambdavisitQualifiedAccessNodecreateLambdaMetafactoryCalljvmOriginalMethodTypeisDefinitelyNotNullValwrapClosureInDynamicCallisDelegatedtrimForRuntimeAssertionirObjectEqualsjvmInvokeDynamicgenerateSerializedLambdaEqualsirGetLambdaPropertysourceViewForgetClassContext rewriteIndyLambdaMetafactoryCallgenerateDeserializeLambdaMethod#generateCreateDeserializedMethodRefjvmMethodHandleextents
leaveClassgetMappingForClasscreateStaticSuspendImplisInstanceReceiverOfOuterClasssuspendFunctionViewOrStubretargetToSuspendViewtransformToView?addContinuationObjectAndContinuationParameterToSuspendFunctions addInvokeSuspendForNamedFunction)generateContinuationClassForNamedFunction&addContinuationParameterToSuspendCallsaddConstructorForNamedFunctiontoSuspendImplementationName
validateIrresolveMultiFileFacadeMembermakeAnonymousInitializerStaticcopyConstPropertycheckPsiOrLightTreecheckQualifiedAccessisGetFieldOfUnitfindTailCall-findCallsOnTailPositionWithoutImmediateReturncopyWithTypeErasureaddAbstractMethodStubcopyParametersWithErasureparameterTypeCheckaddSpecialBridgerewriteSpecialMethodBody&isTypeParameterWithPrimitiveUpperBoundisClashingWithPotentialBridge(getSpecialBridgeTargetAddingExtraBridgesisThrowingStubgetSpecialBridgeSignaturesmakeLastParameterNullableisPotentialBridgeTargetdelegatingCallcreateBridgesoverriddenSpecialBridgesoverriddenFromClassaddFakeLocalVariablehandleHiddenConstructormakeConstructorAccessormakeSetterAccessorSymbolaccessorNameaccessorNameForSettermodifyFunctionAccessExpressionaccessorNameForGetterfieldAccessorSuffixcreateAccessorMarkerArgumentmodifyGetterExpressionisAccessibleFromSyntheticProxycreateAccessorBodyForSettermakeSimpleFunctionAccessormodifySetterExpression handleLambdaMetafactoryIntrinsiccreateSimpleFunctionCallcreateAccessorBodyForGetteraccessorParentcopyAllParamsToArgsmakeGetterAccessorSymbolgetStaticFunctionWithReceiversvisitVariableAssignmentNodegenerateNewValueParametersgenerateWrappergenerateWrapperHeadergenerateWrappersareValueParametersEquivalentisReturnTypeOverrideComplianttoJvmSignaturecomputeStubsForSuperClasscreateStubMethodliftStubMethodReturnTypegenerateRelevantStubMethodscreateRemoveAtStubisEffectivelyOverriddenBycopyWithSubstitutioncreateStubFunscomputeSubstitutionMapcomputeStubsForSuperClassescopyWithCustomTypeSubstitutioncreateThrowingStubBodycoerceInlineClassesspecializeEqualsCallbuildUnboxFunctiontypedArgumentListsignatureRequiresManglingcoerceToUnboxedcreateBridgeBodycreateBridgeDeclarationgetAssertionDisabledcheckAssertionneedsStaticProxycheckProperty
makeStaticisJvmStaticInCompanionisJvmStaticDeclarationshouldReplaceWithStaticCallisJvmStaticInObject!generateReflectiveAccessForSetterfieldSetAccessiblemethodSetAccessibleshouldUseAccessor'generateReflectiveConstructorInvocationmethodInvokeconstructorNewInstancevalueParameterTypes'recordCompanionObjectAsDispatchReceiver$generateReflectiveAccessForCompaniongenerateReflectiveFieldSet"generateReflectiveMethodInvocationfieldLocationAndReceiverfieldSetgenerateReflectiveStaticCallgenerateReflectiveFieldGetcreateVisitorconstructorSetAccessiblegenerateInvokeSpecialForCall!generateReflectiveAccessForGetterjavaClassObjectfieldGetgetDeclaredMethod#generateThrowIllegalAccessExceptionvisitCatchClauseEnterNode	visitNode	addVarargvisitFinallyBlockExitNodevisitTryMainBlockExitNodevisitFinallyBlockEnterNodevisitCatchClauseExitNodevisitFunctionCallNodevisitTryMainBlockEnterNodecheckReturnTypecheckElementcopySubstitutedcreateDelegatingLambdareplaceRefWithcreateDelegatingLambdaReferencecreateLambdaValueParametersbuildRegularDelegatingLambdabuildNullableDelegatingLambdacreateTypeSubstitutorcreateSpecializedKPropertycachedKPropertylocalPropertyOwnerlocalPropertyIndexcreateReflectedKPropertyusesParameterrememberLocalPropertycomputeSignatureStringsetCallArgumentscreateKPropertySubclasspropertyReferenceKindForpropertyReferenceKindgetBoundReceiverfieldReceiverfillReflectedPropertyArguments!getInlineableValueForTemporaryValgetOperandsIfCallToEQEQOrEqualsrewritePostfixIncrDecrhasSameLineNumberrewritePrefixIncrDecr
prefixIncrisLoopVariableremapVariable.reuseLoopVariableAsInductionVariableIfPossible#removeUnnecessaryTemporaryVariablesoptimizePropertyAccess
isNegationfindLoopVariablePosition)rewriteCompoundAssignmentAsPrefixIncrDecr"isCallToMethodWithTypeCheckBarriercomputeJvmMethodcanHaveSpecialBridgecomputeSpecialBridgestubsForCollectionClasses computeStubsForCollectionClassesmapRawSignature(reportPredefinedMethodSignatureConflictsisSpecialOverridegetJvmDeclarationOrigin!getConflictingJvmDeclarationsDatagetOverriddenFunctions
trackFieldtrackMethodreportMethodSignatureConflictsreportErrorsreportJvmSignatureClashreportFieldSignatureConflictstrackFakeOverrideMethodcollectOverridesOfcollectOverridesTreegenerateAssertFieldacceptWithStateMachinesuspendForInlineToOriginaloverridesReturningDifferentTypecontinuationClass&anyOfOverriddenFunctionsReturnsNonUnitisSuspendCapturingCrossinlineisReadOfInlineLambdareportSuspendTypeUnsupportedisMutableCollectionType:reportNonReifiedTypeParameterWithRecursiveBoundUnsupportedgenerateTypeParameterContainerputClassInstancecheckTypeCompliesWithConstraintrequiresImplLambdaBoxingcollectValueParametershasConflictsisInlineFunction$getErasedClassForSignatureAdaptationvalidateMethodParameters%computeReturnTypeAdaptationConstraintisConstructorRequiringAccessor"joinSignatureAdaptationConstraints(computeParameterTypeAdaptationConstraintgetLambdaMetafactoryArgumentsadaptLambdaSignatureisInheritedFromSerializable requiresDelegationToDefaultImpls adaptFakeInstanceMethodSignature#getLambdaMetafactoryArgsOrNullInner%computeSignatureAdaptationConstraintsrequiresInstanceMethodBoxingremapExtensionLambda composeTypeAdaptationConstraintscheckMethodSignatureComplianceisCrossinlineLambdatransformBreakExpressiontransformAnnotationCallvisitTargetElementisInlineOnlyPrivateInBytecodeisInlineOrContainedInInlinespecialCaseVisibility"innerAccessFlagsForModalityAndKind#getVisibilityAccessFlagForAnonymousisDeprecatedCallablemapClassSignaturegetVisibilityAccessFlagForClassgetVisibilityAccessFlagcalculateInnerClassAccessFlagsgetSourceMapper(isAccessorForDeprecatedJvmStaticPropertyisDeprecatedFunctionremoveUnreachableLabelsgenBranchTargets,extractSwitchCasesAndFilterUnreachableLabelsareConstUIntComparisonsgeneratePrimitiveSwitchareConstIntComparisons	genSwitchisValidIrConstTypeLHSgenerateUIntSwitchshouldOptimizegenIntSwitchcheckTypeSpecificsareConstantComparisonsisCoerceFromUIntToIntmatchConditionsgenOptimizedIfEnoughCasesareConstStringComparisonsisValidIrGetValueTypeLHScalculateMethodFlags#getVisibilityForDefaultArgumentStubisDeprecatedHidden0shouldNotGenerateConstructorParameterAnnotationsgenerateParameterAnnotationsgetThrownExceptions#getAnnotationDefaultValueExpression*shouldGenerateAnnotationsOnValueParametersisSyntheticMarkerParameter
doGeneratecreateFrameMapWithReceivers&generateAnnotationDefaultValueIfNeededcompileInlineFunction"reportSuspensionPointInsideMonitor,isSuspendLambdaCapturedByOuterObjectOrLambdagetContextLabelsnonLocalReturnLabelgenerateFinallyBlocksmaterializedAtmaterializeAtBoxedcoerceToBooleanmaterializedAtBoxedmaterializedanyTypeArgumentgeneratePermittedSubclassesgetSynthAccessFlaggenerateInnerAndOuterClassesgenerateAssertFieldIfNeeded!addReifiedParametersFromSignature!getRegeneratedObjectNameGenerator generateKotlinMetadataAnnotationhasInvalidNamegenerateFieldgenerateMethod"isPrivateCompanionFieldInInterfacecomputeFieldFlagsgetFlagsprocessTypeParametersstoreSerializedIrloadSourceFilesInfogenerateMethodNode!transformDelegatedConstructorCalltransformDeclarationStatustransformSafeCallExpression3shouldBoxSingleValueParameterForSpecialCaseOfRemove#mapOverriddenSpecialBuiltinIfNeeded#getSuppressWildcardsAnnotationValue(toIrBasedDescriptorWithOriginalOverrides$forceBoxedReturnTypeOnDefaultImplFunisJavaLangRecordforceFoxedReturnTypeOnOverridemapToMethodHandlegetMethodKindTaggetJvmModuleNameForDeserialized%getDifferentNameForJvmBuiltinFunctionisInvisibleInMultifilePart&getInternalFunctionForManglingIfNeededmapCalleeToAsmMethod(generateNullabilityAnnotationForCallable'genAnnotationsOnTypeParametersAndBounds!isInvisibleForNullabilityAnalysisgenAnnotation6isMovedReceiverParameterOfStaticInlineClassReplacementgenAnnotationsgetRetentionPolicygenerateAnnotationDefaultValue)isBareTypeParameterWithNullableUpperBoundgenAnnotationArgumentsgenCompileTimeValuegenerateTypeAnnotationsgetAnnotationArgumentJvmNamegenerateAnnotationIfNotPresentmapTypeCommoncomputeClassInternalNamegenTryCatchCoverreturnAsmAndIrTypesfindLocalIndex	withBlockgenerateConstructorArgumentsunwindBlockStackresultIsActuallyAnytransformPropertyAccessorgenmarkNewLabel"writeParameterInLocalVariableTableforEachBlockUntilgenerateStringConstantgenerateClassInstance transformCallableReferenceAccess'splitLocalVariableRangesByFinallyBlocks+generateFakeContinuationConstructorIfNeeded'writeValueParameterInLocalVariableTablemarkLineNumberwriteLocalVariablesInTablegenOrGetLocalgenToStackValuegetOrCreateCallGeneratorgetSuspensionPointKindgenerateNonNullAssertionsnoLineNumberScope"generateGlobalReturnFlagIfPossiblegenerateFinallyBlocksIfNeededmarkNewLinkedLabelhandleValueParametergenerateClassLiteralReferenceisDefaultValueForTypegenerateNonNullAssertion,shouldGenerateNonNullAssertionsForPrivateFunvisitTryWithInfohandleBlockgenFinallyBlocklocalGapScopetransformTypeAliasvisitPlaceholderProjectiontransformImplicitTypeRefcheckTopValueForNullcreateWithResultargTypesgenInvokeInstructionWithResultloadArgumentsgenArgtransformWhileLoopinvokeStaticComparisoncheckTypeAndCompareexpressionTypenewReturnTypeinvokeGetClass
invokeWithisVoidOrPrimitiveWrapperputPrimitiveTypegenerateSignatureStringprimitiveComparisonIntrinsics&binaryFunForPrimitivesAcrossPrimitivesunaryFunForPrimitivesbinaryOpgetParameterFqName#intrinsicsThatShouldHaveBeenLoweredarrayMethodsbinaryFunForPrimitivesnumberConversionMethodscreateKeyMappingevalMethodTypeevalMethodHandle"evalBootstrapArgumentIntrinsicCallevalOriginalMethodTypegenerateMethodHandlegenerateBootstrapMethodArgserializeTopLevelClassserializeJvmIrFileserializeAuxTablesforEveryDeclarationToSerializetoProtocomputeStoredFileSignature3keepTrackOfOverridesForPossiblyClashingFakeOverrideisCapturingTypeParameterwriteCompilationResultcompileToLoweredIrgenerateJsWasmLoader
generateJscompileWasmreferencePublicSymbolmakeSimpleFakeOverrideBuilder!buildFakeOverridesForLocalClassesdeserializeFromByteArray
onAllFilessyntheticFilegetExcludedPackageFragmentmakeCustomWasmModulePhasemakeWasmModulePhasevisitTypeParametersOwnergetInlinedValueTypeIfAnyenqueueValueParameterTypeenqueueParentClassprocessIrFunctionenqueueTypetryToProcessWasmOpIntrinsicCall"transformWrappedDelegateExpressionenqueueRuntimeClassOrAnytryToProcessIntrinsicCallmarkExportedDeclarationsfindOverloadForReceiverfindContentToStringOverloadgetInternalClassmaybeGetFunctionwasmPrimitiveTypeNamefindContentHashCodeOverloadshouldVoidifyvoidifygenerateMainFunctionCallsexcludeDeclarationsFromCodegentransformCheckedSafeCallSubjectgetKPropertyImplConstructorirKTypecreateKTypeGeneratorcreateLocalKPropertycreateKPropertyisKMutablePropertyType!transformFunctionAccessExpressionisImmediatelyCreatedArray	irIntPlusirSizeirCreateArray
irCopyInto'numDefaultParametersForExternalFunctioncreateExternalJsFunctionprocessExternalDeclarationprocessExternalConstructorprocessExternalProperty%generateInstanceCheckForExternalClass$generateExternalObjectInstanceGettertransformErrorNamedReferenceprocessExternalSimpleFunctionprocessFunctionOrConstructorappendExternalClassReferencelowerExternalClasscreateKotlinClosureCallerappendParameterList createJsToKotlinClosureConverter createKotlinToJsClosureConvertortransformExportFunctionkotlinToJsAdapterIfNeededadaptIfNeededcreateJsClosureCallerjsToKotlinAdapterIfNeededcreateAdapterFunctionBodytransformExternalFunctionadaptprocessExportFunctionwasmSignature#transformIntegerLiteralOperatorCalleraseUpperBoundTypetransformGenericCallisCanonical&createClosureBoxConstructorDeclaration/createClosureBoxConstructorParameterDeclaration#createClosureBoxPropertyDeclaration createClosureBoxClassDeclarationgenerateWasmTestsgenerateIsExternalClassgenerateIsSubClass	isInlinedgenerateIsInterface
narrowType hasExcludedFromCodegenAnnotationhasWasmNoOpCastAnnotationhasWasmAutoboxedAnnotationgetWasmOpAnnotationgetWasmArrayAnnotationgenerateDeclarationgeneratePackageFragmentgenerateStringLiteralsSupportbindIndiceslinkWasmCompiledFragmentsalignUp	buildDatairSymbolDebugDump	allFieldsallSuperInterfacesfilterVirtualFunctionsvisitErrorResolvedQualifiertransformErrorResolvedQualifiertransformGetClassCall'visitWhenSubjectExpressionWithSmartcasttransformErrorLooptransformContinueExpressionvisitErrorLooptransformComparisonExpressiontransformWhenSubjectExpressiontransformExpressiongenerateTypeRTTtryToGenerateIntrinsicCallbuildGetUnitgenerateInstanceFieldAccess tryToGenerateWasmOpIntrinsicCall$transformAnonymousFunctionExpressionvisitTypeParameterRefsOwnertransformFunctionCalladdressToStringtoLittleEndianBytestoBytesisBuiltInWasmRefTypetoWasmBlockResultTypetoWasmResultTypetoWasmGcRefTypetoWasmFieldTypeisExternalTypetoWasmValueTypetoBoxedInlineClassTypetransformDoWhileLooptransformErrorFunctionvisitAnnotationArgumentMapping#visitWrappedExpressionWithSmartcasttransformFilevisitResolvedDeclarationStatustransformErrorTypeReftransformResolvedTypeRefsourceElementcheckDeclarationParentsreportIrValidationErrorvalidateIrModulevalidateIrFilevisitFieldNewvisitPropertyNewvisitFileNewcreateScopeunsafeLeaveScopevisitScriptNewunsafeEnterScope(generateComponentFunctionsForDataClasses"generateCopyFunctionForDataClassesvisitDiagnosticHoldergenerateConstExpression
jsCodeNameinterfaceTablegetEffectiveValueParameters!generateDefaultInitializerForTypebinaryDataStructcompilationExceptionwrapWithCompilationExceptionvisitErrorPropertytransformFlatRestrictedrunOnFilePostfixreplaceInContainer
visitLabellowerScriptBodytoMultiModuleActiongenerateEqualsIfNeededgenerateHashCodeIfNeededgenerateToStringIfNeeded"newDeclarationToDeclarationMapping,newDeclarationToDeclarationCollectionMappingnewMappingImpl!getSuperClassBySuperTypeListEntrygetDelegatePropertyIfAnyconstructFakeFunctionCallgetNonPrivateTraitMethods.getFunctionParametersForDefaultValueGenerationfindExpectedFunctionForActualgetMemberDeclarationsToGeneratecopyFunctionsgetLineNumberForElement
mapMembersisFinalPropertyWithBackingFieldreportBackendExceptiongetMemberToGenerateisExhaustivegetMemberDescriptorsToGenerateprimaryConstructorvisitTypeAccessextenddeepCopyWithVariablescollectTailRecursionCallsvisitAnnotationContainer
isUnitRead!transformPropertyAccessExpression	atMostOneremoveExternalProjectionsensureTypesEqualtransformComponentCallensureBoundvisitIntersectionTypeRef	checkType"transformQualifiedAccessExpressionensureNullableensureTypeIstransformWhenExpression"transformAnonymousObjectExpression
moveBodyToasInlinableLambdaasInlinablecreateParameterMapping
remapValueisStringPlus
kproperty1isTypeOfIntrinsickmutableproperty0kmutableproperty1kmutableproperty2
kproperty0
kproperty2progression%isLateinitIsInitializedPropertyGetterprogressionOrNullirInlineFinallyusingtransformFieldirReturnableBlock&visitResolvedReifiedParameterReferencetoIrperformHighLevelJump	ir2string
isPureImplallOverriddencreateDispatchReceiverParametercopyParameterDeclarationsFromcopyToWithoutSuperTypescopySuperTypesFromaddChildisMethodOfAnyisElseBranchremapTypeParameters7createImplicitParameterDeclarationWithWrappedDescriptorcopyAnnotationsWhenisPurecreateArrayOfExpressioncopyValueParametersToStatic!createStaticFunctionWithReceiverssimpleFunctionscopyAnnotationscreateParameterDeclarations makeTypeParameterSubstitutionMappassTypeArgumentsFromcopyReceiverParametersFromcomputeAllOverriddensetDeclarationsParentcopyAnnotationsFrom*copyAndRenameConflictingTypeParametersFromir2stringWholeaddSimpleDelegatingConstructornameForCallableMember(collectPotentiallyCapturedTypeParametersgetFunctionClosuregetClassClosureprocessMemberAccess
collectRecbuildClosureupdateFromIncludedincludeInParentseeVariable#addPotentiallyCapturedTypeParametercollectConnectedClosurestransformRegularClass
getClosureseeTypemaybeComputeTrimMarginmaybeComputeTrimIndentgetConstantStringisStringConcatenationExpression#collectStringConcatenationArguments
inventName	makeLocalmakeDescriptiongetSpecialMethodInfofindSpecialWithOverrideconstMinusOnetoDescriptiongetSecondArggetBuiltInWithDifferentJvmNamegenerateHashCodegenerateEqualsHashCodegenerateGetFunctionDelegategenerateEqualscreateObjectProxy+transformCallableReferencesToSuspendLambdastryTransformSuspendFunctionbuildCoroutinesaddMissingSupertypesbuildFactoryConstructormarkSuspendLambdas*launchSuspendFunctionWithGivenContinuationbuildInvokeMethod8addMissingSupertypesToSuspendFunctionImplementingClasses
isToStringcreateToStringMethodDeclarationcreateHashCodeMethodDeclarationcreateEqualsMethodDeclaration
isHashCodecollectOverridenSymbolsaddSyntheticFunctionwithCurrentClasscollectLocalDeclarationstransformVariableAssignmentisLocalNotInnersuggestNameForCapturedValuerewriteClassMembers
withInlineisExtensionReceiver createTransformedValueParameterscreateFieldsForCapturedValues)insertLoweredDeclarationForLocalFunctionsputAbsentOrSamefillArguments2suggestLocalNamesetLocalTypeArgumentsisDispatchReceiverfindFirstUnusedName'createTransformedConstructorDeclaration generateNameForLiftedDeclarationrewriteFunctionBodylowerLocalDeclarations recordTransformedValueParameters"collectClosureForLocalDeclarationsrewriteDeclarationsvisitMemberisCapturedReceiverisInlineDeclarationcreateNewCallcreateLiftedDeclarationplatformSetupgenerateEqualsUsingGetterscreateAnnotationImplementationgetAnnotationPropertiesmoveValueArgumentsUsingNamesimplementGeneratedFunctionsgeneratedEqualsgetRealParentlowerSharedVariablescollectSharedVariablesgetTransformedSymbolrewriteSharedVariablesirImplicitCoercionToUnitcopyAsValueParameterirThrow
callsSuperwithBuilderirCatchtransformDynamicTypeRefhandleFieldextractInitializershandleAnonymousInitializertransformAugmentedArraySetCallcheckNoPropertiespossibleToGenerateJumpTabletransformEnumEqualsgetOthertransformBranchSubexpressiontransformMethodFlatcreateStaticBodilessMethodtoInlineClassImplementationNamedelegateToStaticMethodgetOrCreateStaticMethodunboxedInlineClassValuetransformMethodBodyFlattransformConstructorBodytransformPrimaryConstructorcreateFunctionReferenceWrapperarrayInlineToSizeConstructor"visitExpressionWithSmartcastToNulltransformDeclarationcopyIfTrivialgetElseBranchResultOrNull
fuseIfNullmatchIfNullExprbuildContainsComparisonisPromotableToIntisPromotableToUIntcomputeComparisonClassuseInTypeOperatoruseForVariable
useAsValueuseAsArgumentuseAsResultuseForFielduseAsReturnValuesuggestVariableNamelowerTailRecursionCallsgenTailCallisOptionalAnnotationClassremapExpectValueSymbolstryCopyDefaultArgumentsshouldRemoveTopLevelDeclarationremapExpectValuefindActualForExpectlowerConstructorshouldInitializeOuterThisprimaryConstructorParameterMapfixThisReferencedoInitializebuildIrbuildSymbolbuildOrGetNullableFieldreplaceTailExpressionextractHeaderisInductionVariable"createTemporaryVariableIfNecessarycastIfNecessary	decrement&createLoopTemporaryVariableIfNecessaryselectArgumentOrDefault$findBaseFunctionWithDefaultArgumentsgenerateDefaultsFunctiongenerateDefaultsFunctionImplvisitFunctionAccessExpressiondfsImplisMovedReceiverparametersForCalldispatchToImplementationvisitWrappedExpressionrevertToLastInclusive
asUnsignedzeroStepExpressionasElementTypeasSigned
asStepType
fromIrTypebuildJavaLikeDoWhileCounterLoopcreateNegatedConditionCheck*moveInductionVariableUpdateToLoopConditionincrementInductionVariableconditionForDecreasingensureNotNullableconditionForIncreasingbuildLoopConditionisArrayTypetransformAnonymousInitializerlowerHeadergatherLoopVariableInfospecializeIteratorIfPossiblelowerWhileLoopconvertToExclusiveLowerBoundconvertIrConstconvertToExclusiveUpperBoundconvertIrCalldispatchReceiverName(callGetProgressionLastElementIfNecessaryorigincalleecreateIrCallMatcherremapTypeAndOptionallyEraseremapTypeAndErasevisitReferencetryInlineSimpleGetterisSimpleGetterisSafeToInlineInClosedWorldtryInlineSimpleSetterisSimpleSettercanBeInlinedvisitResolvabletransformEnumEntrycreateIrFunctionRestrictionsparameterCountsingleArgumentExtensionisValidationNeededvalidationCallbackmakeVerifyActionisDumpNeededmakeDumpAction
dumpToFiledumpIrElementdumpToStdoutnormalizeUnsignedValueconstToStringbuildIrConstanttryFoldingBuiltinBinaryOpscoerceToDoubletypeConstructorNameregisterBuiltinBinaryOpfromFloatConstSafetryFoldingUnaryOpstryFoldingBinaryOpsinlineFunctionReferenceevaluateArgumentsbuildParameterToArgumentinlineAdaptedFunctionReferenceandAllOuterClassesisAdaptedFunctionReferencewithLocationinlineFunctiongetFunctionDeclarationinlineFunctionExpressionimplicitCastIfNeededTonamedUnitPhasemakeIrModulePhasetakeFromContextunitSinkmakeIrFilePhasenamedOpUnitPhasemakeCustomPhaseswitch
toPhaseMap$generateBridgesForFunctionDescriptorrunAndProfile
changeTyperunAfter	downlevel	runBeforeinvokeTopleveldeclareFunctionFakeOverrideneedToConstructFakeOverridesbuildFakeOverrideChainsForClassprovideFakeOverridesenqueueClassdeclarePropertyFakeOverridecopySavingMappingsinvokeSequentialinvokeParalleladjustDefaultArgumentStubsperformByIrFilefindConcreteSuperDeclarationvisitClassLikeDeclarationresolveSymbolCollectionresolveMemberScopetransformImplicitInvokeCalltransformCheckNotNullCallcheckOverriddenSymbolsvalidateFakeOverridesKlibIrVersionrecordActualsfindExpectsForActualsrecordDeclarationActualsrecordRightHandSide	fileCount	itemBytesbodiesstringsisDirtyDescriptoritemNullableBytestypes
cityHash64bswapweakHashLen32WithSeedshashLen0to16shiftMixfetch32rotatehashLen33to64	hashLen16toIntLEtoLongLEhashLen17to32fetch64hash128to64 findDescriptorForPublicSignatureisTypeParameterSigfindDescriptorByHashresolveCompositeSignatureperformLookup"findDescriptorForAccessorSignatureisConstructorNameloadDescriptorstransformSimpleFunctiontransformThrowExpressioncheckIsFunctionInterfaceresolveFunctionalInterfacecomputeFunctionClassvisitControlFlowGraphOwnerserializedIrModulebackendSpecificFileFilterisExportedDeclarationprivateDeclarationSignaturesignatureByDeclarationisLocalDeclarationinFileassumeDeclarationSignatureallocateIndexedSignatureloadKnownBuiltinscomputeSignatureByDeclarationtransformValueParameter%deserializeFileImplicitDataIfFirstUseenqueueAllDeclarationsloadTopLevelDeclarationPrototransformTypeOperatorCalldeserializeFqNametransformElvisExpression#deserializeAllFileReachableTopLevelenqueueFiletransformTryExpression#findModuleDeserializerForTopLevelIddeserializeIrFiledeserializeExpectActualMappingtransformWhenBranchtransformUserTypeRefdeserializeNullableIrType#deserializeIrLocalDelegatedPropertydeserializeIrFunctiondeserializeIrAnonymousInitdeserializeIrTypeArgumentdeserializeAnnotations deserializeSimpleTypeNullability deserializeDefinitelyNotNullType!withDeserializedIrDeclarationBaseisSkippableFakeOverride-deserializeMultiFieldValueClassRepresentationloadExpressionBodyProtodeserializeValueParametersdeserializeStatementBodycheckInlineBodydeserializeTypeParametersloadStatementBodyProtodeserializeNamewithBodyGuarddeserializeIrTypeAliasdeserializeExpressionBodydeserializeIrSymbolAndRemapdeserializeLegacySimpleTypecheckObjectLeakdeserializeDynamicTypedeserializeIrEnumEntryloadTypeProtousingParentdeserializeTypeAbbreviationdeserializeIrConstructordeserializeSimpleTypedeserializeIrTypedeserializeIrTypeParameterdeserializeErrorTypedeserializeIrFieldwithDeserializedIrFunctionBasedeserializeIrDeclarationOrigin$deserializeInlineClassRepresentationwithInitializerGuarddeserializeIrValueParameterdeserializeIrPropertywithExternalValueeraseDelegatedSymboldeserializeErrorDeclarationdeserializeIrClass7computeMissingInlineClassRepresentationForCompatibilityrecordDelegatedSymboldeserializeIrVariabledeserializeIrTypeDatareferenceDeserializedSymboldeserializeIrSymbolDataparseSymbolDatadeserializeIrSymbolToDeclarereferenceLocalIrSymbol&serializeExpectActualSubstitutionTableserializeBreakserializeIrPropertyprotoSymbolKindserializeContinueserializePublicSignatureserializeCoordinatesserializeAccessorSignatureserializeExpressionserializeGetClassserializeStringserializeFileEntryserializeIrStarProjectionserializeSetValuematchAndNormalizeFilePathserializeIrFileImplserializeGetValueserializeIrEnumEntryserializeIrTypeParameterserializeFunctionExpressionserializeBlockserializeVarargElementserializeFileSignatureserializeDynamicOperator*serializeIrLocalDelegatedPropertyReferenceserializeIrTypeAbbreviationserializeDynamicTypeserializeIrTypeDataserializeIrExpressionBody"serializeDelegatingConstructorCalltoProtoExpressionserializeLocalSignatureserializeErrorCallExpressionserializePrivateSignatureserializeIrClassserializePropertyReferenceserializeIrStatementBodyserializeIdSignature+serializeMultiFieldValueClassRepresentationserializeDebugInfoserializeSimpleType"serializeInlineClassRepresentationserializeNameAndTypeserializeDeclarationserializeSpreadElementserializeIrAnonymousInitserializeIrSymbolserializeIrDeclarationBasefillPlatformExplicitlyExportedserializeGetEnumValueserializeGetObjectserializeVarargserializeIrConstructorserializeBranchserializeCatchserializeReturnserializeSetFieldserializeIrFunctionBaseserializeLooptoProtoStatementserializeCompositeSignature!serializeIrLocalDelegatedPropertyserializeDoWhileserializeErrorExpressionserializeGetFieldserializeFqNameserializeNullabilityserializeWhileserializeStatementserializeTypeArgumentserializeThrowserializeConstructorCallserializeTryserializeMemberAccessCommon"serializeDynamicOperatorExpressionserializeStringConcatserializeIrFunctionserializeIrTypeAliastryMatchPathserializeIrVariableserializeCompositeserializeNameserializeSyntheticBodyserializeCallprotoIdSignatureserializeBlockBodyserializeWhenserializeTypeOperatorserializeIrTypeProjectionserializeIrTypeserializeIrFieldmemberNeedsSerializationserializeAnnotationsserializeIrErrorDeclarationkeepOrderOfProperties serializeDynamicMemberExpressionserializeFieldAccessCommonserializeConst"backendSpecificSerializeAllMembersserializeFunctionReferenceserializeIrDeclarationOriginserializeScopeLocalSignatureserializeIrValueParameterserializeTypeOpserializeEnumConstructorCallserializeClassReference serializeInstanceInitializerCallserializeIrStatementOrigindeserializeCompositeIdSignaturedeserializeLocalIdSignaturedeserializeAccessorIdSignature deserializeScopeLocalIdSignaturedeserializePublicIdSignature)visitWrappedExpressionWithSmartcastToNulldeserializeFileLocalIdSignaturedeserializeFileIdSignaturedeserializeSignatureDatasignatureToIndexMappingloadSignaturePrototopLevelKindToSymbolKind$findDeserializedDeclarationForSymbolhandleExpectActualMappingmarkUnlinkedClassifiersactualizeIrFunction deserializeAllReachableTopLevelsresolveModuleDeserializerfinalizeExpectActualLinkerfinalizeExpectActualtryResolveCustomDeclaration"deserializeHeadersWithInlineBodiesdeserializeDirtyFilesdeserializeFullModule1handleSignatureIdNotFoundInModuleWithDependenciesapplyToModulesdeserializeOnlyHeaderModuledeserializeIrModuleHeaderdeserializeOrResolveDeclarationdeserializeFunctionReferencedeserializeSyntheticBodydeserializeOperationdeserializeSetFielddeserializeWhendeserializeExpressiondeserializeCompositedeserializeDoWhiledeserializeCalldeserializeIrStatementOrigindeserializeLoopHeaderdeserializeStatement$deserializeDelegatingConstructorCalldeserializeBlockBodydeserializeTypeOpdeserializeErrorExpressiondeserializeReturndeserializeGetEnumValuedeserializeWhiledeserializeThrow"deserializeDynamicMemberExpression$deserializeDynamicOperatorExpressiondeserializeConstdeserializeBranchdeserializeGetValue,deserializeIrLocalDelegatedPropertyReferencedeserializeErrorCallExpression"deserializeInstanceInitializerCalldeserializePropertyReferencedeserializeVarargdeserializeSpreadElementdeserializeGetObjectdeserializeCatchdeserializeFunctionExpressiondeserializeGetFielddeserializeTypeOperatordeserializeConstructorCalldeserializeLoopdeserializeContinuedeserializeGetClassdeserializeBlockdeserializeBreakdeserializeSetValuedeserializeClassReferencedeserializeEnumConstructorCalldeserializeDynamicOperatordeserializeTrydeserializeVarargElementdeserializeMemberAccessCommondeserializeStringConcatfindSourceFileextractSerializedKdocStringsourceByIndexshouldBeSkippedcheckAllEqualisExportCheckstringManglecollectForManglervisitErrorFunctionisPubliclyVisibletransformBinaryLogicExpressiontransformThisReceiverExpressionserializeModule-visitWhenSubjectExpressionWithSmartcastToNull	visitJump$transformAssignmentOperatorStatementtransformArrayOfCallwithModeserializedMetadatatransformJumptransformTypeRefWithNullabilitytransformPropertytransformFunctionvisitResolvedImportvisitErrorImporttransformIntersectionTypeReftransformElementtransformCatchtransformConstExpression transformStringConcatenationCalltransformReturnExpression!transformSpreadArgumentExpressionvisitContractDescriptionOwnervisitCallsEffectDeclarationvisitReturnsEffectDeclaration	hasExpectgetLabeledExpressionmanglePropertyAccessorgetChildNodeByTypetoFirSourceElementgetExpressionInParenthesesmangleContextReceiverParameter mangleExtensionReceiverParameterfindKDocStringdescriptorFileIdsymbolKindIdinterleaveBitsgetAnnotatedExpression	decodeIntextractFileIdwithNewContextgetPackagesFqNamesgenerateClassLikeDeclarationfilterOutExpectsWithActualsbuildFragmentgetSubPackagesOfModulecreateNewContextserializeHeaderfilterOutExpectsmaybeChunkedserializeDescriptorsbuildPackageProtoemptyPackageProto
encodeType
varianceIddiffvisitAnysignatureTransformervisitUnderMetaAnnotatedthrowLinkageErrorfilterOverriddens"addLinkageErrorIntoUnlinkedClassesusageTransformerfixTypevisitUnderAnnotatedWithsetSpecialJavaPropertysetSyntheticJavaPropertybuildSignatureplatformSpecificPackagebuildContainerSignatureplatformSpecificConstructorvisitAndcomposeSignatureForDeclarationcheckIfPlatformSpecificExportcomposeContainerIdSignaturevisitAnnotatedWithMetavisitAnnotatedWithvisitOrhashIdcomposeFileLocalIdSignaturevisitPredicatecomposePublicIdSignaturecheckSymbolTypecheckErrorNodesAllowed$findMatchingExternalDependencyModulegetUserVisibleModulesmergedModules;stampDependenciesWithRequestedVersionEqualToSelectedVersiongetUserVisibleModuleIdmodulesFromDeserializersdescribeDependencyStatesgetProblemModuleId
raiseIssue.findPotentiallyConflictingIncomingDependenciesfindMatchingModuleappendProjectDependenciesrenderModules(appendPotentiallyConflictingDependencies.findPotentiallyConflictingOutgoingDependenciescomputeErrorMessagerecurseshouldHaveTypeSafeBarrier!getSpecialBridgeSignatureIfExists2isValueArgumentForCallToMethodWithTypeCheckBarrier(findSuperImplementationForStubDelegation generateBridgesForBuiltinSpecialgenFieldsForParametersgenFieldFromParamgenFieldFromArrayElement
genMemberscreateScriptCodegengenMaininvokeMethodWithArgumentsafterReceiverGeneration(isInlineClassWithUnderlyingTypeAnyOrAnyNisGenericParametergetMemberOwnerKindlogDescriptorNotFoundreportSyntaxError
hasSuspendreplaceSuperTypeRefgenerateMultifileClassgeneratePackagedoCheckCancelledfromGenerationStateAndFilesisInsideInlineLambdaContextgetSamWrapperClassensureGeneratedcleanupOnNullReceivercoerceRightToPrimitivedoJump jumpIfCanCompareTopWithPrimitivedropTo	leaveTempskipTo	enterTemprememberAnnotationsaddStepcollectTypeAnnotations
removeStepisCompiledToJvm8OrHighergatherTypeAnnotationsreplaceContextReceiverNumberreplaceBoundSymbol%generateDelegationToSuperDefaultImplsstopCounting*createCodegenForDelegatesInMultifileFacadewriteMetadatagetCompiledPackageFragmenthasDeclarationsForPartClass*generateDelegatesToPreviouslyCompiledParts/addDelegateGenerationTasksForDeclarationsInFile!addDelegateGenerationTaskIfNeededgeneratePart,writeKotlinMultifileFacadeAnnotationIfNeeded generateDelegateToCompiledMemberisJvmSyntheticgenerateMultifileFacadeClassgetSuperClassForPartgetOnlyPackageFragmentgetDeserializedCallablesshouldGenerateInFacadegenerateCodeForSourceFiles*calcProperTypeForIeee754ArithmeticIfNeeded*legacyCalcTypeForIeee754ArithmeticIfNeededreplaceConstructedTypeRefstringBuilderAppendTypefitRestrictionsfitEncodingLimitbuildRecipeaddStringConstantinlinedConstantgenToString"genStringBuilderConstructorIfNededputValueOrProcessConstantinvokeAppend*generateBridgesForFunctionDescriptorForJvm%containerEntityForEqualityAndHashCodeisJvmDefaultOrPlatformDependent%isAbstractOnJvmIgnoringActualModality&needToGenerateDelegationToDefaultImplsgetClassFilesaddDataFromCompiledModulefilterClassFilesaddCompiledPartstransformLeftArgumentaddCompiledPartsAndSortloadCompiledModuletransformRightArgumentgetParameterVariableIndexisTailRecursiongenerateTailRecursionassignParameterValuesgenerateOnStackIfNeededtoIntsreplaceHasQuestionMarkAtLHSwriteKotlinMetadatawriteSyntheticClassMetadatacreateFreeFakeLambdaDescriptorcreateFreeDescriptor%createFreeFakeLocalPropertyDescriptorsubstituteTopLevelTypetransformAnnotationTypeRefreplaceArgumentMappingtransformAnonymousObjectgetJvmKotlinTypegetSuperClassInfotransformResultaddRecordComponentclearCodeFragmentInfosetCodeFragmentInfogetOuterReceiverExpressioncreateCodegenfindParametercalculateInfofindCapturedValuetransformSelectorgetAccessorForSuperCallIfNeeded	genMethodgenerateThisOrOutergetSharedTypeIfApplicablegetCodeFragmentInfogenerateExtensionReceiver(generateNonIntrinsicSimpleNameExpressionreplaceSelectorisValidCharactermangleNameIfNeededtransformReceiver(replaceIsNullableLHSForCallableReference replaceResolvedToCompanionObjecttransformStatementsgenerateOthergetFunctionWithDefaultArgumentscreateCoroutineSuperClasscoroutinesInternal getSupertypeForPropertyReferencegetSupertypesForClosureinternalpropertyClasses!getSupertypesForFunctionReferenceshouldBeTransformedperformTransformations1putReifiedOperationMarkerIfTypeIsReifiedParametercreateStaticFunctionDescriptortransformAnonymousFunctiongenerateUnboxMethodgenerateSpecializedEqualsStubmapMethodSignaturegenerateJvmInlineAnnotationgenerateFunctionsFromAnyinlineAlwaysInlineAssert-generateAssertionsDisabledFieldInitialization&createMethodNodeForAlwaysEnabledAssertgenerateJvmAssertreplaceAssertWithAssertInnergenerateAssertisAssertCall,rewriteAssertionsDisabledFieldInitialization&isBuiltinAlwaysEnabledAssertWithLambdaisBuiltinAlwaysEnabledAssertisCheckAssertionsStatus)isBuiltinAlwaysEnabledAssertWithoutLambdacapturedBoundReferenceReceiverisBoundReferenceReceiverField$isSyntheticClassForCallableReferenceisForBoundCallableReference computeExpectedNumberOfReceiversisForCallableReference2generateCallableReferenceDeclarationContainerClass1generateClosureFieldsInitializationFromParameters"generateFunctionReferenceSignature-generateCallableReferenceDeclarationContainerisTopLevelCallableReference#loadBoundReferenceReceiverParametergetSignatureString"generatePropertyReferenceSignaturegenerateAccessorsfindGetFunction$getWrapperMethodForPropertyReferencecreateFakeOpenDescriptorputInstanceOnStackgetRemainingParameterscountDefaultParametersgenerateOverloadsIfNeededisEmptyConstructorNeeded+generatePrimaryConstructorOverloadsIfNeeded(hasSecondaryConstructorsWithNoParameters)generateOverloadWithSubstitutedParameterstransformConversionTypeRefregisterOperationscreateInvertValuegetNumberCompareOpcodereplaceLValueTypeRefloopJumpcmptransformRValuebooleanConstantgetObjectCompareOpcodereplaceKindfindActualParametergenerateSuperCallArgumenttransformRhstransformLhsgenerateMethodStubisDefaultInJdk"findOverriddenFromDirectSuperClass0findFakeOverridesForMethodsFromMutableCollectiongenerateOverridesInAClasscomputeTasksToGenerate"findRelevantSuperCollectionClassescreateSyntheticSubclassnewTypepaircreateFromPsi%getNameForDestructuredParameterOrNulltopLevelClassAsmType(generateBridgeForMainFunctionIfNecessaryreplaceValueParametersIntopLevelClassInternalNameencodedUTF8SizegenerateCallSingleArgumentisJvmStaticInCompanionObjectwithVariableIndices isPossiblyUninitializedSingletonasmType	useTmpVartransformLeftOperand$filterOutDescriptorsWithSpecialNames
kotlinType2initializeVariablesForDestructuredLambdaParameterslinkedLabelisDefinitelyFitEncodingLimit&isInlineClassTypeWithPrimitiveEquality unwrapInitialSignatureDescriptorgenerateNullCheckForNonSafeAsprepareContextIfNeededunwrapFrontendVersion8populateCompanionBackingFieldNamesToOuterContextIfNeededgenerateIsChecklinkWithLabel,generateNewInstanceDupAndPlaceBeforeStackTopevaluateOncegenerateAsCastsplitStringConstantisToArrayFromCollectiongenerateLambdaForRunSuspend recordCallLabelForLambdaArgument4sortTopLevelClassesAndPrepareContextForSealedClasses%isJvmStaticInObjectOrClassOrInterfaceextractReificationArgumentisJvmStaticInisJvmStaticInInlineClassgetAccessorNameSuffixputReceiverstoreSelectorisNonStaticAccessgetMetadataParameterIndex:isDelegatedPropertyMetadataRequiredForFunctionFromBinariesgetActualCallee#isDelegatedPropertyMetadataRequiredgenInvokeDefaultInstructiongetAsmMethodputHiddenParamsIntoLocalsputValueIfNeededprocessHiddenParametersgenCallInnerputCapturedValueOnStackaddConstantsFromConditions#checkAllItemsAreConstantsSatisfying'buildAppropriateSwitchCodegenIfPossiblegetConstantsFromEntrygetAllConstantsisStringConstantsSwitchisThereConstantEntriesButNullsisIntegralConstantsSwitch&createConstBoundedForInDownToGenerator.createConstBoundedForInReversedDownToGeneratortransformRightOperandtransformConditiongenerateNullCheckIfNeededgenerateSubjectValueToIndexgenerateEntriesgenerateSubjectValueprepareConfigurationputTransitionOnce+generateSwitchInstructionByTransitionsTableprocessConstantfindNullEntryIndexpreferLookupOverSwitch-createConstBoundedForInReversedUntilGenerator9createConstBoundedRangeForInReversedRangeLiteralGeneratorisArraySizeMinusOne$canBeSpecializedByExcludingHighBound,createConstBoundedForInRangeLiteralGeneratorisConstantOneisArraySizeAccessisProhibitedCharConstEndValue&createConstBoundedLongForLoopGenerator"coerceToRangeElementTypeIfRequiredisProhibitedLongConstEndValueisProhibitedIntConstEndValue%createConstBoundedIntForLoopGenerator(createConstBoundedForLoopGeneratorOrNullreplaceExhaustivenessStatustransformSubjectgetRangeElementTypeisSubtypeOfCharSequencecreateReversedRangeValueOrNullcreateRangeValueForExpression!getResolvedCallForRangeExpressionisSubtypeOfStringisCharSequenceIteratorCallisLocalVarReference"createIntrinsifiedRangeValueOrNullcanCacheLengthtransformFinallyBlocktransformCatches
putHighLowevalCharSeqLengthOnStackcoerceUnsignedToULongcoerceUnsignedToUIntinvokeCharSequenceMethodtransformTryBlocktransformParametertransformBlocktransformTypeArgumentsreplaceContextReceiverArgumentstransformDispatchReceiver generateDestructuringDeclarationscheduleLeaveVariable"generateRangeOrProgressionPropertyreplaceArgumentListreplaceSourceincrementLoopVariabletransformCalleeReferencereplaceCalleeReferencescheduleLeaveTaskresolveLoopComponentgetPropertyGetterNamecheckPostConditionloopParametertransformExtensionReceivercompareAndJumpbuildErrorLoopbuildErrorExpressiontoAnnotationArgumentMappingvisitArgumentList#getComparisonGeneratorForKotlinTypeisPrimitiveIntOrCoerciblegetRangeContainsTypeInfo*getComparisonGeneratorForRangeContainsCallinvokeCompareintroduceTemporaryIfRequiredputCoercedArgumentOnStack isInlineClassConstructorAccessor'patchTypeParametersForDefaultImplMethodcreateTypeParameterWithNewNamemapDefaultImpls"isMostPreciseContravariantArgument!updateArgumentModeFromAnnotations$extractTypeMappingModeFromAnnotationisMostPreciseCovariantArgument"canHaveSubtypesIgnoringNullabilityappendQuotedappendNameValue
jsonEscapeisOrOverridesSamAdapterprocessMember"groupMembersDescriptorsBySignaturereportConflictingJvmSignaturescomputeDiagnosticToReport&reportClashingWithPredefinedSignaturesasRawSignature#reportClashingSignaturesInHierarchymarkUsedoutDirectoryignoreErrorsoldBEInitTraceafterIndependentPartgenerateDeclaredClassFilterwantsDiagnosticsshouldOnlyCollectSignaturesdestroytargetIdjvmBackendClassResolverbeforeCompilediagnosticReporterisIrBackend
moduleNamecodegenFactorywrapWithonIndependentPartCompilationEndGenerationStateEventCallbackgetInfoForMangling	md5base64collectSignatureForManglinggetSignatureElementForMangling)collectFunctionSignatureForManglingSuffix'getManglingSuffixBasedOnKotlinSignature	visitCodelistAllParams
newBuilderaddCapturedParamaddThisaddNextParameterbuildParametersaddCapturedParamCopyaddNextValueParameterlistCapturedmarkValueParametersStartisAload0unaryOperation analyzeMethodNodeWithInterpreter'findCapturedFieldAssignmentInstructions$isAloadBeforeCheckParameterIsNotNullgetNextMeaningfulcopyOperationwrapArgumentInValueIfNeedednewOperationgetSharedVarTypeextractPolymorphicReturnType"mapUnderlyingTypeOfInlineClassType%getPackageMemberContainingClassesInfomapImplementationOwnermapAnnotationParameterSignatureisNonConstPropertymapTypeArgumentgetPartSimpleNameForManglingfindBaseDeclaration!getPackageMemberOwnerInternalNamemapDefaultFieldNamewriteVoidReturnforPackageMembermapDefaultMethod+mapSignatureForInlineErasedClassSkipGenericdemangleInternalNameisInlineClassConstructorforClassMember!internalNameForPackageMemberOwnerinternalNameWithoutModuleSuffixgetDefaultDescriptorgetVarianceForWildcard%getContainerClassIdForClassDescriptor#writeSuperConstructorCallParametersmapDefaultCallbackhasJavaLangRecordSupertype generateErrorMessageForErrorTypegetModuleNameSuffix extractPolymorphicParameterTypesmangleInternalNamemapPropertyReferenceSignaturewriteFormalTypeParametergetKindForDefaultImplCall+getContainingClassesForDeserializedCallablemapAnnotationParameterNamewriteFieldSignature(mapSyntheticMethodForPropertyAnnotationsisStaticAccessor$isPropertyWithGetterSignaturePresentcanBeMangledInternalNamemapScriptSignaturefindFirstDelegatingSuperCall$writeAdditionalConstructorParametersoverridesJvmDefault mapSignatureWithCustomParameters%mapSignatureForBoxMethodOfInlineClass-mapSignatureForSpecializedEqualsOfInlineClassfindAnyDeclarationdoRemaptoNameTypePairfilterSkippedgetNewFieldsToGeneratetransformToFieldInfocreateSignatureRemappermergeWithNotChangeInfoaddNotChangedClassgetChangedTypesaddClassToRemovecalcClassesToRemoveaddChangedTypeparseOrCreateDefaultparseStratum%isProhibitedDuringArgumentsEvaluationisInplaceArgumentStartMarkerisInplaceCallEndMarkeraddInplaceArgumentStartMarker	addMarkeraddInplaceCallStartMarkerisInplaceCallStartMarkeraddInplaceArgumentEndMarkeraddInplaceCallEndMarkerisInplaceArgumentEndMarker
createRootaddAdditionalMappingshasNoAdditionalMappingregisterTypeParametercreateNewAndMergemapNewIntervaltoSMAPMappingmapLineNumbermapSyntheticLineNumber
toSMAPFilemapNewLineNumbertoSourceInfogetOrRegisterNewSourcemapDestToSourcetoSMAPmapSourceToDest	findRangecanReuseForhasMappingForSourcefindFieldInSuperisRecapturedLambdaTypecollectLvtEntryInstructionstransformMethodfixupLVTparseMethodOrNull%moveInplaceArgumentsFromStoresToLoads	parseCallparseArgstripMarkersisUnsafeToMovecollectStartToEnddoClusteringvisitFieldInsnprepareNodetransformCapturedtransformFinallyDeepIndex8replaceContinuationAccessesWithFakeContinuationsIfNeeded%isAnonymousClassThatMustBeRegeneratedaddLocalReturnToTransformrecordTransformationfindCapturedField replaceContinuationsWithFakeOnesmarkObsoleteInstruction%markPlacesForInlineAndRemoveInlinablefindMeaningfulSuccsgetFunctionalArgumentIfExistsdoInlinetransformExpandedTypeRefanew!handleAnonymousObjectRegenerationreplaceExpandedTypeRefremoveClosureAssertionsisAlreadyRegeneratedvisitMethodInsnwrapExceptiongetCapturedFieldAccessChainreplaceInvocationKindgetNewIndexbuildConstructorInvocationreplaceInlineStatuspreprocessNodeBeforeInline*removeFakeVariablesInitializationIfPresentwriteTransformedMetadatagenerateConstructorAndFields!inlineMethodAndUpdateGlobalResultisPublicAbi+extractParametersMappingAndPatchConstructorwriteOuterInfogetMethodParametersWithCapturedaddUniqueFieldinlineMethodtransformMetadatacapturedParamDescaddAllParameterscreateNodeWithFakeVariablesenterDeclarationrecordTypeFromInlineFunctionexitDeclarationisTypeFromInlineFunctionenterIntoInliningexitFromInlininggetDeclarationSlotgetParameterByDeclarationSlotgenerateInlineIntrinsicForIrgenerateInlineIntrinsicisSpecialEnumMethodgetSpecialEnumFunDescriptorcreateSpecialEnumMethodBodyputReifiedOperationMarkerreifyInstructions(addParameterMappingForFurtherReification	processAsisOperationReifiedMarkerprocessNewArrayprocessReifyMarkerprocessNextTypeInsnmergeAllprocessSpecialEnumFunctionrewriteNextTypeInsnreifyisNeedClassReificationMarkerwereUsedReifiedParameters!putReifiedOperationMarkerIfNeededisReifiedMarker	processIs!propagateChildUsagesWithinContextaddUsedReifiedParameteraddParameterMappingToTypeprocessTypeOfprocessJavaClasstrackLookuptransformTypeRefloadCompiledInlineFunctioncreateTypeOfMethodBodygenerateTypeOfgenerateNonReifiedTypeParameterdoGenerateTypeProjection0doesTypeContainTypeParametersWithRecursiveBoundsputTypeOfReifiedTypeParametercutOtherMappings%createRemappingClassBuilderViaFactorycreateClassReaderisValuesregisterLineNumberAfterwardsputClosureParametersOnStackisCallSiteIsSuspendisInlineSuspendParametergetIntervalprocessCurrent"splitAndRemoveIntervalFromCurrentsgetEndNodesgetStartNodesinstructionIndexsortTryCatchBlockssplitCurrentIntervalsgetMeaningfulIntervalsaddNewIntervalsubstituteTryBlockNodesremapEndLabelremapStartLabelsubstituteLocalVarTablesplitAndRemoveCurrentIntervalsgenerateMethodBodygetInlineNameGeneratortransformImportsreplaceValueParameters$getDirectMemberAndCallableFromObjectgetInlineCallSiteVisibilityreplaceBodygetDeclarationLabels addParentsToInnerClassesIfNeededisInlineOrInsideInline
mapDefaultcloneWithNewDeclarationIndextransformValueParameters!isMyBoundReceiverForDefaultLambdaisSamWrapperConstructorCallisFinallyMarkerRequiredisSuspendMarkerisThis0emitInlineMarkercreateEmptyMethodNodewrapWithMaxLocalCalclabelRefisNumberedFunctionInternalNamefirstLabelInChainreplaceBodyResolveStateisSuspendInlineMarkerisFakeContinuationMarkerisFakeLocalVariableForInlineisAfterInlineMarkerisReturnsUnitMarkerisSamWrapperonInlineLambdaStartgetLoadStoreArgSizereplaceDeprecationisBeforeInlineMarkeraddInlineMarkerisReturnOpcodepreprocessSuspendMarkersgetMarkedReturnLabelOrNullareLabelsBeforeSameInsnisStoreInstructionisWhenMappingAccessisAfterInlineSuspendMarkerisMarkedReturnaddFakeContinuationMarkerloadClassBytesByInternalName"addUnboxInlineClassMarkersIfNeeded,isAfterFakeContinuationConstructorCallMarkerisFinallyEndcloneMethodNodeaddReturnsUnitMarker	labelTextgenerateResumePathUnboxing(addFakeContinuationConstructorCallMarkeronInlineLambdaEndaddReturnsUnitMarkerIfNecessarygetIndexAfterLastMarkerisBeforeSuspendMarkerlineNumberRangeaddAfterUnboxInlineClassMarkerdumpBodycalcMarkerShiftisBeforeUnboxInlineClassMarkerisOldSamWrappergenerateGlobalReturnFlagisInlineMarker-isBeforeFakeContinuationConstructorCallMarkerisAfterUnboxInlineClassMarkerinsertNodeBeforeisAnonymousConstructorCallisAfterSuspendMarkerisCapturedFieldNameisFinallyStartaddBeforeUnboxInlineClassMarkerinsnTextisBeforeInlineSuspendMarkerisAnonymousSingletonLoadgetInlineName)createFakeContinuationMethodNodeForInlineisFinallyMarkerisAnonymousClassisInvokeOnLambdaremoveFinallyMarkersgenerateFinallyMarkerfindVirtualFileImprecise	isIntegeraddSuspendMarkersubGeneratorgetGeneratorClass*expandMaskConditionsAndUpdateVariableNodesdefaultLambdaFakeCallStubloadDefaultLambdaBodyisMaskIndexinlineBridgeextractDefaultLambdasInfotransformBackingFieldtransformInitializertransformStatusreplaceReturnTypeRefreplaceInitializertransformReceiverTypeReftransformChildrentransformSetterreplaceReceiverTypeReftransformTypeParameterstransformDelegatefoldFieldAccessChainIfNeededtransformReturnTypeReffoldNameisRegeneratedAnonymousObjectsubInlineWithClassRegeneration recordRegeneratedAnonymousObjectsubInlineLambda	subInlineisInvokeSuspendshouldGenerateStateMachineisContinuationNotLambda	fieldLoad(isSuspendFunctionWithFakeConstructorCallnewStateMachineForNamedFunctionsafeToRemoveContinuationClassisStateMachinereplaceFakesWithRealsregisterClassBuildernewStateMachineForLambdaoldContinuationFrom&suspendLambdaWithGeneratedStateMachine)surroundInvokesWithSuspendMarkersIfNeededcreateNewMethodFromunregisterClassBuilder(findFakeContinuationConstructorClassNamemarkNoinlineLambdaIfSuspendisSuspendIntrinsicParameter%getFirstCrossInlineOrNonInlineContextperformInlinegenerateStubisLocalWithNoBoxingisBackwardsJumpputArgumentToLocalValreplaceResolvePhasegenerateAndInsertFinallyBlocksisCapturedInlineParameter
leaveTempsrequiresEmptyStackOnEntry#isInlinedToInlineFunInKotlinRuntime!processDefaultMaskOrMethodHandler
inlineCallputCapturedToLocalValgetImplementationOwnerClassTypeisImplementationOwnergetCompanionObjectContextreplaceContextReceiversgetScriptFieldNamegetImplicitReceiverNamegetProvidedPropertyTypegetProvidedPropertyNamegetImplicitReceiverType replaceControlFlowGraphReference
checkTypes	coerceInttransformOtherChildren(performSpilledVariableFieldTypesAnalysis	isIntLikeallSuspensionPointsAreTailCallsreplaceSetter$transitiveSuccessorsAreSafeOrReturnstoFromSuspensionPointaddCoroutineSuspendedChecksreplaceGettervisitEnumValueisSafeskipUntilMeaningfulvisitUShortValueisInvisibleInDebugVarInsn allOverriddenFunctionsReturnUnitcreateStateMachineBuilder!containingClassInternalNameOrNullanalyzePop2'getUninitializedValueForConstructorCallanalyzePopInstructionsisConstructorCallcheckUninitializedObjectCopy
analyzePopfinalizeClassFactorycollectUnitUsagemarkUnspillableloadCoroutineSuspendedMarkerisCoroutineSuperClassasDummyOldResolvedCall8createMethodNodeForSuspendCoroutineUninterceptedOrReturnisSuspendLambdaOrLocalFunctioninvokeInvokeSuspendWithUnitcoroutineContextAsmType&isLocalSuspendFunctionNotSuspendLambdainvokeGetContextgetOriginalSuspendFunctionViewidentifiedChild"isSuspendFunctionNotSuspensionViewisSuspensionPoint#createMethodNodeForCoroutineContextasMutableResolvedCall!getOrCreateJvmSuspendFunctionViewgetImplForOpenMethod3isBuiltInSuspendCoroutineUninterceptedOrReturnInJvm-getContinuationParameterTypeOfSuspendFunctioncreateCustomCopygenerateCoroutineSuspendedCheck)unwrapInitialDescriptorForSuspendFunction+replaceSuspensionFunctionWithRealDescriptorallFunctionParametersgenerateInvokeMethodisUnusedgenerateResumeImplallValueParameterTypesgenerateInvokeSuspendvisitUByteValuegetErasedCreateFunctioninitializeCoroutineParameterscreateHiddenFieldInfogetCreateFunctiongenerateClosureBodyvisitDoubleValuegenerateCreateCoroutineMethodgenerateUntypedInvokeMethodcreateFieldsForParametersvisitAnnotationValueinvokeHashCodegetMutableCollectionMethodName getIsMutableCollectionMethodNametypeIntrinsictypeIntrinsicNode	checkcast
instanceOf getAsMutableCollectionDescriptor
iconstNodegetFunctionTypeAritygetFunctionTypeArityByRegexgetClassFqName getAsMutableCollectionMethodNamegetSuspendFunctionTypeArityspillVariablesupdateLvtAccordingToLivenesswithInstructionAdapter,splitTryCatchBlocksContainingSuspensionPointinitializeFakeInlinerVariablesdropUnboxInlineClassMarkers#generateContinuationConstructorCallgenerateSpillAndUnspillfindSuspensionPointLineNumber(getParameterTypesForCoroutineConstructorcollectSuspensionPointEndsextendRecordIfPossiblegetLastParameterIndexlocalVariableName$replaceFakeContinuationsWithRealOnes findUnboxInlineClassInstructions
findRecordcleanUpField$checkForSuspensionPointInsideMonitorsplitLvtRecordfindSuspensionPointPredecessors transformCallAndReturnStateLabelwriteDebugMetadata(prepareMethodNodePreludeForNamedFunctionnodeTextWithLivenessnextDefinitelyHitLineNumberdropSuspensionMarkers calculateSpilledVariableAndFieldaddContinuationAndResultToLvtgetAllParameterTypes%removeFakeContinuationConstructorCallsetLabel/replaceReturnsUnitMarkersWithPushingUnitOnStackfieldNameForVaraddCompletionParameterToLVT generateResumeWithExceptionCheckcountVariablesToSpill/getParameterTypesIndicesForCoroutineConstructoraddMonitorDepthToSuccs	nextLabelregisterIntrinsicvalueParameterCountForKeygetReceiverParameterFqNamecreateUnaryIntrinsicCallablecreateBinaryIntrinsicCallablecreateIntrinsicCallablevisitNullValuetryApplyvisitStringValueisApplicableToOverloadvisitULongValuevisitLongValueinvokeVirtualGetClassMethodgetStackValuegenerateEmptyArrayBodygenerateArrayOfBodygenerateArrayConstructorBodyisPrimitiveOrWrapperfakeAlwaysTrueIfeqisa	asNotNullisPseudocreateInsnNodestoreNotNullparsePseudoInsnOrNullfixStackAndJumpisPseudoInsnfakeAlwaysFalseIfeqshouldRemovegetLastTargetJumpInsnrewriteLabelIfNeededremoveNodeGetNextrewriteNonLabelInstructionsrewriteLabelsrewriteLocalVarsgetNewreplaceNodeGetNextgetNewOrOldrewriteLineNumberNoderewriteTryCatchBlocksrewriteFrameNoderewriteLabelInstructionsrewriteLookupSwitchInsnrewriteJumpInsnrewriteTableSwitchInsngetTotalTcbSizecanBeOptimized$canBeOptimizedUsingSourceInterpretergetTotalFramesWeightisApiVersionIsAtLeastCallgetIntConstValuegetRequiredNopInRange#recordNopsRequiredForTryCatchBlocksrecordNopsRequiredForDebuggernegateConditionalJumpOpcodecollectRewriteActions
isIntConsthasOptimizableConditionstryRewriteComparisonWithZero	isIntJumprewriteBinaryComparisonOfConstsrewriteBinaryComparisonWith0tryRewriteBinaryComparisonisMultiArrayTypeisTrivialSubtype%getTypeAdjustmentForALoadInstructions
canRewritegetCapturedVarOrNull	trackPopsremoveOrReplaceByNopfindCleanInstructionscreateRefValuesassignLocalVarsrewriteRefValueisPurePushOfSize1isPurePushOfSize2transformOnceisEliminatedByPopisLdcOfSize2isEliminatedByPop2addAssociatedInsnmarkValueAsDirtyprocessOperationWithBoxedValueprocessPopInstruction
isSafeCastisExactValue
isUnboxingisInlineClassUnboxingisCoroutinePrimitiveBoxing4isJavaLangComparableCompareToForSameTypedBoxedValuesisBoxingcanValuesBeUnboxedForAreEqualisJavaLangClassBoxingisJvmPrimitiveNamemergeStackValuesisWrapperClassNameOrNumberisJavaLangClassUnboxingisJavaLangComparableCompareTobuildFqNameByInternalcheckUsedValuecreateNewBoxingisInlineClassBoxingisProgressionClass areSameTypedPrimitiveBoxedValues*isAreEqualIntrinsicForSameTypedBoxedValuesisCastToProgressionisMethodInsnWith#isInlineClassBoxingMethodDescriptorisWrapperClassNameisPrimitiveUnboxingisIteratorMethodCall%isInlineClassUnboxingMethodDescriptorisBoxingMethodDescriptormergeLocalVariableValues%isNextMethodCallOfProgressionIteratormergeBoxedHazardousisAreEqualIntrinsicisPrimitiveBoxingmarkBoxedArgumentValues!isIteratorMethodCallOfProgressionisUnboxingMethodName
isPurePushmarkAsDontTouchisUnitInstancelongerWhenFusedWithPopcombineWithPop
shouldKeepisPrimitiveTypeConversionisPopisDoubleSizegetVariablesIndexesgetMergedWithunboxedTypeOfInlineClassaddInsnmarkAsUnsafeToRemovegetAssociatedInsnsisInlineClassValueaddMergedWithgetUnboxedTypeaddUnboxingWithCastToaddVariableIndexgetUnboxingWithCastInsnsisFromProgressionIteratorprogressionIteratorValuebyProgressionClassTypegetPredecessorsIndicesvisitExceptionEdge	visitEdgegetSuccessorsIndicescreateMergedValuecreateTaintedValuemergeDescriptorscreatePossiblyMergedValuecheckRefValuesUsagesgetMergedValueType&adaptJavaLangComparableCompareToForInt!removeValuesClashingWithVariablesadaptCastInstructionadaptAreEqualIntrinsicForIntadaptBoxingInstructionadaptInstructionsForBoxedValueadaptAreEqualIntrinsic+removeValuesFromTaintedProgressionIteratorsadaptInstructionthrowCannotAdaptInstructionfuseAreEqualWithBranch(isUnsafeToRemoveBoxingForConnectedValues!getValuesStoredOrLoadedToVariable%removeValuesClashingWithVariablesPassbuildVariablesRemapping'adaptJavaLangComparableCompareToForLong&interpretPopInstructionsForBoxedValuesadaptAreEqualIntrinsicForLongifEqual1Else0 adaptJavaLangComparableCompareToadaptInstructionsForBoxedValues(adaptJavaLangComparableCompareToForFloat%adaptLocalVariableTableForBoxedValues)adaptJavaLangComparableCompareToForDoublefindNextOrNullremoveUnusedLocalVariablesstripOptimizationMarkersremapLocalVariablesisSize2LoadStoreOperation
takeInsnIffindPreviousOrNullremoveEmptyCatchBlocks
insnListOfprepareForEmittingisStoreOperationisOptimizationMarkerisLoadOperationupdateMaxStack	hasOpcodeisInsn	markAliveanalyzeLivenessisControlFlowMergedefVarmarkDeaduseVarcreateReturnValueVariable&allocateVariablesForBeforeInlineMarkermarkRestoreNodeEmittedallocateNewHandleupdateMaxLocalsisFullyEmittedmarkRestoreStackMarkerEmittedmarkEmittedgetSavedStackDescriptormarkAfterInlineMarkerEmitted getFirstUnusedLocalVariableIndexgetBeforeInlineDescriptor#allocateVariablesForSaveStackMarker0localVariableAndTryCatchBlockLabelsAreAlwaysLivereturnOperationisDefaultHandlerNodedebugStringinsertTryCatchBlocksMarkersinsertSaveRestoreStackMarkerscollectDecompiledTryDescriptorstransformTryCatchBlockssaveStackAndClearexecuteBeforeInlineCallMarkergetStackContentexecuteSaveStackBeforeTry
clearStackgetActualStackSizeexecuteAfterInlineCallMarkersetStackrecordLoopEntryPointMarkersgetStackToSpillgetActualStackexecuteRestoreStackInTryCatchgetExpectedStackSize%analyzeAndTransformBreakContinueGotostransformRestoreStackMarkertransformSaveStackMarkertransformBreakContinueGotosremoveAlwaysTrueIfeqMarkersremoveAlwaysFalseIfeqMarkerstransformAfterInlineCallMarker#analyzeAndTransformSaveRestoreStack transformSaveRestoreStackMarkerstransformBeforeInlineCallMarkerprocessControlFlowEdgecomputeExceptionEdgesvisitNopInsnvisitControlFlowExceptionEdgerestoreStackWithReturnValuegetPopInstructionrestoreStackgenerateLoadInstructions	saveStackpeekWordsToreplaceAlwaysTrueIfeqWithGotoremoveAlwaysFalseIfeqreplaceMarkerWithPopsgenerateStoreInstructions	peekWordsnonSourceAnnotationsreplaceExpressiongetLambdaExpressiongetLabelNamegetBodyExpressiongetIdentifyingElementgetConstructorKeywordcreateAnonymousInitializercreatePropertycreateTypeParameterisReferenceTypeisReifiedSafeAsgetObjectTypemergeNotNullValuesOfSameKindtoFixStackValueisAnalysisRequiredhasAnyMarkersvisitFixStackBeforeJumpvisitFakeAlwaysTrueIfeqvisitFakeAlwaysFalseIfeq	isNotNullisCheckExpressionValueIsNotNullisThrowIntrinsicinjectAssumptionsForNullCheckisInstanceOfOrNullCheckinjectNullabilityAssumptionsaddDependentChecktransformTrivialInstanceOfisParameterCheckedForNulltransformTrivialNullJumpanalyzeNullabilities#injectAssumptionsForInstanceOfCheckpopReferenceValueBefore!usesLocalExceptParameterNullCheckisCheckNotNull addDependentCheckForCheckNotNulllistOfSyntheticsinjectAssumptionsinjectAssumptionsForInsn'transformTrivialCheckNotNullWithMessageisOptimizableinjectCodeForStoreNotNulltransformTrivialCheckstransformTrivialCheckNotNullisCheckNotNullWithMessagecollectVariableDependentCheckstransformInstanceOf$injectAssumptionsForNotNullAssertionrevert-transformTrivialCheckExpressionValueIsNotNullisCheckParameterIsNotNullinjectCodeForThrowIntrinsiccreateEnumEntrygetColonparseKotlinAbiVersiontemporaryValscreateModifierListremoveModifiergetContainingClassOrObjectProjectContextContextForNewModuleinitializeModuleContentsGlobalContextModuleContextwithProjectisInterveningmatchOpcodesisRewritableSafeCallPartprocessLabelssimplifyKnownSafeCallPatternsaddCfgEdgesToLabelssimplifyTrivialInstructionshasSinglePredecessoraddNonTrivialPredecessorrewriteSafeCallPartgetAllPredecessorshasNonTrivialPredecessorsoptimizeTemporaryValsaddCfgEdgeToLabelirBodiesirDebugInfopackageFragmentsDirirSignatures	irStringspackageFragmentFileirDeclarationsirFileirTypesserializeType'writeNewFunctionNameManglingRequirement1writeFunctionNameManglingForReturnTypeRequirementresolveSingleFileKlibreadKonanLibraryVersioningwriteKonanLibraryVersioningunpackZippedKonanLibraryTowithSafeAccessfakeLibraryresolutionSequenceresolveOrNull
compatiblegetDefaultLibrariesFromDirdirectLibsSequencefoundfilterOutPre_1_4_librarieslibraryMatchvalidFileOrNulldefaultLinksunresolvedDependenciessubstitutePathUnresolvedLibraryzippedKotlinLibraryChecks
extractDirinPlace	realFilesdirectlyFromZipensureBufferaddAnnotationEntryserializeFilegetExpressionparseFromStringbuildKotlinLibrarygetTypeReferencesetTypeReferencewriteIrvisitModifierListcreateLibraryreadOffsetstableItemBytesreadIndexMapwriteIntoFilewriteIntoMemorywithLeadingZerosloadModuleHeaderloadPackageFragmentparseModuleHeaderparsePackageFragmentloadPackageFragmentByteArrayisInteropLibraryloadClassNameshasTopLevelClassifierensureStorageacceptChildrengetReferencedNameElementTypecreateKotlinLibrarygetReferencedNameAsNamegetReferencedNameElementisKotlinLibrarygetContentElementisSpreadcreateKotlinLibraryComponentssignatureDataReadermayHaveContract&hasTypeParameterListBeforeFunctionNameloadIrDeclaration2createDefaultKonanResolvedModuleDescriptorsFactory5createDefaultKonanDeserializedModuleDescriptorFactory
isAllUndergetImportedFqNamegetFullListcreateForwardDeclarationsModule!createDescriptorOptionalBuiltsInshasValueArguments!initializePackageFragmentProvidergetShortNameisOutVariance/createForwardDeclarationHackPackagePartProviderisInVarianceTargetIdresolveDependencieswarnOnLibraryDuplicateNamesvalueomitDuplicateNameswarnOnLibraryDuplicatesleaveDistinctfindLibrariesgetUseSiteTargetlibraryResolverreadByteAsIntisValidContinuationparseBooleanhasUnsignedLongSuffixparseNumericLiteral
parseFloat	parseLongparseFloatingLiteralhasIllegalUnderscorehasLongSuffixhasUnsignedSuffixparseDoublecreateParsercreateLexergetFileNodeTypegetStringLiteralElementsgetCommentTokensgetWhitespaceTokensspaceExistanceTypeBetweenTokenscreateElementgetEdgePosition!getSinceKotlinVersionByOverriddengetDefaultImportsonlyWithUseSiteTargetT_TOP_LEVEL_PROPERTYextraTargetsT_MEMBER_PROPERTYpropertyTargets
targetList"checkClashWithOtherDelegatedMemberoverridesClassMembersOnlygetDelegatableMembersgenerateDelegationCandidatesgenerateDelegatesForInterfacegetDelegatesisOverridingAnyOfgenerateDelegatedMembersaddConstraintForThisaddConstraintsForGetValueMethodaddConstraintsForSetValueMethodresolveDelegatedPropertyType#getTypeForPropertyWithoutReturnTyperesolveInitializerTyperesolveTypeNullablesetConstantForVariableIfNeededconfigureExtensionsAndCheckersconfigureDefaultCheckersasImportedFromObject"checkLateinitModifierApplicabilitycheckShadowedExtensionPropertycheckShadowedExtensionFunction+getInvokeOperatorShadowingExtensionFunction+isExtensionFunctionShadowedByMemberFunctionincompatibilityRegisterbuildCompatibilityMapcompatibilityForClassesRegistercompatibilityRegisteralwaysifSupported	isAllowedredundantRegistercompatibilityhasAlias$hasImplicitIntegerCoercionAnnotation$hasImplicitIntegerCoercionCapabilityisEnabledForParameterisEnabledForConstValisEnabledForresolveFunctionBodyconfigureCompilerEnvironmenthasDelegatecheckAndMarkVisited	isInCyclegetMissingSuperClassifiersdoGetMissingClassifiers$disableContractsInsideContractsBlockgetDescriptors%checkPropertyUseSiteTargetAnnotationscheckSuperTypeAnnotations-applicableTargetSetFromTargetAnnotationOrNullcheckExpression%checkUselessFunctionLiteralAnnotation"getDeclarationSiteActualTargetListcheckAnnotationEntrycheckModifierListcheckLanguageLevelSupportgetSourceFromAnnotation%collectEffectiveReferencedDescriptorsdescriptorToDeclaration0getSourceForExtensionReceiverParameterDescriptorfindTopLevelParentgetSourceFromDescriptor!getEffectiveReferencedDescriptorsgetDeclarationCategoryisOverloadablecheckOverloadability(checkMissingOverridesByJava8RestrictionscheckVisibilityForMembervarOverriddenByVal"abstractMemberWithMoreSpecificTypereturnTypeMismatchOnOverride!reportDelegationProblemIfRequiredcheckOverrideForCopyFunction!computeRelevantDirectlyOverriddenabstractInvisibleMemberabstractMemberNotImplementedcheckOverridesInAClassgetRelevantDirectlyOverriddenfindDataModifierForDataClassresolveUnknownVisibilities#reportInheritanceConflictIfRequiredoverridingFinalMembertoDeprecationStrategycheckOverridesForParameters+checkNameAndDefaultForFakeOverrideParametercheckPropertyKindcannotOverrideInvisibleMember%abstractBaseClassMemberNotImplementeddoReportErrors(conflictingInterfaceMemberNotImplementedprepareTypeSubstitutor+multipleImplementationsMemberNotImplementednothingToOverride%checkOverridesForMemberMarkedOverride0collectAbstractMethodsWithMoreSpecificReturnType!checkOverrideForComponentFunction$checkParameterOverridesForAllClasses(shouldReportParameterNameOverrideWarningcheckInvisibleFakeOverridecheckOverrideForMember!findInvisibleOverriddenDescriptor'checkNameAndDefaultForDeclaredParametertypeMismatchOnInheritanceisReturnTypeOkForOverridecheckOverridesForMember$checkInheritedAndDelegatedSignaturesgetMissingImplementationscheckOverrides#createCannotInferVisibilityReportercheckInheritedDescriptorsGroup reportGetSetValueResolutionError#createReceiverForGetSetValueMethodsresolveGetSetValueMethod$reportDelegateErrorIfCandidateExistsresolveDelegateExpression'buildSubstitutionMapOfNonFixedVariablesgetDelegateTypeinverseSubstitutionresolveSetValueMethodresolveGetValueMethodisProperType#recordResolvedDelegateOrReportErrorreportDelegateFunctionMissingrecordDelegateOperatorResultsaddConstraintForThisValuegetResolvedDelegateTyperesolveWithNewInference%createContextForProvideDelegateMethodresolveProvideDelegateMethodgetGetValueMethodReturnTypecreateExpressionForProperty
renderCall"createContextForGetSetValueMethodsresolvePropertyDelegateconventionMethodFoundextractResolvedDelegateTypegetGetSetValueMethodgetProvideDelegateMethodcompleteNotComputedDelegateType'inferDelegateTypeFromGetSetValueMethodscreateFromProperty'createFromDestructuringDeclarationEntryisIrrelevantvarianceWithManualcheckClassesrecordPrivateToThischeckTypePositioncheckMembersrecordPrivateToThisIfNeededisExtensionaddElementToSliceregisterFileByPackagegetTopLevelDescriptorsByFqNamecheckRedeclarationscheckRedeclarationsInPackagesresolveAnnotationsOnFiles#reportRedeclarationsWithClassifiershasReturnTypeRefcreateEqualsFunctionDescriptorshouldAddFunctionFromAny createToStringFunctionDescriptorshouldAddHashCodeshouldAddToString createHashCodeFunctionDescriptorshouldAddEqualsdoCreateFunctionFromAnyaddFunctionFromAnyIfNeeded*findClassifierAndReportDeprecationIfNeeded*resolveClassOrPackageInQualifiedExpressionresolvePackageHeaderstoreQualifierquickResolveToPackageprocessReferenceInContextOfclassDescriptorFromTypeAliasresolveToPackageOrClassPrefixresolveInIDEModeresolveQualifierPartListForTypedoProcessImportReferencerecordPackageViewsprocessImportReference%resolveQualifierInExpressionAndUnrollcheckNotEnumEntrymapToQualifierPartsprocessSingleImportaddQualifierPart"resolveDescriptorForDoubleColonLHS.resolveNameExpressionAsQualifierForDiagnosticsasQualifierPartList*tryResolveDescriptorsWhichCannotBeImportedcomputePackageFragmentToCheck&resolveQualifierAsReceiverInExpressionresolveQualifierReferenceTarget&resolveQualifierAsStandaloneExpression8getCallableReceiverDescriptorRetainingTypeAliasReferencecheckOverloads*isConstructorsOfDifferentRedeclaredClasses-findConstructorsInNestedClassesAndTypeAliasescheckOverloadsInPackagesreportRedeclarations!groupModulePackageMembersByFqName"isDefinitionsForDifferentPlatforms isExpectDeclarationAndDefinitionisSynthesizedisTopLevelMainInDifferentFilescheckOverloadsInPackagefindRedeclarationsgetPossibleRedeclarationGroups'collectModulePackageMembersWithSameNamecheckOverloadsInClass#getModulePackageMembersWithSameNamecheckActualFunctioncheckTypeAliasDeclarationcheckPrimaryConstructorcheckExpectedFunctioncheckAnnotationClassMemberscheckValOnAnnotationParameter!isImplementingMethodOfAnyInternalcheckTypeParameterConstraintscheckOpenMemberscheckObjectcheckSupertypesForConsistencyisHidingParentMemberIfPresent.checkModifiersAndAnnotationsInPackageDirectivecheckTypesInClassHeadercheckMethodsOfAnyInInterfaceisImplementingMethodOfAnyremoveDuplicateTypescheckConstructorInInterfacecheckMemberPropertycheckActualTypeAliasnoExplicitTypeOrGetterTypecheckLocalAnnotation#addAccessibleTypeParametersFromTypecheckConstructorVisibility	withTrace#reportVisibilityModifierDiagnosticscheckAccessorcheckClassButNotObjectcheckImplicitCallableTypecheckBackingField0checkPropertyTypeParametersAreUsedInReceiverTypecheckLocalTypeAliasDeclarationcheckExpectedClassConstructorcheckPrivateExpectedDeclarationcheckAccessorscheckTypeAliasExpansionhasDelegateExpressionhasConstraintscheckConstructorDeclarationhasAccessorImplementationgetUsedTypeAliasParametersfindAllDependsOnPathshasImplementingModulesfindAllReversedDependsOnPathscheckForSyntacticErrorsgetSyntaxErrorRangesformDebugNameForBindingTracethrowExceptionOnErrorscreateTypeBindingcreateTypeBindingFromPsi.createTypeArgumentBindingsWithSinglePsiElementcreateTypeBindingForReturnTyperesetCallbackmoveAllMyDataTosetCallbackIfNotSetselfGetcreateConstructorDescriptor%resolveSecondaryConstructorDescriptorgetContextReceiversTypescreateValueParameterDescriptorsremoveParameterNameAnnotation1initializeFunctionDescriptorAndExplicitReturnTypegetContractProvider#resolvePrimaryConstructorDescriptorresolveFunctionDescriptor/initializeFunctionReturnTypeBasedOnFunctionBodygetReceiverTypefunctionTypeExpected#resolveFunctionExpressionDescriptorresolveAbbreviatedTypecheckParametersOfFunctionTypevisitContextReceiverList&isNullableOrUninitializedTypeParameter%classifierDescriptorsFromInnerToOutercheckContextReceiversAreEnabledvisitIntersectionTypeforceResolveTypeContents0checkNonParenthesizedAnnotationsOnFunctionalTypegetReferencedNameresolveTypeForClassifiervisitSelfTyperesolveParametersOfFunctionType(appendDefaultArgumentsForLocalClassifiergetScopeForTypeParametercreateTypeFromInnerresolveTypeForTypeAliasbuildFinalArgumentListresolveTypeForClass*resolveTypeProjectionsWithErrorConstructorcheckParameterInFunctionTyperesolvePossiblyBareType!createErrorTypeForTypeConstructor#isPossibleToSpecifyTypeArgumentsForcanHaveFunctionTypeModifiersshouldCheckBoundsresolveProjectionKindresolveTypeAnnotationsresolveTypeForTypeParameter,collectArgumentsForClassifierTypeConstructorresolveTypeProjectionsresolveTypeElementresolveExpandedTypeForTypeAlias getModuleLanguageVersionSettingschoseOnlyVisibleOrAllfindImportsByAlias	indexStubasImportedFromObjectIfPossiblestoreReferencesToDescriptors collectCallableMemberDescriptorsisEdgeInCyclecollectReachabledoBuildGraphshouldCreateStubcheckLocalVariableDeclaration!initializeWithDefaultGetterSetterresolveLocalVariableDescriptor7updateAccessorFlagsFromResolvedCallForDelegatedProperty&resolveLocalVariableDescriptorWithType!createComponentFunctionDescriptorcreateCopyFunctionDescriptorresolveCollectionLiteral)getFunctionDescriptorForCollectionLiteralgetArrayFunctionCallNamecomputeKindOfContainer%resolveCollectionLiteralSpecialMethodreportUnsupportedLiteralindexOrMinusOnefilterStatementsgetLastStatementInABlockhandleContentChangetransformAnonymousTypereportExposurereportExposureForDeprecationgetDeclarationscheckDeclarationWithVisibilitygetPsiOrParentshouldBeHiddenFromParent
checkBoundreportForTypeAliasExpansion"checkBoundsForAbbreviatedSupertypecheckBoundsInSupertype2containsIncorrectExplicitDefinitelyNonNullableTypegetSuperNamesisCopygetAnnotationEntriescheckIfHasBackingFieldcheckIfDelegatedPropertycheckIfPropertycheckAsTopLevelTypeReferencecheckIfMutablePropertyuseSiteDescriptioncheckSupportsFeature-createPropertiesFromDestructuringDeclarationsresolveImportsInFilecreateTypeAliasDescriptorscreateFunctionDescriptorsresolveImportsInAllFilescheckClassOrObjectDeclarationsregisterTopLevelFqNameanalyzeDeclarationsresolveAllHeadersInClassescreatePropertyDescriptors$registerPrimaryConstructorParametersincludesEverythingInisSynthesizedInlineClassMemberisSpecializedEqualsMethod&isSynthesizedInlineClassMemberWithNameisSynthesizedBoxMethodcreateUnboxFunctionDescriptor)createValueParametersForSpecializedEquals"createConversionFunctionDescriptorcreateValueParameterForBoxingisSynthesizedBoxOrUnboxMethodcreateBoxFunctionDescriptorisSynthesizedUnboxMethod!createSpecializedEqualsDescriptorhasJvmStaticAnnotationargumentValueresolveAnnotationsWithArgumentsresolveAnnotationEntries"resolveAnnotationsFromModifierListresolveAnnotationType"resolveAnnotationsWithoutArgumentsisJavaLangRecordTypegetCompileTimeConstantcreateResolverForModulechooseStrategyisJavaDefaultMethod"isBuiltInMemberMappedToJavaDefault8isOverridingOnlyDescriptorsThatCanBeImplicitlyOverridden9isPlatformSpecificDescriptorThatCanBeImplicitlyOverridden	exportsTocanContainNullcheckLocalVariableassertNotNullcheckNullabilityAssertioncheckPropertyAccessorgetSuperCallLabelTargetfindInterfaceMembervisitRequirevisitModule!computeSuitableDescriptorAndError(reportOnAnnotationWithNonSourceRetentionisSpecialStaticPropertygetContainingKtFileisOuterForLoopRangeVariable
checkNamedisApiVersionIsAtLeastisInInterface*getBytecodeVersionIfDeserializedDescriptorgetConcreteDeclarationForInlinedoCheckgetContainingVirtualFile	canRename	getRanges!reportErrorsOnPositionedArguments4getJavaAnnotationCallValueArgumentsThatShouldBeNamedreportOnValueArgumentreportDeprecatedJavaAnnotationfindSectionByTag&checkSpecializationInCompatibilityMode checkJvmCompatibilityAnnotationsfindPossibleClashMembercheckPossibleClashMemberfindOneOfModifiersareRecordsAllowedfindInaccessibleJavaClassesfindInaccessibleJavaClassesRecdoIfNotNullgetDefaultSectionenhancementFromKotlinmustNotBeNull+findTypeParameterWithWrongBoundsNullabilitydoCheckType)isNullableTypeAgainstNotNullTypeParameter*exactedExpressionTypeByDataFlowNullabilitycheckTypeParameterBoundsenhancementFromJavaisValidDalvikIdentifierisValidDalvikCharacterfindSectionByName#findFirstBadJavaSignatureOverriddenaddAllClassifiersFromScopecheckRepeatedEntriesreportProblem	checkCalldoForEachDeclarationfindStrictfpAnnotationfindJvmFieldAnnotationfindJvmSyntheticAnnotationhasPlatformDependentAnnotationhasJvmDefaultAnnotationfindJvmOverloadsAnnotation)checkIsImplementationCompiledToJvmDefaultisJvmRecordfindSynchronizedAnnotation$isCallableMemberCompiledToJvmDefaulthasJvmSyntheticAnnotationbuildProviderSamDelegationBridge
DelegationOtherOriginFromPure	SyntheticAugmentedBuiltInApiDefaultImplsOtherOriginUnboxMethodOfInlineClassErasedInlineClassOriginMultifileClassPartPackagePartMultifileClass(erasedSignaturesEqualIgnoringReturnTypesparametersDescriptorconvertTypeToKClassValuecontainsVarargshasNotTrivialSignaturecontainsAnyNotTrivialSignaturegetAllSectionsresolveLocalDeclarationgetSubjectNamediagnoseDescriptorNotFound getTopLevelClassifierDescriptors#getPackageFragmentOrDiagnoseFailuregetMemberScopeDeclaredIn"visitDestructuringDeclarationEntrygetScriptDescriptorfindClassDescriptorIfAny
getContentsetDeclarationScopeProviderlookupLocationForgetFileScopesgetImportResolvergetFileResolutionScope#createDefaultImportResolversForFilecreateScopesForFilecreateImportingScopecreateDefaultImportResolvercreateDefaultImportResolverscreateImportResolvercurrentPackageScopegetCorrespondingClassOrObjectgetClassKindgetDanglingAnnotationsgetScopeAnchorgetContainingPackageFqNameisKotlinOrNativeThrowscheckResolvedImportDirectivemakeExplicitImportsIndexedisKotlinOrJvmThrowsAmbiguityisKotlinOrJvmThrowscollectFromImportsmakeAllUnderImportsIndexedisKotlinOrNativeThrowsAmbiguitygetImportScopeisClassifierVisibleisKotlinThrowsimportsForNamefindPackageFragmentForFile,collectDescriptorsFromDestructingDeclaration"getContributedTypeAliasDescriptorsdoGetClassesdoGetPropertiesgetDeclaredPropertiesgetDeclaredFunctionstoProviderString&computeDescriptorsFromDeclaredElementsdoGetTypeAliasesdoGetFunctionssetProjectInstancecreateInheritanceScopegetStaticScopeOfCompanionObjectscopeWithGenericspackScopesOfCompanionSupertypesscopeForInitializerResolutioncomputeClassDescriptortypeParametersaddSyntheticFunctions getDataClassRelatedFunctionNames%generateFunctionsFromAnyForValueClassaddSyntheticNestedClasses0createPropertiesFromPrimaryConstructorParametersdoGetConstructors!addSyntheticSecondaryConstructorsaddDataClassMethods$resolveUnknownVisibilitiesForMembers generateSyntheticCompanionObjectcomputeExtraDescriptorsaddSyntheticVariablesresolveSecondaryConstructorsresolvePrimaryConstructordoClassifierDescriptorsgenerateDelegatingDescriptorsgenerateDataClassMethodssetDeferredReturnTypedoDescriptorsaddSyntheticCompanionObject createDeclarationProviderFactoryfilteringScopetoInfoString
putToIndexlineFailurelineSuccess
submitLinelineInfocomputeFileScopes#unrollToLeftMostQualifiedExpression"createCallableReferenceCallFactoryresolveCallcreateSimpleCallFactory!resolveAndCompleteGivenCandidatescreateFactoryresolveAndCompleteCallchoseMostSpecific$updateResultDataFlowInfoUsingEffectscompleteArgumentscompleteAllCandidatescompleteOneArgument completeResolvedCallAndArgumentscompleteCallForArgument*updateResolutionStatusFromConstraintSystemupdateSystemIfNeededcheckMissingSupertypes#getResolvedTypeForCallableReference8completeTypeInferenceDependentOnFunctionArgumentsForCallinferTypeArgumentsaddConstraintForNestedCallestimateLiteralReturnType'addConstraintForFunctionLiteralArgument!addConstraintForCallableReference,isApplicableExpectedTypeForCallableReferenceaddConstraintForValueArgument)addValidityConstraintsForConstituentTypes%addValidityConstraintsForTypeArgument#getExpectedTypeForCallableReferenceupdateResultTypeForSmartCastscompositeSubstitutoraddExpectedTypeForExplicitCastgetResolutionResultsCachedDatamakeConstantSubstitutorgetSimpleNameExpressionTypeInfocheckSelectorTypeInfo,resolveDeferredReceiverInQualifiedExpressiongetQualifiedExpressionTypeInfo.getCallExpressionTypeInfoWithoutFinalTypeCheckgetVariableTypecheckNestedClassAccessgetSafeOrUnsafeSelectorTypeInfoelementChainreportUnnecessarySafeCall!isUnderAnnotationClassDeclarationgetUnsafeSelectorTypeInforecordResultTypeInforesolveSimpleNamecanInstantiateAnnotationClassgetCallExpressionTypeInfogetResolvedCallForFunctioncheckPutisDslMarkerextractDslMarkerFqNamesreportConstraintErrorByPosition&reportCallableReferenceConstraintError8reportNotEnoughInformationForTypeParameterForSpecialCallreportSmartCast#reportNullabilityMismatchDiagnosticreportUnstableSmartCastreportConstantTypeMismatch?getSubResolvedAtomsOfSpecialCallToReportUninferredTypeParameter-getArgumentsExpressionOrLastExpressionInBlockcontainsUninferredTypeParameter"supertypesIfCapturedStarProjection+typeConstructorsWithExpandedStarProjectionscommonSuperTypeForSimpleTypesuncaptureFromSubtyping#collapseRecursiveArgumentIfPossiblefilterSupertypesuniquify(refineNullabilityForUndefinedNullabilityallCommonSuperTypeConstructorscalculateArgument(isCapturedStubTypeForVariableInSubtyping+commonSuperTypeForBuilderInferenceStubTypessuperTypeWithGivenConstructorfindErrorTypeInSupertypes$isNotNullStubTypeForBuilderInferencecommonSuperTypeForNotNullTypes+findSuperTypeConstructorsAndIntersectResultisCapturedTypeVariableisCapturedStarProjectiongetReferencedObject!getVariableResolvedCallWithAssertfilterArgsInParenthesesisParenthesizedExpressiongetResolvedCallWithAsserthasUnmappedArgumentsdeparenthesizeStructurallyasCallableReferenceExpressiongetCallWithAsserthasUnresolvedArgumentshasUnmappedParameters!getFunctionResolvedCallWithAssertallArgumentsMappedgetFirstArgumentExpressionhasTypeMismatchErrorOnParameter"extractCallableReferenceExpressiongetParentCallgetParentResolvedCallreportTrailingLambdaErrorOrgetValueArgumentListOrElementtoOldSubstitution
isSafeCallnoErrorsInValueArgumentsgetValueArgumentsInParentheses!getPropertyResolvedCallWithAssertcheckConstructedExpandedType#checkTypeInTypeAliasSubstitutionRecshouldContinue!checkOuterClassMemberIsAccessibleprocessTypeArgumentscheckValueArguments%isCandidateVisibleOrExtensionReceiver#checkVisibilityWithDispatchReceiver!checkGenericBoundsInAFunctionCall$smartCastValueArgumentTypeIfPossiblecanBeSubtypecheckReceiverscheckExpectedCallableTypecheckValueArgumentTypesgetReceiverSupercheckAllValueArguments,checkGenericBoundsInTypeAliasConstructorCall!performResolutionForCandidateCallcheckExtensionReceivergetDeclaringClasscheckReceiverTypeErrorinsideScriptisCandidateVisiblecheckVisibilityWithoutReceivertryNotNullableArgumentcheckAbstractAndSupercheckDispatchReceiverisOrOverridesSynthesizedgetEffectiveExpectedType#getParameterArgumentsOfCallableTypereportOnElement)createResolutionCandidatesForConstructorsgetReturnTypeForCallablereplaceReturnTypeByUnknownhasUnknownFunctionParameterreplaceTypesgetErasedReceiverType.arrayAssignmentToVarargInNamedFormInAnnotation'checkForConstructorCallOnFunctionalType)isInvokeCallOnExpressionWithBothReceivers,arrayAssignmentToVarargInNamedFormInFunctionhasUnknownReturnType)getEffectiveExpectedTypeForSingleArgumentreplaceReturnTypeForCallableisConventionCallisBinaryRemOperator(hasReturnTypeDependentOnUninferredParamsgetSuperCallExpressionfilterOutTypeParametersisInvokeCallOnVariablehasBothReceiversgetImplicitReceivershasSafeNullableReceivergetImplicitReceiverValueisNotSimpleCallmakeNullableTypeIfSafeReceiverhasThisOrNoDispatchReceivergetArgumentByParameterIndextoResolutionStatusisNewNotCompleted getDispatchReceiverWithSmartCastgetExplicitReceiverValueisLowPriorityFromStdlibJre7Or8'getValueParametersCountFromFunctionType,createValueParametersForInvokeInFunctionTypegetExplicitDispatchReceivercreateReceiverArgumentgetExplicitExtensionReceiversetAnalyzedresultCallAtomtransformToPostponedcompletedDiagnosticsetEmptyAnalyzedResultscheckReceiverInvariantscheckCallInvariantsrecordMatchStatusreplaceValueParameterisReallySuccessmarkCallAsCompletedgetTracehasNonTrivialAdaptation$createCallableReferenceCallCandidatetoCallableReceiverisReturnTypeNonUnitSafecreateCallableProcessoraddErroraddDiagnosticIfNotNull&registerArgumentWithConstantConversion%registerArgumentWithSuspendConversion"registerArgumentWithUnitConversion!registerArgumentWithSamConversionfilterErrorDiagnosticsasDiagnosticasDiagnosticsmissingReceiverunresolvedReferencebindReferencenoneApplicablenoValueForParameterbindCall%nestedClassAccessViaInstanceReferenceabstractSuperCallunexpectedError unresolvedReferenceWrongReceivercannotCompleteResolvewrongReceiverTypenoReceiverAllowedinstantiationOfAbstractClassinvisibleMemberbindResolvedCallgetFunctionTypecreateDynamicDescriptorScope&createDynamicDispatchReceiverParameterisAugmentedAssignmentConventioncreateDynamicFunctioncreateDynamicPropertyisSynthesizedInvoke5createSynthesizedFunctionWithFirstParameterAsReceivercreateSynthesizedInvokescreateSimpleProcessorcreateVariableProcessor'createProcessorWithReceiverValueOrEmptycreateFunctionProcessor.createSimpleProcessorWithoutClassValueReceivercreateSimpleFunctionProcessorcreateCandidates createVariableAndObjectProcessorresolveParametersTypescreateSimplePSICallArgumentprocessFunctionalExpressionresolveContextReceiversTypessetResultDataFlowInfoIfRelevantcheckNoSpreadtoKotlinCall resolveDispatchReceiverForInvokeareAllInapplicableisRecursiveVariableResolutionresolveValueArgument$createReceiverValueWithSmartCastInfocreateReceiverCallArgument+runResolutionAndInferenceForGivenCandidateshandleErrorResolutionResultrecordLambdasInvocationsresolveToDeprecatedMod%transformManyCandidatesAndRecordTracerefineNameForRemOperatorresolveTypeArgumentsareAllFailedresolveReceivertoKotlinCallKindrunResolutionAndInference!clearCacheForApproximationResultsrecordResultInfo)areAllFailedWithInapplicableWrongReceiverexpandContextForCatchClause"convertToOverloadResolutionResults)createCallableReferenceKotlinCallArgumentresolveArgumentsInParenthesiscreateParseErrorElementcreateResolutionCallbackscheckCallWithAdditionalResolverecordEffectscalculateExpectedTypehasInvokeProcessorscreateVariableInvokeProcessor)createCallTowerProcessorForExplicitInvokeregisterComponentmayDataBeApplicablecreateInvokeProcessor%getExtensionInvokeCandidateDescriptorprocessVariableGroupgetScopesWithInfoaddNestedInferenceSessionresolveCandidatesmarkAsReported!isSuccessfulPreserveCompatibilityrunWithEmptyTowerDatapushCandidates
runResolveaddLevelForImportingScopegetSuccessfulCandidatesprocessImplicitReceiveraddLevelForLexicalScopeisSuccessfulCandidateprocessContextReceiverGroupcreateNonLocalLevelsprocessTowerDatagetFinalCandidatesprocessImportingScopeaddLevelForContextReceiverGroupaddLevelmayFitForNameprocessLexicalScopeprocessScopes
buildInstrconvertToOverloadResultscreateTowerProcessorcreatePreviousResolveError$transformToReceiverWithSmartCastInforunResolutionForGivenCandidatesisCallWithSuperReceivercreateDiagnosticsForCandidate'reportResolvedUsingDeprecatedVisibilityappendFunctionTypeDeclaration
appendDataallCandidatesResultappendTableappendBlockTypeappendGlobalappendExportcheckInfixAndOperatorappendModuleFieldReference$allScopesWithImplicitsResolutionInfogetResultApplicabilitymakeFakeValueArgumentupdateReceiverValuecompleteCallableReference!completeCallableReferenceArgumentcompleteCallableReferenceCallcompleteExpression(replaceFunctionTypeArgumentsByDescriptor4extractCallableReferenceResultTypeInfoFromDescriptor!updateCallableReferenceResultTypecompleteLambdaclearPartiallyResolvedCall#substituteFunctionLiteralDescriptorsubstituteAndApproximatesetOutTypeIfNecessarycompleteAllcompleteCollectionLiteralCalls)isCallableReferenceWithImplicitConversioncompleteResolvedCall+extractDiagnosticsFromPartiallyResolvedCallcheckMissingReceiverSupertypescompleteSubCallArgument,recordArgumentAdaptationForCallableReferenceappendHeapTypefindCommonParentgetLastDeparentesizedExpressionfindResultTypeappendStartFunction constantCanBeConvertedToUnsignedcreateCallArgumentappendStructTypeDeclarationappendLimitsappendImmediateappendMemoryappendWasmModuleappendImportedFunction	appendTagappendDefinedFunctionappendArrayTypeDeclarationappendInstrappendLocalReferencegetResolvedPsiKotlinCallforceResolution!collectErrorCandidatesForVariablegetWrongResolutionToClassifierasClassifierCall!collectErrorCandidatesForFunction+getArgumentTypeForConstantConvertedArgumentoriginalPosition4calculateExpectedTypeForConstantConvertedArgumentMap0calculateExpectedTypeForUnitConvertedArgumentMap setSmartCastDispatchReceiverType3calculateExpectedTypeForSuspendConvertedArgumentMap/calculateExpectedTypeForSamConvertedArgumentMap,updateExtensionReceiverWithSmartCastIfNeededcollectErrorPositions*calculateExpectedTypeForConvertedArguments*getExpectedTypeForSuspendConvertedArgument'getExpectedTypeForUnitConvertedArgument&getExpectedTypeForSamConvertedArgumentupdateDiagnosticsaddDatacreateValueArguments
appendTypeupdateResultingDataFlowInfosubstituteReceiversgetResultInfosubstitutedResultingDescriptor"getSubstitutorWithoutFlexibleTypesupdateArgumentsMapping)substituteInferredVariablesAndApproximateupdateValueArguments'withNullabilityFromExplicitTypeArgument'createStubResolvedCallAndWriteItToTracetransformAndReportcreateOrGetonlyTransformreportCallDiagnostic$getResolvedCallForArgumentExpressionrunCallCheckerstransformToResolvedCallkeyForPartiallyResolvedCallrunAdditionalReceiversCheckersrunArgumentsChecksupdateRecordedTypeforwardCallToInferenceSessionisAmbiguityisIncompletegetResultingCallgetResultingCallsisSingleResultgetAllCandidatesgetResultCode#getContributedFunctionsAndIntercept&getContributedFunctionsAndConstructors.getContributedObjectVariablesIncludeDeprecatedsmartCastReceiver#getContributedVariablesAndInterceptgetInnerConstructorsgetContributedObjectVariablesgetFakeDescriptorForObject"getClassifierFromMeAndSuperclassesgetConstructorsOfClassifiergetCandidatescollectMemberscreateCandidateDescriptorgetClassWithConstructors!createOverloadingConflictResolver#isValueParameterTypeNotLessSpecificcreateFromCallableDescriptor"createForPossiblyShadowedExtensioncreateFromReflectionTypeshouldCheckPropertyGettercheckCallImplicitReceiver"isNotLessSpecificCallableReference,isNotLessSpecificCallableReferenceDescriptornewResolvedCallSetisDefinitelyMostSpecificisMostSpecific tryCompareDescriptorsFromScriptsfindMaximallySpecific,findMaximallySpecificVariableAsFunctionCallssetIfOneOrEmptycandidateDescriptoruniquifyCandidatesSet$isIdentityComparedWithImplicitBoxing(ensureNonemptyIntersectionOfOperandTypescheckIdentityEqualitycheckEquality*checkIdentityOnPrimitiveOrInlineClassTypescontainsArrayOfNothingisTypeOfisUnderscoreOnlyNamecheckCallElementcheckSimpleNameUsageisInfixWithRightFun&hasFormOfSuspendModifierForLambdaOrFunisInfixWithRightLambdareferencedName#hasNoArgumentListButDanglingLambdassameInstanceisBuiltInCoroutineContextcheckCoroutinesFeature"isScopeForDefaultParameterValuesOfisRestrictsSuspensionReceiverisIntOperatorcheckArgumentImpl!warnAboutDeprecatedOrForbiddenModcheckNotErrorOrDynamic$isWrongCallWithExplicitTypeArguments(shouldWarnAboutDeprecatedModFromBuiltInscheckModConventionisOperatorMod
getCheckercontainsEntryWithNameisQualifierForgetSubResolvedAtomsToAnalyze)findFunctionsWithImplicitNothingAndReportisDelegationContext$checkByReturnPositionWithoutExpectedgetResolvedCallAtomisOwnTypeParameter"checkAgainstNotNothingExpectedType(checkAssignmentOfSingleElementInFunction*checkAssignmentOfSingleElementInAnnotation&checkAssignmentOfSingleElementToVarargcheckNonLocalReturnisInsideCallcheckNotInDefaultParameter checkLambdaInvokeOrExtensionCallgetCalleeDescriptorcheckCallWithReceiverisKPropertyClassisAllowedKClassMemberisReflectionSourceisValueOrPrimitiveisForLoopParameterisValInWhenisLhsOfAssignment
isArgumentgetCaptureKindfindDestructuredVariable+checkFieldInExactlyOnceLambdaInitializationisCatchBlockParameterisCapturedVariablecheckCapturingInClosureisCrossinlineParametergetCalleeDescriptorAndParameterisExactlyOnceContractisExactlyOnceParameterisBackingFieldAccessibleisComputingDeferredType!addEqualityConstraintIfCompatible addSubtypeConstraintIfCompatibleaddConstraintIfCompatibleisConstraintCompatibleisSubtypeConstraintCompatibledescriptorToVariablegetNestedTypeParametersfilterConstraintsOut*newTypeInferenceOrParameterConstraintError registerTypeVariableIfNotPresent)extractTypeForGivenRecursiveTypeParameter+hasRecursiveTypeParametersWithGivenSelfType!buildAbstractResultingSubstitutor5buildNotFixedVariablesToNonSubtypableTypesSubstitutorisRecursiveTypeParametertoHandleincorporateBoundaddConstraintFromBoundsgenerateNewBoundaddNewBound'getValidityConstraintForConstituentTypeisStrongisParameterderivedFromvalueParameterPositionsatisfyInitialConstraintsgetParameterToInferredValueMapgetSubstitutorgetKotlinClassifier
hasPackageisFromSourceCodeInScopebuildResultingSubstitutorsubstituteAndApproximateTypesaddSubsystemFromArgumentisExpectedTypePositioncomputeClassIdforSpecificity&generateTypeParameterCaptureConstraintsimplifyConstraintdoAddConstraintstoreSubstitutorisProperassertSubtypesimplifyTypenoCorrespondingSupertypegetMyTypeVariable createTypeForFunctionPlaceholdercaptureassertEqualTypeConstructorsisErrorOrSpecialTypestoreInitialConstraintassertEqualTypesgenerateTypeParameterBoundgetBuilderInferenceData
initSystemtoNewVariableType isGoodCallForOldBuilderInferencegetTypeTemplateisResultWithBuilderInferencereportInferenceResultbadCallHappenedisTrivialConstraintcontainsTypeTemplateforceInferenceForArgumentsanalyzeBuilderInferenceCallgetArgumentTypeInfocheckExpectedTypeForArgumentcheckBuilderInferenceCallssimplifyConstraints.isLowerAndFlexibleTypeWithDefNotNullLowerBoundsimplifyEqualityConstraintsisUsefulConstraintnewConstraintIsUseless:isStrongerThanLowerAndFlexibleTypeWithDefNotNullLowerBoundgetProjectedInputCallTypesremoveLastConstraintssimplifyLowerConstraintsremoveConstrainscommonSupertypeForNumberTypescomputeValuesfilterBoundscheckOnlyInputTypesgetIntersectionOfSupertypestryPossibleAnswersetFixedcheckConstraintisUpperasStringWithoutPositionisLowerhasInapplicableCall#findAllParentBuildInferenceSessionsinitializeCommonSystemextractCapturedTypesTofindParentBuildInferenceSessiongetUsedStubTypesfindTopLevelTracearePostponedVariablesInferredanyReceiverContainStubType!clearCallsInfoByContainingElementsubstituteNotFixedVariablesisTopLevelBuilderInferenceCallcreateResolvedAtomCompleterextractCommonCapturedTypesgetCurrentSubstitutorisInLHSOfDoubleColonExpressioncompleteDoubleColonExpressionupdateAllCalls%getNotFixedToInferredTypesSubstitutor
updateCall!updateExpressionDescriptorAndTypecreateNonFixedTypeToVariableMaptypeForTypeVariableforAllMyTypeVariablescomputeRelatedToTopLevelTypeisVariableRelatedToTopLevelTypeareVariablesDependentShallowly isVariableRelatedToAnyOutputType%addConstraintEdgeForShallowDependencygetDeeplyDependentVariablescomputeConstraintEdgescomputePostponeArgumentsEdgesaddPostponeArgumentsEdgescomputeRelatedToAllOutputTypesgetShallowlyDependentVariablesaddAllRelatedNodesgetPostponeEdges"addConstraintEdgeForDeepDependencygetConstraintEdgesapproximateTo#substituteAndApproximateIfNecessarycheckOnlyInputTypesAnnotationpostponeOnlyInputTypesChecksubstituteMissedConstraintscloseTransactionisProperTypeImpl-doPostponedComputationsIfAllVariablesAreFixed
checkStatecheckMissedConstraintsprocessForkPointDatatransactionRegisterVariableisSelfTypeConstraintcontainsTypeVariable$variableHasProperArgumentConstraints$areAllProperConstraintsSelfTypeBasedgetTypeVariableReadinessfindFirstVariableForFixation!isTypeVariableHasProperConstraint%extractProjectionsForAllCapturedTypes!hasDependencyToOtherTypeVariables<variableHasOnlyIncorporatedConstraintsFromDeclaredUpperBound(variableHasTrivialOrNonProperConstraintsfindTypeVariableForFixationisProperArgumentConstraint*variableHasLowerNonNothingProperConstraint#processConstraintsIgnoringForksDataextractForkPointsDataaddPossibleNewConstraintrenderBaseConstraintfixedTypeVariablerunIsSubtypeOfupdateAllowedTypeDepthaddInitialSubtypeConstraintprocessConstraintsshouldWeSkipConstraint,addInitialEqualityConstraintThroughSubtypingextractAllConstraintsaddInitialEqualityConstraintisAllowedTypeisCapturedTypeFromSubtyping%addEqualityConstraintAndIncorporateIt$addSubTypeConstraintAndIncorporateIthasConstraintsToProcess$setConstrainingTypesToPrintDebugInfo2addNewIncorporatedConstraintFromDeclaredUpperBoundprocessMissedConstraintsprocessGivenConstraintsisNotInterestingConstraintisGeneratedConstraintTrivialisSuitableResultedTypecontainsOnlyNonNullableNothingextractParameterTypesInfocreateTypeVariableForReturnTypebuildNewFunctionalExpectedType&computeTypeVariablePathInsideGivenTypewrapToTypeWithKind$fixNextReadyVariableForParameterType findFunctionalTypesInConstraints,fixNextReadyVariableForParameterTypeIfNeededextractFunctionalTypes%computeResultingFunctionalConstructor-collectParameterTypesAndBuildNewExpectedTypes&computeParameterInfoFromRelatedLambdas/considerExtensionReceiverFromConstrainsInLambda:getDeclaredParametersConsideringExtensionFunctionsPresence getAllDeeplyRelatedTypeVariablesselectFirstRelatedVariable createTypeVariablesForParameters"createTypeVariableForParameterType#getVariablesFromRevisedExpectedType&analyzeArgumentWithFixedParameterTypes(findPostponedArgumentWithFixedInputTypes3findPostponedArgumentWithFixedOrPostponedInputTypes!analyzeNextReadyPostponedArgument.findPostponedArgumentWithRevisableExpectedTypehasLambdaToAnalyze,analyzeRemainingNotAnalyzedPostponedArgumentgetDefaultTypeForSelfTypeisSuitableType%checkSingleLowerNullabilityConstraintfindSuperTypemakeFlexibleIfNecessary
resultType%representativeFromEqualityConstraintstoPublicTypefindResultTypeOrNullsinkIntegerLiteralTypescomputeCommonSuperType#findResultIfThereIsEqualsConstraintprepareLowerConstraintsfindSubType specialResultForIntersectionTypesetupDirectionsisInterestingConstraintenterToNode	visitTypegetConstraintDependenciesgetDirectionassertFlexibleTypeVariableinternalAddSubtypeConstraintextractTypeForProjectedTypeisTypeVariableWithNoInferisTypeVariableWithExactisSubtypeOfByTypeCheckeranyBound0simplifyConstraintForPossibleIntersectionSubTypecorrectSuperTypesimplifyUpperConstraintassertInputTypessimplifyLowerConstraintextractTypeVariableForSubtypecorrectSubType
bothBoundsgenerateNewConstraint&approximateIfNeededAndAddNewConstraintinsideOtherConstraintdirectWithVariableareThereRecursiveConstraintsaddNewConstraint&isPotentialUsefulNullabilityConstraintincorporatecomposeWithsubstituteParametrizedTypeupdateNullabilitysubstituteTypeEnhancementcreateCompositeSubstitutor.throwExceptionAboutInvalidCapturedSubstitutionsubstituteArgumentProjectionreportSmartCastOnReceiverreportSmartCastsreportAdditionalDiagnosticscreateSmartCastDiagnosticneedCompatibilityResolveForSAM hasNonAnalyzedLambdaAsReturnTypeisJavaParameterCanBeConvertedgetInputTypesOfLambdaAtom<chooseCandidateRegardingOverloadResolutionByLambdaReturnTypesubstitutedReflectionTypesubstitutedReturnType!addExpectedTypeFromCastConstraintprepareCandidateForCompletioncheckSamWithVararg"propagateLambdaAnalysisDiagnosticsisErrorCandidatecreateAllCandidatesResultmapTypeArgumentsunexpectedArgumentcheckExpectedParameter(isArrayAssignedAsNamedArgumentInFunction*isArrayAssignedAsNamedArgumentInAnnotation&checkUnsafeImplicitInvokeAfterSafeCallresolveKotlinArgument2createKnownParametersFromFreshVariablesSubstitutorshouldRunConversionForConstants chooseExtensionReceiverCandidate-getReceiverArgumentWithConstraintIfCompatiblefindContextReceiverhasErrorexpectedOrActualTypeforFunctionalTypeaddLhsTypeConstraintaddConstraintsaddReceiverConstraint'extractInputOutputTypesFromFunctionType(performCompositeConversionAfterSubtypingperformConversionAfterSubtyping performConversionBeforeSubtyping)performCompositeConversionBeforeSubtyping
orExpectedresolveKtPrimitive	requireIsextraLambdaInfo#preprocessCollectionLiteralArgumenthasUnitOrSubtypeReturnTypeisUnitOrSubtypeOrVariableisUnitOrSubtypeunstableSmartCastOrSubtypeErrorcheckSubCallArgumentcheckSimpleArgumentcheckExpressionArgument processCallableReferenceArgumentbuildResolvedKtArgument#getOverriddenParameterWithOtherNameprocessArgumentsInParenthesisNewConstraintSystemImplprocessPartprocessParts	getSystemgetReceiverValueWithSmartCastisComplexExpressionhasNoWritersInClosurespropertyKind&isAccessedInsideClosureAfterAllWritersisDeclaredInAnotherModulevariableKind!isAccessedBeforeAllClosureWritersareCompiledTogetherisAccessedInsideClosurehasDefaultGetterisInvisibleFromOtherModulesfindReceiverByLabelOrGetDefault	qualifiedgetIdForImplicitReceivergetIdForThisReceivergetIdForSimpleNameExpressiongetIdForStableIdentifierpostfixgetSmartCastReceiverResultupdateSmartCast%getSmartCastVariantsExcludingReceiverrecordCastOrErrorcheckAndRecordPossibleCastgetSmartCastVariants.getSmartCastReceiverResultWithGivenNullability&getKotlinTypeWithPossibleSmartCastToFPgetKotlinTypeForComparisongetVariadicArgumentsdecodeThrowsFilterisGlobalClassWithIdfindInheritedThrowshasUnresolvedArgumentsRecursivecheckInheritancemakeReallyNotNullIfNeedednewTypeInfoBuilderintersectConsideringNothingputNullabilityAndTypeInfocontainsNothing%approximateDefinitelyNotNullableTypescanBeDefinitelyNotNullOrNotNullequateOrDisequateisInlineWithReifiedhasInlineOnlyAnnotationcheckHasInlinableAndNullabilitycheckModalityAndOverridescheckDefaultscheckInlinableParametercheckDefaultValuenotSupportedInInlineCheckcheckMayWritehandleConflictingOverloadshandleRedeclarationvariableOrClassDescriptorByNamedescriptorByIndexaddVariableOrClassDescriptortoDescriptorsfunctionsByNameaddFunctionDescriptorInternaladdDescriptor$prepareReceiverRegardingCaptureTypeshasTypesFromSmartCastsfindFirstFromMeAndParentcollectDescriptorsFilteredcanBeResolvedWithoutDeprecationfindVariablecollectFromMeAndParentchainImportingScopesfindLocalVariablefindFirstFromImportingScopesgetImplicitReceiversHierarchyprocessForMeAndParentcreateScopeForDestructuringgetDeclarationsByLabelreplaceImportingScopes(findFirstClassifierWithDeprecationStatusaddImportingScopecollectVariablesaddImportingScopescollectAllFromMeAndParentcollectAllFromImportingScopesmemberScopeAsImportingScopegetPsi#inferPrimitiveNumericComparisonTypegetStableTypesForExpressionisStandardComparison$findPrimitiveOrNullablePrimitiveType
extraCheckcheckOptInUsagecheckMarkerTargetsAndRetention$hasExperimentalOverriddenDescriptorsincompatibilityDiagnosticFor*checkTypeParameterDescriptorsAreNotReifiedisUsageAsAnnotationOrImportbuildDefaultDiagnosticMessagebuildOverrideMessagebuildMessagePrefixisForbiddenReturnTypeisResultClassisResultTypecheckClassifierUsages+getClassifierUsedToReferenceCompanionObjectgetReferencedClassifiersrunCheckersWithTargetisUsageAsQualifierisDeclarationAnnotatedWith%checkUsageOfKotlinExperimentalOrOptInisElementAnnotatedWithOptInisExperimentalityAcceptedanyParentMatchescheckCompilerArgumentscheckAnnotationgetDefaultDiagnosticMessageisUsageAsOptInArgument"findRelevantDataClassPropertyIfAny!getActualAnnotationParameterValue(checkExpectedDeclarationHasProperActualsreportExpectActualhasNoActualWithDiagnostic+checkExpectedDeclarationHasAtLeastOneActual*checkExpectedDeclarationHasAtMostOneActualisActualOrSomeContainerIsActualreportMissingActualModifiergetOptionalExpectationEntry(publicReturnTypeShouldBePresentInApiModeisKotlinTestAnnotationmakeCollectionOfAnyTypeisNullableSafeCallReceiver#isParameterAcceptableForInlineClassgetCheckedSinceVersion
lessOrNullreportIncorrectInline buildSubstitutedReceiverArgument/reportStubTypeCausesAmbiguityOnReceiverIfNeededprocessResolutionAmbiguityError0reportStubTypeCausesAmbiguityOnArgumentsIfNeededcheckSingleAbstractMemberisKClassWithBadArgumentcheckCanBeConst
canBeConstnonApplicableanalyzeExpressionanalysisCompletedwithLinkageErrorLogger&generateSyntheticSecondaryConstructorsaddSyntheticSupertypesgenerateSyntheticPropertiesgetSyntheticPropertiesNamesgetSyntheticNestedClassNames$getPossibleSyntheticNestedClassNamesevalBinaryOpevalUnaryOpcheckBinaryOpdeprecationByOverriddengetOwnDeprecationscreateVersiondeprecationsByConstituentTypesgetDeprecations"getDeprecationByVersionRequirementaddDeprecationIfPresent%areDeprecationsInheritedFromOverriden(shouldSkipDeprecationOnKotlinIoReadBytes"getHiddenDeprecationsFromOverridengetDeprecationFromUserDataadditionalMessagecreateOperationArgument%createCompileTimeConstantForCompareToevaluateBinaryshouldSkipComplexBooleanValue%checkExperimentalityOfConstantLiteralisIntegerTypecheckCompileTimeConstant'createConstantValueForArrayFunctionCall"createCompileTimeConstantForEquals&getArgumentExpressionsForArrayLikeCall!checkAccessibilityOfUnsignedTypesgetCompileTimeType"createOperationArgumentForReceiver.getArgumentExpressionsForCollectionLiteralCall-createConstantValueForUnsignedTypeConstructorevaluateCallhasIntegerLiteralTypecanBeUsedInAnnotationisZero$checkInnerPartsOfCompileTimeConstant"reportDeprecationWarningOnNonConstisComplexBooleanConstantisPropertyCompileTimeConstantgetPossiblyErrorConstantupdateNumberTypeevaluateUnarycreateSimpleIntCompileTimeConstevaluateExpressionresolveAnnotationValueArgumentsresolveAnnotationArgumentsevaluateUnaryAndCheckisDivisionByZerogetReceiverExpressionTypecreateCompileTimeConstant createIntegerCompileTimeConstant"getArgumentExpressionsForArrayCallevaluateBinaryAndCheckusesVariableAsConstant%isTypeParameterOrArrayOfTypeParameterisPureConstanttypeStrToCompileTimeTyperesolveArgumentsisArrayPassedInNamedForm(createOperationArgumentForFirstParameterusesNonConstValAsConstantcreateStringConstantisStandaloneOnlyConstantevaluateToConstantValue+deprecatedByAnnotationReplaceWithExpressioncreateDeprecationDiagnosticdeprecatedByOverriddenMessagegetSinceVersion$computeLevelForDeprecatedSinceKotlinreadonlyViewgetOwnDiagnosticsgetReadonlyViewonTheFlyDiagnosticsCallbacksetCallbackgetDiagnosticSuppressKeyisSuppressedByExtensionshouldGenerateExpectClassallModulesProvidingExpectsForapplyFilteronlyFromThisModuleallModulesProvidingActualsFor
incCountergetModificationCountrecordDataFlowInfogetTargetFunctiongetEnclosingFunctionDescriptorgetReferenceTargetsisUsedAsStatementrecordScopegetAbbreviatedTypeOrTypegetEnclosingDescriptorgetDataFlowInfoAfter getParentOfTypeCodeFragmentAwaregetDataFlowInfoBeforegetTargetFunctionDescriptorisUsedAsExpression6createSoftlyRetainedMemoizedFunctionWithNullableValues$createSoftlyRetainedMemoizedFunctioncreateSafeTracefindClassifiersFromModulegetAllClassifiersfindAnyActualsForExpected areCompatibleTypesViaTypeContextfindCompatibleExpectsForActualfindNamesakesFromModule#areCompatibleTypesViaTypeRefinement findCompatibleActualsForExpectedfindActualsfindExpectedForActualfindActualForExpectedenumEntriesfindExpectsfindCorrespondingLightClass'createLightClassForDecompiledKotlinFile!createClsJavaClassFromVirtualFilegetClassRelativeName'getLightClassForDecompiledClassOrObject%findMethodsAndTheirSubstitutorsByNamefindMethodsBySignature!getAllMethodsAndTheirSubstitutorsgetExtendsListTypescreateDummyPackageFragmentcreateDummyModuleshouldDecompileBuiltInClass
getCharsetgetDefaultExtensionisBinarygetContentsgetLabelForBuiltInFileType*createIncompatibleAbiVersionDecompiledText"DeserializerForClassfileDecompilerreadFileSafelyhasDeclarationWithKeyonContentReload
addToIndexbuildDecompiledTextForClassFile"appendDecompiledTextAndPackageName defaultDecompilerRendererOptionsisConsideredSyntheticappendDescriptornewlineExceptFirsttoStringKeygetDeclarationForDescriptorgetBuiltinsDescriptorKeycreateTypeAliasStubtryParseParametersAndReturnTyperelativeClassNameexcludeParametersFromDescriptordesccreateValueParameterListcreateDeclarationsStubscreatePackageDeclarationsStubsdoCreateCallableStubcreateReceiverTypeReferenceStubcreateReturnTypeStub*createClassOrObjectStubAndModifierListStubcreateCompanionObjectStubcreateCallableMemberStubscreateEnumEntryStubsdoCreateClassOrObjectStubcreateDelegationSpecifierListcreateModifierListForClasscreateNestedClassStubcreateInnerAndNestedClassesisClasscreateClassBodyAndMemberStubscreateHeaderInfogetKotlinBinaryClassgetKotlinBinaryFromCachekotlinJvmBinaryClasstoLightHeaderisKotlinJvmCompiledFilegetKotlinBinaryClassHeaderDatacreateAnnotationStubscreateStubForPackageNamerecCreateStubForPackageNamecreatePackageFacadeStubcreateEmptyModifierListStub$createIncompatibleAbiVersionFileStubcreateMultifileClassStubcreateStubForTypeNamecreateFileFacadeStub$createModifierListStubForDeclarationcreateTopLevelClassStubrecCreateStubForTypecreateTargetedAnnotationStubssetupFileStub isKotlinWithCompatibleAbiVersiontoProjectionKindcreateTypeParameterListStubcreateTypeReferenceStubisDefaultUpperBoundcreateTypeConstraintListStubcreateFunctionTypeStubgetTypeModifiersAsWrittencreateClassReferenceTypeStubcreateTypeArgumentListStubcreateTypeAnnotationStubscreateTypeParameterStubcreateValueParameterListStub#createTypeParameterModifierListStubnullableTypeParentcreateDefinitelyNotNullTypeStubisKotlinInternalCompiledFilefindMultifileClassPartsreadBooleanAttributewriteEnumAttributewriteBooleanAttributereadEnumAttributemoduleDescriptorInvalidatedgetModifierscreateBooleanFlagToModifierfileModificationTrackerdoBuildFileStubcreateStubBuilderComponentswritersisVersionedcompilationErrorthrowIfErrorcollectAllExpectedByModulesassertModuleDependencyIsCorrectunwrapPlatformcreateModificationTrackergetTargetPlatformgetLibraryRootsonResolverComputedresolverForModulegetLanguageVersionSettingscreateOracle!configureCommonSpecificComponents"createContainerToResolveCommonCode
sourcesJar!allClassesWithIntrinsicCompanionsdoGetDescriptorForModule,errorInModulesResolverWithScriptDependenciessetupModuleDescriptorisCorrectModuleInfoerrorInScriptModuleInfoResolver%isResolverForModuleDescriptorComputedcheckModuleIsCorrecttoLightAnnotationisOutOfDateerrorInModulesResolverresolverForModuleDescriptorImpl
otherErrorerrorInLibrariesResolverrenderResolverModuleInfosgetAndAddLazyisJvmStaticisHiddenByDeprecation errorInSpecialModuleInfoResolver%errorInModulesResolverWithLibraryInforecreateModuleDescriptor$errorInModulesResolverWithEmptyInfoserrorInSdkResolver,computeQualifiedNameForNullabilityAnnotation%errorInScriptDependenciesInfoResolver
ownMethodsgetElementIconcreateModuleDescriptorrenderResolversChainContentscreateNoCachecertainlyDoesNotExistgetAdditionalCapabilitiesgetByShortArrayNamegetByShortNamefqNameUnsafegetKSuspendFunctionNamegetKFunctionClassIdgetKFunctionFqNamecollectionsFqNamegetSuspendFunctionClassIdgetSuspendFunctionNamerangesFqNamegetFunctionClassIdgetKSuspendFunctionClassIdgetPrimitiveFqNameannotationNamecreateImplementsListgetLightClassCachedValueaddKotlinToJavaisJavaPlatformClass$mapJavaToKotlinIncludingClassMappingcomputeModifiersmapKotlinToJavagetLightClassDataHoldermutabilityMappingaddJavaToKotlinisKotlinFunctionWithBigArityaddTopLevelgetSuspendFunctionisSerializableInJavabuildPrimitiveValueMethodsSet#buildPrimitiveStringConstructorsSetfindLightClassDatacreateExtendsListparseClassNamebyClassNamePrefixnumberedClassNamelightMethodnewDiagnosticunexpectedDiagnosticwrongParametersDiagnosticmissingDiagnosticisConstOrJvmFieldclearTextFromDiagnosticMarkupclearFileFromDiagnosticMarkupreportIfDynamicCallpreProcessReference
isJvmFieldmarkDebugAnnotationsgetLiteralValuegetReferenceElementsgetCanonicalTextreportIfDynamicbindToElementhandleElementRenameasTextDiagnosticcomputeInferenceCompatibilityextractDataBeforeparseDiagnostic
appendListasMutableListapplyOptionsFromcliPluginUsageStringparsePluginOptiongetPluginOptionStringgetCallDebugInfohasExplicitDefinitionOnlyOptiongetTypeOfCallunexpectedDiagnosticsgetTypeInforenderDiagnosticsByFactoryListgetSortedDiagnosticDescriptorscompareDiagnosticsopenDiagnosticsStringaddDiagnosticMarkersToTextsafeAdvance#getDiagnosticsIncludingSyntaxErrorsgroupDiagnosticsByTextRangecloseDiagnosticStringparseDiagnosedRangesdiagnosticsDiffmissingDiagnosticscompareTextDiagnosticrenderDiagnosticsgetDebugInfoDiagnostics$getActualSortedDiagnosticDescriptorsassertSameFilecreateTopDownAnalyzerForJscreateContainerForJSconfigureModule"configureStandardResolveComponents&configurePlatformIndependentComponentscreateContainerForLazyResolve-createContainerForLazyLocalClassifierAnalyzercreateContainerForBodyResolveconfigureIncrementalCompilation!createContainerForLazyBodyResolve%createContainerForLazyResolveWithJava!initJvmBuiltInsForTopDownAnalysisconfigureJavaSpecificComponents initializeJavaSpecificComponentsgetPropertyFlagsgetClassFlagsbytesToStringsstringsToBytestoNameResolverserializeTotoExpandedRecordsListgetJvmMethodSignatureisMovedFromInterfaceCompanionreadNameResolverreadFunctionDataFromgetJvmConstructorSignaturewriteDataBytesreadPackageDataFromreadClassDataFromgetJvmFieldSignaturegetPredefinedStringIndexreadVersionNumberemptyBinaryDataaddTowriteMultifileFacadeNamesgetMultifileFacadeShortNameIdserializeToByteArraygetMultifileFacadeNameinternalNameOfloadMultiFileFacadeInternalNamewritePartsOutsidePackageaddMetadataPart
removePartwritePartsWithinPackagereadBuiltinsPackageFragmentgetRangeInElementisReferenceTogetExtensionOrNullgetStartOffsetInParentcreateTableBuilderfindElementAtgetPresentation)isVersionRequirementTableWrittenCorrectlyisKotlin1Dot4OrLatertraverseIdsisInstanceTypeupperBoundsabbreviatedTypeexpandedTypeinlineClassUnderlyingTypehasReceiverunderlyingTypeflexibleUpperBoundisAtMostparseVersionArraysubplatformsOfTypeisJsisCommontoTargetPlatformisMultiPlatformdeprecatedIsNativeisJvmjvmPlatformByTargetVersionsetCompilationCanceledStatusnativePlatformByTargetsnativePlatformBySingleTargetlegacySerializeToStringnativePlatformByTargetNamesgetTextOffsetshouldBeEscaped$runWithUnwrappingInvocationExceptionbuildRegistrationMaptryGetEntryresolveClashesIfAnybuildParametersForList	getOriginbuildTypeParameterListregisterSingletonregisterInstanceresolveIterablebindArgumentsbindToConstructorbindToMethoduseInstanceIfNotNull	useImplIfcomposeContainertryGetServiceuseClashResolveruseInstanceuseImplDfsVisittopologicalSortgetDescriptorsInDisposeOrderhasExplicitModifiercomposeDescriptorscollectAdhocComponentsregisterDependencyisDefaultComponent#inspectDependenciesAndRegisterAdhocadditionalConverterdisposeDescriptorinjectPropertiesgetImplicitlyDefinedDependencyregisterDisposableObjectdisposeImplgetDefaultImplementationcollectInterfacesRecursivetraverseClassgetSetterInfosgetClassInfogetConstructorInforecordDefiniteInvocationsgetDataFlowInfoForFinishedCall extractDataFlowInfoFromConditiongetContextInfoWhengetDataFlowInfoWhenEqualsgetNonTrivialComputationdataFlowEqualstoDataFlowInfotoDataFlowValueextractDataFlowStatementsgetTypeSubstitutionextractOrGetCachedgetCallArgumentsAsComputationstoComputationcontainsReturnsNullisCallWithUnsupportedReceiverapplyWithDefaultapplyIfBothNotNulldeserializeContractdeserializeConstant$deserializePossiblyConditionalEffectdeserializeSimpleEffectprintMapEntriesWithSeparatorequal
initAndAddnotEqual
notSubtypesubtypefiregetUseScopegetTextRangegetTargetTypefromStringOrNullvisitReturnExpressionfoldConditionsWithOrinvokeWithValuetoESVariablegenerateFunctionDeclaration"generateValueParameterDeclarationsgenerateEnumEntrygenerateClassgetLoopcreateEmptyIrFile	isReturnsequateValuesisSafeToProduceFalseequateCallAndConstantreduceEffectsreduceEffectinvertedcollectFromEffectcollectFromSchematoESTypeisNullConstant!generateDelegatingConstructorCallisReturnsWildcardDescriptorisImpliesCallDescriptorfirstArgumentAsExpressionOrNullisReturnsEffectDescriptorisReturnsNotNullDescriptorequalsDslDescriptorisEffectDescriptorisFromContractDslisContractCallDescriptorisInvocationKindEnumisCallsInPlaceEffectDescriptorisEqualsDescriptorunsupportedFeatureflushDiagnosticsaddFallbackErrorIfNecessarybadDescriptionparseConditionparseVariableparseEffect
parseValue$checkDuplicatedCallsEffectsAndReportparseConstantparseContractisValidEffectDeclarationparseIdentityEqualsgenerateOverridesprocessEqualsgenerateFakeOverridePropertytoInvocationKindgenerateFakeOverrideFunction%isContractDescriptionCallPreciseCheckcheckFeatureEnabledcheckContractAndRecordIfPresentparseContractAndReportErrorsgetContractDescriptionsetContractDescription	fromRangecanBeRevisitedisDefinitelyVisitedgeneratePrimaryConstructorloadIfExistsisPlatformSamTypeunwrapSyntheticJavaPropertygetParentClassStaticScopecomputeFieldVisibility createCustomSuperConstructorCall"convertContractDescriptorToFunctorinterpretVariableinterpretConditioninterpretEffectisResolvedWithSamConversionshasJavaOriginInHierarchyisVisibleOutsidesyntheticVisibilitycreateLightisPassThroughcreatePreprocessedLightFilecreatePreprocessedFile	getScopesgetSamAdaptersFromConstructorsgetSamFunctionssubstituteForReceiverTypeextensionForFunctionNotCachedgetAllSamConstructorscreateJavaSamAdapterConstructorrecordSamLookupsForParametersserializeTopLevelIrClassaddArgumentcreateTranslatorsisASpecialAnnotationhasSpecialAnnotationrefineDeclarationModality(shouldConvertFirstSAMParameterToReceiverinterceptCandidates
hashSuffix!syntheticPropertyInClassNotCachedcollectSyntheticPropertiesfindOverriddenfindByGetterOrSettercreateSyntheticPropertyHolder(syntheticPropertyHolderForBeanConvention$getSyntheticPropertyAndRecordLookupscanBePropertyAccessor collectSyntheticPropertiesByNameisGoodGetMethodisGoodSetMethod-syntheticPropertyDescriptorForRecordComponentirAndAndtransformVoidinterceptResolvedCandidatesmapUnderlyingTypevalueClassLoweringKindcreateValueClassRepresentation	addBridgeisAccessibleisVisibleIgnoringReceiverfindInvisibleMemberisVisibleWithAnyReceivercontainerRelationcreateTypeCheckerContextrelationtoVisibilitycompareLocalisBackingFieldReferenceconvertFromFlagsafterCallEndbeforeCallStartbeforeValueParametersStartgenInlineCallgenCycleStubgetDispatchReceiverForBackend&getDispatchReceiverParameterForBackendisNativeStdlibgetOtherAnnotationsgetAnnotationsForTargetisFillernonFillerFirstChildOrSelfnonFillerLastChildOrSelfclassActualTargetsmaterializeAtdiscard
jumpIfTruecheckPsiTypeConsistencyinitializeNameinitDefaultRendererjumpIfFalsehackyIsValidcreateReportergetStructFieldRefreferenceClassRTTreportOnDeclaration,reportDiagnosticOnceWrtDiagnosticFactoryList%reportTypeMismatchDueToTypeProjection3reportTypeMismatchDueToScalaLikeNamedFunctionSyntaxreportFromPluginreportOnDeclarationAsisScalaLikeEqualsBlockreportDiagnosticOncereportOnDeclarationOrFailprojectionPositiongetReferencedTypeExpressionmodifierSetPositionwarningMessage
setDefaultisSuppressedByAnnotatedisSuppressedByStringsgetOrCreateSuppressor	dominateswithAnnotationsWhitelistdeduplicatingwarning1warning3deprecationError4error1error0error3error2error4warning2warning0deprecationError3deprecationError1deprecationError2deprecationError0warning4getClassMetadatarenderKindWithName
renderKindContextDependentRendererRendererregisterFactoryfromDiagnosticrenderAmbiguousTypeParameterhasUniqueNameaddMentionedTypeConstructorcollectClassifiersFqNames"collectMentionedClassifiersFqNamesgetPartFqNameForDeserializedgetFacadeClassInternalNameisTopLevelInJvmMultifileClassgetFileClassInfoNoResolvereferenceInterfaceTablegetChildrenArrayoperationReferencecollectDescendantByTypeinitKeywordfindLastChildByTypefindParentOfTypekeywordStrategy	ifKeyword
safeAccess	byKeywordcompanionKeywordselectorfindExpressionDeep	lastChildelseKeywordtransformBlockResultTypeconstructorKeywordvalueParameterListfindDescendantByTypedotOperatorlastChildExpressionreceiverTypeReferencefirstChildExpressionuserType
lastSymbolwhenKeywordfieldKeywordsupertypesListfindFirstDescendantreferenceInterfaceIdtypeParametersListoverrideModifiernameIdentifierreferencedTypeExpressioninlineModifieraccessorNamePlaceholderfindChildByTypereturnKeywordgetAncestorstraverseDescendantsobjectKeywordfindDescendantByTypessetterhasVarvalOrVarKeywordrightParenthesistransformFieldTypegettermodifierListrenderCallInfowrapIntoQuotesrenderConstraintSystemrenderTypeBoundrenderTypesrenderParameterConstraintError,renderConflictingSubstitutionsInferenceError
asRendererdebugMessagerenderTypeVariable%renderCannotCaptureTypeParameterError=renderUpperBoundViolatedInferenceErrorForTypeAliasConstructorreferenceFunctionType&renderUpperBoundViolatedInferenceErrorrenderExpressionType$renderNoInformationForParameterErrorrenderAmbiguousDescriptorsrenderTypeBoundsreadBuildInfowriteBuildInfoprocessChangesAfterBuildreportPerformanceData"cleanOutputsAndLocalStateOnRebuildrebuildcompileIncrementallygetRemovedClassesChangesinitDirtyFilessourcesToCompilecalculateSourcesToCompileanalyzeJarFilesanalyzeHistoryFilesaddLookupSymbolsreadAbiSnapshotwriteStringArraywriteAbiSnapshot writeMessageWithNameResolverImplwriteMessageWithJvmNameResolverreadStringArrayreadDirtyDatareadDiffsFromFilewriteLookupsreadFromFilewriteDirtyDatareadLookups
reportFailreadBuildDifferencewriteFqNamesreadFqNameswriteBuildDifferencewriteToFilereferenceSignatureIdreferenceGlobaltoMutableLinkedSetaddByDirtySymbolsaddByDirtyClassesconfigureSourceRootsFromSourcesfirIncrementalCycletransformResultTypeconfigureBaseRootsregisterCacheinScope	doComputecompareJarsInternaladdProtoInforeferenceVirtualFunctionIdwithMetadataSerializercollectNewDirtySourcesreferenceClassIdwithICreferenceGcTypetransformValueParameterTypereferenceStringLiteraltransformBoxedType processChangedUntrackedJavaClassmakeIncrementallyvisitDoWhileLoopvisitWhileLoopdefineLocalreferenceLoopLeveldefineLoopLevel%processLookupSymbolsForAndroidLayoutsreferenceLocalprocessChangedJavapartsByFacadeNameremoveOutputForSourceFilesgetOutputForSourceFilesregisterOutputForSourceFileswithJsICmakeJsIncrementallyreferenceInterfaceTableAddress"referenceInterfaceImplementationIdgenerateTypeInforegisterVirtualFunctionfilterClassesToclassesFqNamesregisterInitFunction	defineRTTdefineFunctiondefineFunctionType%registerInterfaceImplementationMethodgenerateInterfaceTableregisterInterface	addExportdefineGlobaldefineGcTypedefineInterfaceMethodTableaddJsFunabiSnapshotgetBuildHistoryFilesForJargetPossibleModuleNamesForDirhistoryFilesForChangedFilesisInProjectBuildDirgetPossibleModuleNamesFromJargetBuildHistoryForDirgetHistoryForModuleNamesgetLookupSymbolsgetNonDuplicateClassSnapshots!findTransitivelyReferencedClassesfindReferencedClasses%removeDuplicateAndInaccessibleClassesshrinkClasspathshrinkClassesshrinkAndSaveClasspathSnapshotreportVerboseWithLimitsnapshotClasssnapshotMethodsnapshotField
emptyClassgetLookupNamesInScopeaddPackageMemberstoProgramSymbolSettoChangesEithertoLookupSymboladdClassMember
addClassesaddClassMembers$computeFineGrainedKotlinClassChangescheckDirtyDataNormalizationcomputeKotlinClassChangescomputeClassChangescomputeClasspathChangesfindImpactedClassesInclusivecomputeChangedAndImpactedSetcomputeImpactedSetInclusive&computeCoarseGrainedKotlinClassChangestoProgramSymbolsgetClassIdToSubclassesMapcollectClassMemberChangescollectClassChanges
afterClasskeyWasEvictedevictEntriesupdateToSoftReferencereadLockcountCacheEntriesForDebugvalueWasGarbageCollectednewTimePeriod
wasEvictedsetStrongReferencelastUsed	writeLockgetKotlinClassHeadergetInnerClassesInfoflagEnabledgetAccessFlags
hashToLongisInaccessibleisTransitivelyInaccessiblesnapshotKotlinClass)throwUninitializedPropertyAccessExceptionreadJarreadDirectoryfindInaccessibleClassesgetPackageFqNameIndex
buildProtoaddExtensionOrNullgetKjsmFilePath-createKotlinJavascriptPackageFragmentProviderhasAnnotationslabelForgetPropertyGettergetSimpleFunction
superTypesisCharSequenceisStringbuildIntisThisReceivermulororandandirCallmakeKotlinTypeputValueArgument	constTrueshallowCopy
createCallisUnsignedArraygetPrimitiveClass
isUnsignedisKFunctionisThrowable
isFunction
putDefaultcreateSignaturewithInitialIr
restrictToreferenceEnumEntryreferenceConstructorreferencePropertyreferenceSimpleFunctionresolveScopedTypeParameterenterTypeParameterScopeleaveTypeParameterScopeserializeScoperesolveNamescomputeScopesliftUsedNamesresolveTemporaryNamesprocessStatementsnewVarfunctionStartedfunctionEndedsanitizeNameloadIncrementalCacheMetadata
enterLabeldoCreateNamedeclareFreshName	exitLabelgetFieldNamewithBreakAndContinueexceptionStategenerateCodeForTestMethodgenerateTestCallsinstanceexportPropertymakePlainModuleRefaddModuleValidationwrapAmdwrapUmdwrapCommonJsmakePlainInvocation	wrapPlainrenamecreateKTypecreateKTypeParametercreateKTypeProjectioncreateSimpleKTypecreateKClassifiertryExtractFunctiongetEnumClassshouldBeExportedisUsed
isTailCallgenerateValuesFunctiongenerateValueOfFunctionisULongpackageFqNamevisitAssignmenttoFirResolvedTypeRefisMoreSpecificisVisibilityMoreSpecificisAccessorMoreSpecificselectMostSpecificMember	overridesisEqualTypes	withScopecoerceToUnitIfNeeded	toIrConst!generateOverriddenFunctionSymbolscreateTemporaryVariablegetNameForTemporarynextTemporaryIndexapproximatedcollectTypeParametersconvertPlatformVisibility"getNonBuiltinFunctionsByReturnType%defineComparisonOperatorForEachIrTypegetKPropertyClass)getNonBuiltInFunctionsByExtensionReceivergetFunctionsByKeyfindBuiltInClassMemberFunctionswithFunctiongenerateTemporaryVariableconvertToIrCalltoFirExpressiontoFirValueParameterextractTypeParametersTovisitAnnotatedExpressiontoSymboltoFirRegularClassgetCorrespondingPlatformClassconstructTypeaddStatementshouldStopAtTheLeveldropSubgraphFromCallexitFunctionCallexitCheckNotNullCallenterDoWhileLoopConditionexitResolvedQualifierNodeexitWhenExpressionexitWhileLoopexitWhenBranchConditionenterDelegateExpressionexitWhenSubjectExpressionexitTypeOperatorCallexitContractDescription	exitClassexitLocalClassexitAnnotationexitBinaryAndenterFunctionexitGetClassCallexitAnonymousFunctionExpressionenterAnnotationexitCallableReferenceenterAnonymousFunctionenterFinallyBlockexitThrowExceptionNodeexitElvisLhsexitAnonymousObjectexitPropertyenterPropertyenterValueParameter	enterCallexitCatchClause$returnExpressionsOfAnonymousFunctionexitDelegateExpressionenterWhileLoop	exitElvisexitQualifiedAccessExpressionexitJumpexitLeftBinaryAndArgumentexitEqualityOperatorCall*isThereControlFlowInfoForAnonymousFunctionenterTryExpressionenterCatchClauseexitFinallyBlockexitLeftBinaryOrArgumentexitAnonymousObjectExpression	exitField	exitBlock
enterBlockexitBinaryOrexitStringConcatenationCallexitInitBlockenterInitBlockexitWhenBranchResult
enterFieldexitVariableAssignmentexitSafeCallexitWhileLoopConditionexitValueParameterexitDoWhileLoopexitTryExpressionexitDelegatedConstructorCallenterContractDescriptionexitConstExpression
enterElvisenterBinaryOrenterBinaryAndenterDoWhileLoopexitTryMainBlockenterWhenExpressionenterWhenBranchConditionexitAnonymousFunctionenterAnonymousObjectcreateKPropertyType!possibleGetterNamesByPropertyName#possiblePropertyNamesByAccessorNamesetterNameByGetterNamescopecollectCandidatesresolveSymbolWithPrefixcreateFunctionalTypeprocessCandidatecreateArgumentsMappingexpansionForTypeAlias
storeClassstoreVariablewithPropertystoreFunctionstoreCallableReferenceContextdropCallableReferenceContextstoreBackingFieldvisibilityForApproximationresolveStatusbeforePhase
afterPhaseanalyzeFunctionapproveOperationStatementvisitCapturingStatement
resetState!visitLocalFunctionDeclarationNodechooseMostSpecificsubstituteArgumentgetCorrespondingKotlinClassunsubstitutedScopetoClassLikeSymbolfullyExpandedClassisSamecheckDuplicatedLabelsregisterClassifierRedeclaration	representcollectNonFunctionDeclarationcollectFunctionappendOperatorTagappendRepresentationwithDeclarationwithLabelAndReceiverType
getFactorytransformImport"transformWrappedArgumentExpressiontransformTypeParametertransformReferencetransformThisReference!transformContractDescriptionOwnertransformAnnotationContainertransformNamedReferencetransformClasstransformResolvedNamedReferencetransformArgumentList"transformVarargArgumentsExpressiontransformSuperReferencebuildFirFiletoFirWhenConditiontoFirPropertygenerateDestructuringBlockobtainContractDescriptionconvertValueParameterfillDanglingConstraintsToconvertContextReceivers$obtainDispatchReceiverForConstructorobtainPropertyComponentStatusconvertTypeParametersextractRawEffectscomposeAccessorSignaturecollectEnumEntriesaddReceiveraddLocalScopeaddNonLocalTowerDataElementsbuildValueParameterserializeTypeAnnotationcomputePackagePartsInfosextractClassMetadatafindAndDeserializeClassloadFunctionAnnotationsloadPropertySetterAnnotationsloadPropertyGetterAnnotationsinheritAnnotationInfo%loadPropertyDelegatedFieldAnnotations	labelNamecreateCompanionObjectisAnnotationvisitClassInitializervisitAnnotationEntryhasExplicitPrimaryConstructor!getPrimaryConstructorModifierListgetSecondaryConstructorsgetSuperTypeListEntriesgetValueParameterList extractAndMergeDefaultQualifiersloadPropertyAnnotations	buildCallrecordMethodrecordConstructorrecordFieldrecordClassisExactTypeCastshouldCheckForExactType	isRelatedisRefinementUselessisCastErasedfindStaticallyKnownSubtypeisUpcastcheckReferenceIsToAllowedMemberisAllowedInClassLiteralisSuspendFunctionTypecheckReservedYieldresolveSupertypesByMembersresolveSupertypesByPropertyNameisCallingMethodOfAnygetFunctionMembersisConcreteMembergetPropertyMembersresolveSupertypesByCalleeNameresolveSupertypesForMethodOfAnyevaluateValuedatacomputeValueaddFunctioncreateValue
isAbstractgetElementTypegetPackageNamesetPackageNamegetSourceElementhasModifiergetReferences
getElementgetQualifiermultiResolveisSoftaddAnnotationfindAttributeValuesetDeclaredAttributeValuefindDeclaredAttributeValuegetNameReferenceElementgetHashCodeFunctionvisitPrefixExpressionvisitPostfixExpressionvisitDoWhileExpressionvisitArrayAccessExpressionvisitIfExpressionvisitObjectLiteralExpressionvisitDotQualifiedExpressionvisitBlockExpressionvisitWhileExpressionkFunctionTypeToFunctionTypegenerateLocalDelegatedProperty(generateGlobalTypeParametersDeclarations'generateScopedTypeParameterDeclarations!generateTypeParameterDeclarations!isValueArgumentReorderingRequiredprocessClassOrObjectimplicitCastvisitCallableReferencesubstituteTypeloadIrbuildEnumEntryreferenceTypeParameternewArrayneedsAccessorgetJvmNameFromAnnotationfirstSuperMethodFromKotlinvisitGetEnumValuetransformFunctionChildrenvisitModuleFragmentvisitSpreadElementvisitCompositevisitExternalPackageFragmenttransformMemberDeclaration
enterClassvisitInlineLambdacreateAccessorbuildReplacementgenerateCallableReferencegeneratePropertyReferenceisKClasstypeWithArgumentsgetLineNumberForOffsetvisitLambdaArgumentExpressionvisitGetClassvisitImportvisitControlFlowGraphReferencegetLineNumbergetColumnNumbergetSourceRangeInfofindFunctionsgetFunction
isExcludedvisitStatementvisitSpreadArgumentExpressionvisitAnonymousInitializerNewgetInlineClassUnderlyingTypehandleDeepCopyvisitExpressionBodyvisitStatementContainergetSamTypeForValueParametervisitVariableAssignmentvisitWhenBranchgetBinaryOperatorsuspendFunctionN	functionNgetUnaryOperatoraddFakeOverridesvisitErrorExpression visitAssignmentOperatorStatement	constNull
constFalsesetConstructorSourceRangegetWrappedFunctionTypebuildConstructoraddFieldforCapturedFieldforConstructorimplementPlatformSpecificPartsgenerateFunctionBodiesirNottypeToAppendFunctionmapRuntimeEnumEntrymapConstEnumEntryvisitAnonymousFunctionuseAsStatementfollowFunctionReference getOriginForCallToImplementation%generateSuperCallHandlerCheckIfNeededvisitCallableDeclarationgetReferencedClassifier
enterScope
leaveScope.isBuiltInSuspendCoroutineUninterceptedOrReturnisInlineParameterresolveSymbol"tryComputeBackendSpecificSignaturedeclarationstatementBodyexpressionBodyvisitAugmentedArraySetCallcreateModuleDeserializervisitCallableReferenceAccesscreateCurrentModuleDeserializerisBuiltInModule,tryReferencingSimpleFunctionByLocalSignature&tryReferencingPropertyByLocalSignatureplatformSpecificSuffixcomposeSignaturevisitFieldAccessreportWarningplatformSpecificAliasplatformSpecificFunctionplatformSpecificSetterplatformSpecificClassplatformSpecificGetterplatformSpecificPropertyplatformSpecificModulefindAllReachableDeclarationsclassFileContainsMethodinvokeCodegengetModuleChunkBackendInputinvokeLoweringsextractAnnotations	parametercreateHandleForOverridden)propagateChildReifiedTypeParametersUsagesconsumeReifiedOperationMarker!markLineNumberAfterInlineIfNeeded getCallableReferenceTopLevelFlag	isSamTypegenerateParameterNamescopyTypeParametersfindMostSpecificTypeForClassisNonGenericToArraygetCallLabelForLambdaArgument!isDefinitelyNotDefaultImplsMethodgenerateCallReceiverisGenericToArraysyntheticAccessorToSuperSuffixsuppressWildcardsModehandleClashingNamesonClassDonehandleClashingSignaturesshouldGenerateCodeFragmentshouldGenerateClassshouldAnnotateClassshouldGenerateScriptshouldGeneratePackagePartshouldGenerateClassMembersmapTypeAsDeclarationmapAsmMethodmapReturnTypemapFunctionNamemapSupertypemapOwnerwriteParameterTypemapFieldSignaturemapToCallableMethodisBoxMethodForInlineClassmapSignatureSkipGenericisJvmPrimitivewriteParameterclassInternalNamefindSuperDeclarationmangleMemberNameIfRequiredforceBoxedReturnTypewriteFormalTypeParametersmapSignatureWithGeneric
isAccessorcanInlineArgumentsInPlacemapTypeParameterisLambdaCallputNeedClassReificationMarkertransformContractDescriptioncreateTransformercanRemoveAfterTransformationshouldRegenerategenerateFunctionReference'shouldProcessNonAload0FieldAccessChainscaptureVariablecoerceisInvokeSuspendOfLambda>originalReturnTypeOfSuspendFunctionReturningUnboxedInlineClassgenerateConstructorisStaticcollectSuspensionPointsgetIntrinsiccalcReceiverType	genInvokerangeTypeToPrimitiveTypegetPrimitiveIteratorTypegetKotlinPrimitiveClassNameisEmptyArrayshiftvisitNamedArgumentExpressionvisitTypeProjectioncollectPropertiesisCompanionapproximateTypeloadAnnotationTargetsapplicableTargetSetcheckVisibilitycheckCallableDeclarationaddEdgegetNeighbors&isFunctionForExpectTypeFromCastFeature	isBadTypecheckClassHeadercheckTypeReferenceisRepeatableAnnotationClassisObjectLiteralsanitizeReturnTypefilterPackageMemberOverloadsfindVirtualFileisRepeatableAnnotation(hasJvmDefaultWithCompatibilityAnnotation&hasJvmDefaultNoCompatibilityAnnotationmapToJvmMethodSignatureshouldNotBeCalledgetPrimaryConstructorParametersgetMembersByTypegetPrimaryConstructoraddParameterresolveTypeprepareForCompletionisCompletedgetValueArguments createTypeForConvertableConstantdeparenthesizeOrGetSelectorupdateRecordedTypeForArgumenthasNecessarySafeCallisMoreSpecificShapeisSignatureNotLessSpecificgetCalleeExpressionIfAnycreateLookupLocationgetValueArgumentForExpressiongetParameterForArgumenttransformToWarning!getNestedBuilderInferenceSessionscompleteConstraintSystemgetNestedArguments)containsConstrainingTypeWithoutProjectionasCallResolutionResultaddExpectedTypeConstraint shouldCompleteResolvedSubAtomsOfaddErrorCallInfoinferPostponedVariablescallCompletedshouldRunCompletionwriteOnlyStubsaddPartialCallInfoinitializeLambdaresolveReceiverIndependentlyaddCompletedCallInfocurrentConstraintSystemisOperatorCall+createConstraintSystemForOverloadResolutionrecordInlinabilityOfLambda#isApplicableCallForBuilderInference bindStubResolvedCallForCandidateisDescriptorFromSourceisOldIntersectionIsEmptyisSuperExpressionconvertSignedConstantToUnsignedisCompileTimeConstantgetVariableCandidateIfInvoke resolveCallableReferenceArgumentdisableContractsIfNecessary1getExpectedTypeFromAsExpressionAndRecordItInTracegetCandidateFactoryForInvokeisBuilderInferenceCall)getScopeTowerForCallableReferenceArgumentgetExpectedTypeisArrayOrArrayLiteral	workCountDrecordInfoAboutTypeVariableUsagesAsInvariantOrContravariantParameter createCallableReferenceProcessor+removePostponedTypeVariablesFromConstraintshasUpperOrEqualUnitConstraint!bindingStubsForPostponedVariablesgetMapisInlineOnlyhasReifiedParametersreportIfNeededextractDefaultValue
doAnalysisisHiddenInResolutionvisitQualifiedExpressiongetAnnotationArgumentValue visitBinaryWithTypeRHSExpressionvisitStringTemplateExpression	hasSpreadvisitLabeledExpressiongetConstantvisitKtFileaddOwnDataTogetKeys
recordTypegetSliceContentsgetBindingContext
createStubgetDeclaration
shouldSkipvisitPropertyAccessorisPrimitiveArray
addMappingclassIdgetDiagnosticsvisitThisExpressionvisitForExpressionvisitDestructuringDeclaration	isTrivialisNewPlaceForBodyGenerationaddPartgetPackageFqName
returnTypegetInfovisitWhenExpressionvisitBreakExpressionvisitContinueExpressionvisitThrowExpressionvisitTryExpressioncontractNotAllowedisCallableReferencetoIrTypetransformAnnotationshasBodyforceResolveAllContentsisSuppressednewLinedefaultValuereferenceFunctionvisitAnonymousObject	isPrivateshouldSerializeFunctionshouldSerializeNestedClassshouldSerializeTypeAliasshouldSerializePropertyvisitKClassValuevisitCharValuevisitByteValuevisitShortValuevisitErrorValuevisitIntValuevisitFloatValuevisitBooleanValuevisitUIntValuevisitGetObjectValuevisitBlockBody$visitLocalDelegatedPropertyReference	visitWhen
getClassId	visitLoopvisitContainerExpressionvisitPropertyReferencevisitClassNew	remapTypevisitStringConcatenationgetOverriddenreferenceTypeAliasreferenceClasspostProcessvisitLocalDelegatedPropertyisPlatformSpecificExportedgetMangleComputergetExportChecker
appendNameprocessPackageMetadataprocessHeaderprocessInlineFunctionprocessPackagePartprocessIrFileprocessInlineFunctionsnewClassBuilderremapgenerateLambdaBodyisStaticCallsubtargetTestTaskNamedfsparsePoscreatePackageasTextcheckVersionvalueOrNullupdateConfigurationcheckFunction	doCompilecompileImplgetAnnotationFqNamesvisitScript.collectAdditionalSourcesAndUpdateConfigurationgetExtraImportsgenerateSyntheticClassesisCompatibleTolibraryComponentBuilderjavaFile	writeDatacreateErrorCandidategetDispatchReceiverindexgetExtensionReceiverenqueueregisterSelectClause0isLambdacheckReceiverpeek
isReusableassignvisitSimpleNameExpressionnoSuppression
forElement
isPhysicalgetStubgetQualifiedNamegetBodyvisitLambdaExpressionvisitCallExpressionvisitParenthesizedExpressionvisitConstantExpressionvisitIsExpressionvisitUnaryExpression
saveToFilemetadatatargetFromPresetreportJsCompilerMode
getTargets	staticLib	sharedLibcheckDeprecatedTestAccess	getBinaryextractPrefixFromBinaryName
findBinarywatchosioscreateIntermediateSourceSettvoscreateIntermediateSourceSetsdefaultSourceSetsmostCommonSourceSetsbyCompilerArgumentcreateKotlinExtension
dceOptionsconfigureOrCreateisProducedFromPresetconfigureToolchaincreateToolchain
watchosX64linuxArm32HfpwatchosSimulatorArm64androidNativeX86linuxMipsel32iosX64
linuxArm64tvosX64watchosArm32linuxMips32androidNativeArm32iosSimulatorArm64mingwX64
macosArm64iosArm32
watchosX86wasm32androidNativeX64mingwX86androidwatchosArm64macosX64iosArm64	tvosArm64androidNativeArm64tvosSimulatorArm64linuxX64getExistingTargetgetTargetNamejvmToolchaincopyFreeCompilerArgsToArgsbuildWarningMessage6configureIdeaKotlinSpecialPlatformDependencyResolutionIdeaKotlinModuleCoordinatesIdeaKotlinLanguageSettingsIdeaKotlinModuleIdeaKotlinFragmentbuildIdeaKotlinFragmentbuildIdeaKotlinVariant
withEffectIdeaKotlinDependencyTransformerwithTransformerIdeaKotlinCompilationOutputcreateRefinesDependency/locateOrRegisterBuildIdeaKotlinProjectModelTaskIdeaKotlinDependencyResolvercreateDependencyTransformercreateDependencyEffectcreateDependencyResolverIdeaKotlinPlatformcreateArtifactView"createPlatformFragmentArtifactViewcreateVariantArtifactView!buildPlatformResolutionAttributesartifactViewwithConstraintadditionalDependencies withPlatformResolutionAttributesbuildConstraintresolveKlibIdeaKotlinFragmentCoordinatesIdeaKotlinProjectModelcreateExternalJvmVariantcreateKaptSourceSet
pathOrName	isAndroidgetExpectedByDependenciesgetProjectTypecreateAndroidSourceSetcreateSourceSetcreateCompilerArgumentsregisterTasklocateOrRegisterTask
locateTaskprovidedByCompilerfilterOutPublishableInteropLibsaddFileArgsfilterKlibsPassedToCompilerdeleteSnapshotrestoreOutputscreateSnapshotcompressDirectoryToZipuncompressZipIntoDirectorycreateModuleFilegetFatFrameworkFamilyprocessPlistcreateFatFrameworkrunInstallNameToolisSupportedTargetmergeBinariesrunLipomergeHeadersmergePlists	mergeDSYMisHybridKotlinJsLibraryisDceCandidatevalidatedExportedLibrariescopyOptionsFromaddRunListenerretrieveSpecReposretrievePods surroundWithSingleQuotesIfNeeded
getOrEmptyhasPodfileOwnOrParentbuildCommonArgsisBuildCacheEnabledForKotlincacheOnlyIfEnabledForKotlinwriteDependenciesFile%buildExternalDependenciesFileForTests/validateKotlinAndJavaHasSameTargetCompatibilitygetClasspathChangesjavaFilesPatternFiltergetChangedFilesexecuteImplgetToolsJarFromJvmupdateJvmTargetdisallowSourceChangessetIncludessetExcludesvalidateCompilerClasspathcopyFrameworkTextFilecopyFrameworkFilecopyTextResourceprocessInteroptoSingleCompilerPluginOptionstoCompilerPluginOptions"ensureCompilerProvidedLibPrecached#ensureCompilerProvidedLibsPrecached	needCacheensureDependencyPrecachedgetRootCacheDirectorygetCacheFileNamecleanOutputsAndLocalStatethrowGradleExceptionIfErrorregisterKotlinCommonTaskregisterKotlinJVMTaskregisterKotlinJsIrTaskregisterKotlinJSTaskbuildOptionsconfigureFromExtensionmaybeRegisterTransformgetKaptClasspathSnapshotgetJavaOptionsregisterTransformsOncegetDefaultLangSettinggetClasspathSnapshotDirgetKotlinBuildDirconfigureTaskconfigureTaskProvidergetRefinesMetadataPathsislistFilesOrEmptycanonicalPathWithoutExtension
newTmpFilerelativeToRootpathsAsStringRelativeTofileExtensionCasePermutationstoPathsArraywithTemporaryDirectoryshowdeprecation
decamelizedashSeparatedNamelowerCamelCaseNameclearAnsiColorasValidTaskNamedashSeparatedLowercaseNamenewFilePropertysetPropertyWithLazyValuepropertyWithNewInstancenewPropertyoptionalProvidersetPropertyWithValueproviderWithLazyConventionoutputFilesProviderpropertyWithConventionfilesProviderchainedFinalizeValueOnReadtoSetOrEmptystackTraceAsStringgetOwnerBuildOperationIdgetClassDisplayNameaddExtendsFromRelation!addGradlePluginMetadataAttributescheckGradleCompatibilitytopRealPathrequireValidZipDirectoryPathlistDescendantsensureValidZipDirectoryPathcopyZipFilePartiallyisValidZipDirectoryPath(castIsolatedKotlinPluginClassLoaderAwaregetDependenciesCacheDirectoriescomputeDependenciesHashtoHexStringlibraryFiltergetOrPutRootProjectPropertyisConfigurationCacheAvailable#notCompatibleWithConfigurationCacheunavailableValueErrorgetSystemPropertyklibModuleNameparseIntOrNullarchiveFileTree
removeRepodownloadAndExtractdownloadIfNeeded/runProjectConfigurationHealthCheckWhenEvaluated"runProjectConfigurationHealthCheckprintWithNoIndentprintLineSeparatorprintIndentisGradleVersionAtLeastformatContentLengthlifecycleWithDurationformatDurationprobeRemoteFileLengthloadPropertyFromResources"registerKotlinOutputForJavaLibrary*detectKotlinPluginLoadedInMultipleProjectsaddListenersexecuteClosure2setupAsLocalTargetSpecificConfigurationIfSupportedinitFilteredFilesconfigureBinariesTaskgetProviderputIfAbsentconfigureClassInspectionForICconfigureSourceSetDefaultsconfigureAttributesrewriteMppDependenciesInPomconfigureProjectGlobalSettingssetUpJavaSourceSetsapplyStandardTaskConfiguration'createAdditionalClassesTaskForIdeRunnerprepareKotlinCompileTaskfilterOutJavaSrcDirsIfPossible#addKotlinDirectoriesToJavaSourceSetaddCommonProjectgetKotlinSourceDirectorySetSafematchSymmetricallyByNamesgetKotlinSourceSetsSafe'configurationsForCommonModuleDependencygetExtisInMultipleProjectsgetAffectedProjectswarnAboutIncorrectDependenciescreateKlibCompilationTaskcreateRegularKlibArtifactconfigureBinariescreateLinkTask'registerEmbedAndSignAppleFrameworkTaskscreateFrameworkArtifactcreateRunTaskcreateCInteropTaskscreateKlibArtifactklibOutputDirectoryconfigureFrameworkExportconfigureCInteropsaddCompilerPluginssetupAttributeMatchingStrategyaddKotlinCompilerConfiguration%registerDefaultVariantImplementationskotlinSourceSetFactoryaddDependsOnTaskInOtherProjectscreateLifecycleTask"defineConfigurationsForCompilationconfigureResourceProcessingimplementationToApiElementsrunOnceAfterEvaluatedgetKotlinPluginVersion&loadKotlinPluginVersionFromResourcesOfconfigureTestinitializeTestRunscheckVariantIsValid&kotlinSourceSetNameForAndroidSourceSetpreprocessVariant.addAndroidUnitTestTasksAsDependenciesToAllTestpostprocessVariant(addKotlinDependenciesToAndroidSourceSetsgetVariantNamegetTestedVariantDatagetJavaTaskProvidergetResDirectoriescomputeResourceSetList0*dynamicallyApplyWhenAndroidPluginIsAppliedandroidTargetHandlerconfigureTestRunusageByName,setJavaTargetEnvironmentAttributeIfSupportedusesPlatformOfcategoryByNameaddSubpluginOptionsloadSubpluginsaddMavenDependencywhenEvaluated warnAboutKotlin12xMppDeprecationaddJarIfNoArtifactsPresentonClosecompareVersionNumbersclearJavaSrcDirsforEachJavaSourceDiraddClassesDirforEachKotlinSourceSetifKaptEnabled
getGcCount
buildStartgetUsedMemoryKbgetAdditionalArgumentsForJavacgetAdditionalArguments findJavaTaskForKotlinCompilation*addCompilationSourcesToExternalCompileTaskaddExtensionaddConventiononEvaluatedapplyPlugin6runMissingAndroidTargetProjectConfigurationHealthCheck6runMissingKotlinTargetsProjectConfigurationHealthCheckErunDisabledCInteropCommonizationOnHmppProjectConfigurationHealthCheckenumPropertypropertiesWithPrefixbooleanPropertynativeCacheKindForTargetpropertyWithDeprecatedVariantideaImportDependsOnrequestedDependencies0commonMetadataDependenciesConfigurationForScopestoProjectOrNulldetectModulesfragmentByNamegenerateMetadataXmldisambiguateNameInPlatform(addKotlinToolingMetadataArtifactIfNeededcreateMavenPublicationsdependenciesForPomRewritingcreateRootPublicationcreateTargetPublications#configurePublishingWithMavenPublish,exportProjectStructureMetadataForOtherBuilds%sourceSetFreeCompilerArgsPropertyNameconfigureSourceSets
fromPreset setupAdditionalCompilerArgumentssetupDefaultPresetscompilationsBySourceSets sourceSetsInMultipleCompilationsgetFilteredParentAttributekeySet#addSourcesToKotlinNativeCompileTask!parseJsonProjectStructureMetadata parseXmlProjectStructureMetadatachooseForProducingProjectaddExactSourceSetsEagerly)addAllDependenciesFromOtherConfigurations+getHostSpecificMetadataArtifactByRootModule#resolveConfigurationAndSaveVariants#getResolvedArtifactByPlatformModule'matchMppComponentsWithResolvedArtifactsgetResolvedVariantNamegetEntryForModuleresolveArtifactsresolveMppComponentsserializePackage%setupGeneralKotlinExtensionParameters!applyUserDefinedAttributesWithKpmsourcesJarTasksourcesJarTaskNamed)applyUserDefinedAttributesWithLegacyModelapplyUserDefinedAttributesbuildProjectStructureMetadata#parseKotlinSourceSetMetadataFromXmltoXmlDocumentparseKotlinSourceSetMetadatatoJson$parseKotlinSourceSetMetadataFromJson#buildKotlinProjectStructureMetadatasyncKotlinAndAndroidSourceSetssyncKotlinAndAndroidResourcescreateDefaultDependsOnEdgessyncKotlinAndAndroidSourceDirsreportUnusedSourceSetscheckSourceSetsserializeTypeParameter!filterOutNonPublishableAttributesgetDependencyConstraintsgetUsagegetGlobalExcludes registerProjectStructureMetadataaddDependencyByAnyNotationdefaultGenerateExternalsaddDependencyByStringNotationfilterModuleNameaddSourcesToKotlinCompileTaskisTest#addCommonSourcesToKotlinCompileTaskcomposeNamegetArtifactFileconsumerRuntimeUsageproducerRuntimeUsageproducerApiUsagechooseCandidateByNameconsumerApiUsagegetHostSpecificElementsisHostSpecificKonanTargetsSetgetHostSpecificFragmentsgetHostSpecificSourceSets-getCompileDependenciesConfigurationForVariantserializeFlexibleTypeProjectMetadataProviderbinariesgetVisibleSourceSetssetupNativeCompilersetupNativeHomePrivatePropertysourcesJarArtifact!linkToSourcesProducedByDukatTasks&buildAdhocComponentsFromKotlinVariants-resolvableConfigurationFromCompilationByScope)kotlinVariantNameFromPublishedVariantName
entryPoint	cinterops originalVariantNameFromPublishedpublishedConfigurationNamejavaApiUsageForMavenScopinggetModulesFromPm20ProjectattributeStringbuildModulesFromProjectpublishLibraryVariantspublishAllLibraryVariants filterOutAndroidVariantAttributedoCreateComponents"filterOutAndroidBuildTypeAttributecreateAndroidUsageContexts checkPublishLibraryVariantsExist#filterOutAndroidAgpVersionAttributeisVariantPublishedasMetadataProvider.rewritePomMppDependenciesToActualTargetModulesexportprocessDependencyfindUsageContext1associateDependenciesWithActualModuleDependencies
idFromNamelossyFromModuleIdentifierfromComponentfromComponentSelectoridOfRootModulefromComponentIdidOfRootModuleByProjectPathfromDependencyCompositeMetadataJar/getCoordinatesFromPublicationDelegateAndProjectsanitizeFileNamegetAllCompiledSourceSetMetadata'buildModuleFromProjectStructureMetadataaddToInputsOutputstoSubpluginOptiontoGradleCoordinatesflattenWithIndexFragmentConfigurationRelationregisterDefaultCommonFragment addDefaultDependencyOnMainModule&addDefaultRefinementDependencyOnCommonregisterFragmentFactoryFragmentArtifactssetupKpmModulesPublication"setupKotlinToolingMetadataIfNeededsetupMavenPublicationDsldoKpmSpecificConfigurationSteps!createKotlinNativeCompilationTaskcreateKotlinJvmCompilationTaskKotlinJvmVariantFactorycurrentBuildIdrepresentsProjectownModuleNamegetConfiguration'kotlinPlatformTypeAttributeFromPlatformdefaultModuleSuffix"mapTargetCompilationsToKpmVariantsfragmentDirectoryNamegetForFragmentOrNullwithAllregisterNativeregisterCommoncheckCanRefineKotlinCommonFragmentFactorysetModuleCapabilityKotlinNativeVariantFactoryCapabilitiesContainerFragmentCapabilities!registerPlatformModulePublicationplatformComponentNameinferMavenScope$registerPlatformVariantsInRootModuleconfigurePublishing!configureSourceElementsPublishinginModuleinMainAndTestinAllModulesinTestinMainisNativeHostSpecificisNativeSharedkpmNativeVariantClassFragmentAttributeswithConfigurationProviderresolveAsGraphresolveFriendVariantsgetResultsForModule(resolveModuleDependencyAsComponentResultregisterClassesTaskcreateKpmModulesContainer'compilerPluginProviderForNativeMetadata!compilerPluginProviderForMetadata,compilerPluginProviderForPlatformCompilationcompilerPluginDataProvider pluginClasspathConfigurationName!transformFragmentMetadataTaskNamemetadataJarNamecreateExtractMetadataTask#configureMetadataResolutionAndBuild!metadataElementsConfigurationNameresolvedMetadataProviderscreateNativeMetadataCompilationcreateCommonMetadataCompilationsourceElementsConfigurationNameconfigureMetadataExposure#setupFragmentsMetadataForKpmModules.configureMetadataCompilationsAndCreateRegistry.createResolvableMetadataConfigurationForModule)generateAndExportProjectStructureMetadata+disableMetadataCompilationIfNotYetSupportedconfigureMetadataJarTasksetupToolingModelBuildercreateDefaultModules$resolveHostSpecificMetadataArtifactsdoResolveMetadataDependenciesfragmentsNamesVisibleByParents!createKotlinCommonCompilationTask)createKotlinNativeMetadataCompilationTask*configurationToResolveMetadataDependenciesConfigurationProvider!configureSingleVariantPublication configureSingleVariantPublishing!configureNativeVariantPublicationcacheForRequestingModulevisitReturnregisterDefaultVariantFactories
visitThrow"createSourcesElementsConfiguration!moduleClassifiersFromCapabilitiestoModuleIdentifierstoSingleModuleIdentifiertoModuleIdentifiermatchesModulematchesModuleIdentifierbuildSyntheticPlainModulematchesModuleDependencyrootPublicationComponentName!getSourcesFromRefinesClosureAsMapgetSourcesFromFragmentsAsMap"getCommonSourcesFromRefinesClosuregetAllFragmentSourcesAsMapgetSourcesFromRefinesClosuregetFragmentOwnSourcesisAllowCommonizerForIdetestmainAndTestisMainCompilationDatagetOrCreatevisitTryextractLocationnamedAttribute!ofMetadataCompilationDependenciesnewDependencyFilesHolderofVariantRuntimeDependenciesofVariantCompileDependenciesnotation
fromModulecapabilityStringFromModulefromModuleOrNulldisambiguateNameOmittingMainFragmentNameDisambiguation&FragmentNameDisambiguationOmittingMaincopyConfigurationForPublishingcopyConfigurationparentAssembleXCFrameworkTaskeraseIfDefaultregisterAssembleXCFrameworkTask%registerAssembleFatForXCFrameworkTaskfromFrameworkDescriptorscreateXCFrameworkassembleresolveIfNotNullfatFrameworkDir&registerEmbedAndSignAppleFrameworkTask"registerAssembleAppleFrameworkTaskappleFrameworkDirdefineNativeTargets%errorGranularMetadataFalseUnsupported)errorDependencyPropagationTrueUnsupported0warningGranularMetadataFalseRedundantWithNewFlag#warnGranularMetadataTrueHasNoEffect)handleHierarchicalStructureFlagsMigration#checkHmppFeatureFlagsForConsistency3errorDependencyPropagationFalseConflictsWithNewFlag-errorGranularMetadataTrueConflictsWithNewFlag,warningDependencyPropagationFalseHasNoEffect+doHandleHierarchicalStructureFlagsMigrationgetModuleLeaderunionModulesgetModuleLeaderCompilationgetRuntimeJarsgetStorageRootsourceSetStoragesourceSetStorageWithScopeprojectStoragedefineSourceSetConfigurationsrunAllChecksrunSingleCheck'getSourceSetsFromAssociatedCompilations-getVisibleSourceSetsFromAssociateCompilations$checkSourceSetVisibilityRequirementsgetAdditionalVisibleSourceSetsgetDependenciesTransformationfindSourceSetsDependingOncheckForCircularDependenciescreateDefaultSourceDirectorySetsetJsCompilerIfNecessary%sourceSetMetadataConfigurationByScope'sourceSetDependencyConfigurationByScope)compilationDependencyConfigurationByScope$applyLanguageSettingsToKotlinOptionsparseApiVersionSettingsparseLanguageVersionSettingparseLanguageFeaturecamelCasePartsandroidSourceSetModuleNameexternalSourcesfatFrameworkgetPodBuildTaskProvidertoSetupBuildTaskNamesplitQuotedArgsgetPodBuildSettingsPropertiesasValidFrameworkNamesupportedTargetstoBuildDependenciesTaskNamecreateSyncForRegularFrameworktargetsForPlatformregisterPodGenTaskcreateSyncFrameworkTaskregisterPodImportTaskconfigureTestBinariesregisterDummyFrameworkTaskcreateSyncTask#registerPodPublishFatFrameworkTasksregisterPodDownloadTaskregisterPodBuildTasksregisterPodXCFrameworkTaskregisterPodPublishTasksregisterPodspecPublishTaskregisterPodspecTaskcreateInteropsregisterPodSetupBuildTasksregisterPodInstallTaskcreateSyncForFatFrameworkcreateDefaultFrameworkscallJmxconfigureLinkingOptionsasModuleNamegitconfigureRegisteredFrameworks	noPodspecgetLocalPathpoduseLibraries	frameworkurl	addToPods	specReposreportGlobalMetricsrunSafereportLibrariesVersionslogExceptionprepareDataavailableForStat	parseTagsgradleBuildStartTimeensureRegisteredapplyIfInitialisedcheckStatisticsEnabledgetOrCreateInstanceconfigureTaskscheckSettingsbeforeExecuteafterExecutegetTimegetOrRegisterStoragesplitStringIfNeedreadableStringbinaryprintBuildTimesprintTaskLogprintBuildInfoprintTasksLogprintMetricsprintBuildPerformanceMetricsprintTaskOverviewprintSizeMetricprintBuildAttributesprintBuildReportgetStartParametersaddTransformMetricsaddTaskprintMap
formatSize
formatTimecheckResponseAndLog	buildInfotaskOverviewreportingSettings	lifecyclelogTimedetectcreateLifecycleTaskInternaltoHexcalculateDirHashappendConfigsFromDirjsQuotedgetChildTestExecutioncalculateJsCompilerTypecreateKotlinVariantgenerateBinaryNameexecutableLegacyInternalcreateBinarylibrarygetIrBinariesexecutableIrInternalprocessArgslinkTaskNamelinkSyncTaskNameisProduceZippedKlibisProduceUnzippedKlibtoCompilerArgumentconfigureSubTargetregisterCompileSyncconfigureCommonJsOptionslocateOrRegisterRunTaskproduceLibrarywithNamenpmDeclarationExceptionpossibleVariants#processNamedNonStringSecondArgumentgenerateExternalsIfPossibleprocessNonStringFirstArgumentchooseVersionfromSrcPackageJsonisKotlinJsRuntimeFileisConfiguringStateinstallIfNeededrequireInstalledcheckRequiredDependenciesnpmProjectsByProjectResolutionsprepareIfNeededrequireConfiguringState#getNpmDependencyResolvedCompilationGradleNodeModuleimportedPackageDirgetBuildDependenciesresolveProjectgetTargetComponentIddefaultNpmDependencyDelegateaddNpmDependencyExtensionscopePrefix	toVersionfoldDelimiterstoSemVer	fixSemveruseToolbuildNpmProjectNameversionToNpmRangesbuildNpmVersioncaretizeSingleVersionincludedRangeonlyNameNpmDependencyfileVersionisFileVersiondirectoryNpmDependencycustomField
scopedNametoDeclarationuniqueRepresentationminStarthasIntersectionminEndmaxStartmaxEndresolveOperationDescriptionresolveAsDirectorygetStringOrNullresolveAsFileresolveAsRelativeresolveIndexresolveInNodeModulesDir,visitHyphenatedRangeOfFullySpecifiedVersionsvisitTildeRangevisitWildcardvisitCaretRangevisitOperatorgteqvisitFullySpecifiedSemvervisitLogicalOrOfMultipleRanges"visitLogicalAndOfSimpleExpressionslteqvisitWildcardOperatorvisitEmptyRangevisitWildcardRangevisitFullSemverprocessDependenciesfindDependentTasksemptyimplementingmarkForNpmDependenciesResolveshouldResolveNpmDependenciesForprepareInstallationgetPackageJsonHandlersalreadyResolvedMessage
addProjectfindDependentResolverclosePluginsremoveOutdatedPackagesaddTargetListenersaddContainerListenersaddCompilationcreateAggregatedConfigurationcreatePackageJsongetResolutionOrResolveIfForcedvisitProjectDependencyvisitCompositeProjectDependencytoPackageJsonProducergetPackagescorrectDependencyKeyprepareRootPackageJson$saveRootProjectWorkspacesPackageJson"yarnLockReadTransitiveDependenciesyarnExectoVersionString configureRequiresNpmDependenciesresolveAndUpdatePackagesupdatePackagesupdateVersionsMapwritePackageJsonreplaceQuoted	parseTreedisableGranularWorkspaces
resolutiongradleModelPostProcessgetDtsFromDependencywarningOnMissedDTs	getAllDts+shouldLegacyUseIrTargetDukatIntegrationTask"shouldDependOnDukatIntegrationTaskexecuteDukatIfNeededregisterIntegratedTaskaddTaskRequirementsgetCompilationNpmRequirementsunpackNodeArchiveonTestFrameworkSetuseKarma	useNodeJsexecuteTestsprocessWebpackNameprocessKarmaStackTracesingleRuleErrorcliArguseChromiumHeadlessaddPreprocessoruseChromeHeadlessNoSandboxusePhantomJSuseFirefoxAurorauseOperauseDebuggableChrome
useBrowseruseChromeCanaryuseFirefoxNightlyHeadlessuseIewatchuseSourceMapSupport	useSafariuseChromeHeadlessuseFirefoxAuroraHeadlessuseFirefoxLikeuseFirefoxDeveloperHeadlessuseChromiumaddChromeLauncheruseCoverage	useChromeuseFirefoxDeveloperuseChromeLike
useFirefoxuseFirefoxNightlyuseKotlinReporteruseChromeCanaryHeadless
useWebpackuseFirefoxHeadlessuseConfigDirectorychooseconfigureExecconfigureClientcreateWebpackConfig	isRunningcreateRunnerwebpackConfigApplierfilterMethodNameparseNodeJsStackTracefilterClassNameparseNodeJsStackTraceAsJvmappendReportappendErrorPluginappendSourceMapsappendProgressReporterappendCssSupportcssErrorappendTogetRequiredDependenciesappendEvaluatedFileReportappendEntryappendExperimentsappendDevServerappendResolveModulesjsonwarnUnsupported	readFirstwriteBackUnsupportedmaybeReadFirsttransformStringconfigureDceconfigureDceTasks"setTestTaskClasspathAndClassesDirswithJava&setupDependenciesCrossInclusionForJava%setupJavaSourceSetSourcesAndResourcesdisableJavaPluginTasks*areRuntimeOrCompileConfigurationsAvailablecreateTestExecuterreportDisabledTargetgetOrRegisterDisabledTargetsgetOrRegisterDatadisablesDevirtualizationgetOrRegisterIncorrectArgumentsstartsWithIncorrectPrefixgetPodfileContentdefaultCacheKindForTargetadditionalCacheFlagscacheWorksFordoPodInstallfallback	cloneHeadcloneShallowretrieveCommitcreateExecutionContext
setupBuildgetBuildSettingFileName
runCommandhandlePodDownloadErrorhandlePodInstallErrorhandlePodInstallSyntheticErrorwriteSettingsreadNullablePropertyreadPropertyreadSettingsFromReader
folderSizegetCompilationResultsgetPerformanceCompilerOptionsgetAllExecutedTaskscompilerFlagsFromBinarycopyArtifactToUrlDirarchiveTreebuildKotlinNativeMainArgs!buildKotlinNativeBinaryLinkerArgsbuildKotlinNativeCommonArgs!buildKotlinNativeKlibCompilerArgstrackEnvironmentcliArgs
executabletestArgsregisterLibsDependenciesregisterExportDependencies registerKotlinArtifactsExtensionlinkregisterLinkFrameworkTask!includeCommonizedCInteropMetadataaddKotlinArtifact@createCInteropMetadataDependencyClasspathFromProjectDependencies)createCInteropMetadataDependencyClasspathCcreateCInteropMetadataDependencyClasspathFromAssociatedCompilations/createCInteropMetadataDependencyClasspathForIde!getCommonizedPlatformLibrariesForlistLibraryFilesaddDependenciesgetOriginalPlatformLibrariesFor%setupKotlinNativePlatformDependenciesisAllowCommonizergetRootOutputDirectorygetAllInteropsGroupscommonizeCInteropLibrariesgetAllDependents	commonize%createCInteropApiElementsKlibArtifact-locateOrCreateCInteropDependencyConfiguration$cInteropApiElementsConfigurationName.locateOrCreateCInteropApiElementsConfigurationcinteropKlibLibraryElementscanReturnFastlogInfocommonizedOutputLibrariesoutputDirectorycommonizedOutputDirectorytransformDependenciesmaterializeMetadatawithoutProjectDependenciesshowMissingNativeStdlibWarningsetGeneratedrunGenerationTooltoPlatformLibNamescheckCaches	setCachedisGeneratedcheckLibrariesInDistributiongeneratePlatformLibsIfNeededcachedparseKotlinNativeStackTrace parseKotlinNativeStackTraceAsJvm*collectAllSharedCommonizerTargetsFromBuild,collectAllSharedCommonizerTargetsFromProject	urlEncode#setupCInteropPropagatedDependencies(getPropagatedCInteropDependenciesOrEmptygetAllCInteropOutputFilesonlyIfSourceSetIsSharedNative<locateOrRegisterCInteropMetadataDependencyTransformationTaskconfigureTaskOrderBlocateOrRegisterCInteropMetadataDependencyTransformationTaskForIdecinteropMetadataDirectoryPath9setupCInteropTransformCompositeMetadataDependenciesForIde1setupCInteropCommonizerDependenciesForCompilation#setupCInteropCommonizerDependencies)setupCInteropCommonizerDependenciesForIdefromAssociateCompilationsforAllSharedNativeCompilationsforAllDefaultKotlinSourceSets+addIntransitiveMetadataDependencyIfPossiblegetSharedCommonizerTargetallParticipatingSourceSets(getImplicitlyDependingNativeCompilationstoGistgetDistributionTypechooseDistributionTypefindAndroidTarget+configureMetadataDependenciesForCompilationapplyToConfigurationexportDependenciesForPublishing!transformGranularMetadataTaskName0setupDependencyTransformationForCommonSourceSets-createMetadataCompilationsForCommonSourceSets+configureProjectStructureMetadataGeneration)setupDependencyTransformationForSourceSet'createMergedAllSourceSetsConfigurationssetupCompilationDependencyFilesisMetadataCompilationSupportedcreateMetadataCompilationcreateArchiveTasks%createCommonMainElementsConfigurationgetAndroidPluginVersionsfindDependenciesselectConfigurationsisAndroidPluginCompatibledoFindDependenciesdoCollectDependenciescollectDependenciesgetAndroidSourceSetDependenciesgetAndroidLocationBuildServiceaddOrRetainAllgetClassOrNullgetAndroidSdkJargetMethodOrNullconfigureTargetWithKpm"getMetadataCompilationForSourceSet getPublishedPlatformCompilations*createGenerateProjectStructureMetadataTaskfilesWithUnpackedArchives0dependsOnClosureWithInterCompilationDependencies)getCommonSourceSetsForMetadataCompilationisSharedNativeSourceSetrequireCompilationOfTarget
testFailedhasFailedTestsgetAggregatedTaskFailuresconfigureConventionsgetOrCreateAggregatedTestTaskcleanTaskNamedoGetOrCreateAggregatedTestTaskijListenTestTaskcomputeAllParentTasksPathscheckSuppressedRunningFailures	afterTestcheckFailedTestsdisableTestReporting
afterSuite
beforeTestreportOngetFailingTestsMessagemaybeOverrideReporting,disableIndividualTestTaskReportingAndFailingoverrideReportingasClickableFileUrlreportOnChildTasksbeforeSuiteaddToParents!includeKotlinToolingMetadataInApkbuildKotlinToolingMetadatataskNameForKotlinModulecreateToolingMetadataFilebuildJvmExtrasOrNullbuildTargetMetadataandroidExtrasOrNullbuildNativeExtrasOrNulljsExtrasOrNullgetKotlinToolingMetadatanativeExtrasOrNull&registerBuildKotlinToolingMetadataTaskbuildJsExtrasOrNulljvmExtrasOrNullbuildTargetMetadataExtrasbuildProjectSettingsbuildAndroidExtrasOrNullbuildTargetStringbuildProjectTargetsencodePluginOptionswithWrappedKaptOptionswrapPluginOptionsgetIfKaptClasspathIsPresentisSourceRootAllowedrequireConfiguredrequireNotConfiguredprintMessagefindRootClassLoaderjavacIsAlreadyHerecreateKaptOptions	kaptClassexecWithProgressexecWithErrorLoggerwriteTo	hexToByteobjtoDigitgetOrComputedecodeHexStringgetOrComputeKeygetWorkerIsolationModewarnAdditionalJvmArgsAreNotUsedgetAnnotationProcessorOptions
submitWorkcheckProcessorCachingSetupaddAndroidExtensionsRuntimesetupPluginsbuildKaptSubpluginOptions.checkAndroidAnnotationProcessorDependencyUsage
encodeListgetNonAndroidDslApOptionsregisterGeneratedJavaSourcegetNamedDependenciesupdateaddLinkDependenciesaddManifestAddendaddMetadataaddDataFlowGraphaddIr
signaturespackageMetadataPartsonCancellingapplyToolchaintargetisIncrementalCompilationEnabledbuildCompilerArgs	selectKeygetCacheDirectoryisSatisfiedByforEachVariantwhenBuildEvaluatedcreateTestRegistrybuildSourceSetProcessorconfigureTestTaskisTestTaskEnabledgetLibraryOutputTaskgetBuildTypeNamesetUpDependencyResolutionwireKotlinTasksgetFlavorNamesdoRegisterTaskdoTargetSpecificProcessing#addAssociateCompilationDependenciescreateTargetConfigurator0useDisambiguationClassifierAsSourceSetNamePrefix+overrideDisambiguationClassifierOnIdeImportaddSourcesToCompileTaskconfigureSourceSetconfigureArchivesAndComponentsetAttributesaddArtifactsregisterCompileTaskssetCapabilities
capabilityregisterSourceArchiveTaskdoCreateSourceSetsetUpSourceSetDefaultslocateFragmentForSourceSetreportStringreportBooleanreportNumberincrementAndGetOrdinal
getOrdinalwarn%provideTargetDisambiguationClassifierinstantiateTargetcreateKotlinTargetConfiguratorcreateCompilationFactorydefineConfigurationsForTargetconfigureCompilationscreateUsageContextsstartconfigureTestsregisterSubTargetTaskconfigureTestsRunconfigureTestRunDefaultsdisambiguateCamelCasedconfigureMain	getByKindcommonConfigureconfigureOptimizationconfigurePlatformSpecificModelcreateTestRundownloadcommonizeNativeDistributiontoJvmtoJvmStackTraceElementbuildCompilationProcessorconfigureCompilationDefaults/createMetadataDependencyTransformationClasspathskipConditioncomponent13component12component11	isEnabledcontributeArgumentsisCompatiblewriteObject
readObjecttestFailedMessagerunWithContextregisterAssembleTaskoptionbinaryOptiontargetscreateArtifactgetIncludesgetExcludes	setSourcebyArgumentOrNull
byArgumentcreateTargetaddCompilerPluginDependencycreateKotlinJvmOptionsregisterKotlinJvmCompileTaskregisterKaptTaskgetCompilerPluginsregisterKaptGenerateStubsTasksetupAttributesMatchingStrategygetPluginArtifactgetCompilerPluginIdapplyToCompilationcompilerOptspackageNameincludeDirsheaderdefFileheaderFilterOnly	extraOptsheaders
allHeaders
linkerOptsdefaultSourceSetpeerNpmoptionalNpmapidevNpmnpmlanguageSettingsaddCustomSourceFilesExtensionsrequiresVisibilityOfembedBitcodeifMadePublic
makePublicwhenPublicationAssignedassignMavenPublicationrefines#nativeMetadataCompilationPluginDataplatformCompilationPluginDatametadataCompilationPluginDatapluginDataOrNullcommonPluginArtifactnativePluginArtifactgetChosenVariantresolveDependencyresolveDependencyGraphgetChosenFragmentsforNativeMetadataCompilationforMetadataCompilationforPlatformCompilationfindRefiningFragmentsvariantsContainingFragmentfromMatchingVariantsKotlinToolingVersiontoKotlinToolingVersioncreateResultSetwithClosurewithLinearClosurelinearClosure	closureTocreateDequeuecreateInputsMapbyValueOrNullisErrorLikeensureParentDirsCreated#compilerArgumentsConfigurationFlagshasAnnotationProcessorsqueryKaptVerbosePropertyfindClasspathChangesloadPreviousSnapshotgetIncrementalChanges!checkAnnotationProcessorClasspathprocessLogMessageInternalprocessLogMessage%registerGeneratedJavaSourceForAndroidandroidVariantDatacomponent14component15component17component16parseFeaturesisInfoAsWarningsgetKaptConfigurationNamegetKaptStubsDirisIncludeCompileClasspathfindKaptConfigurationisUseWorkerApigetDslKaptApOptionsgetKaptGeneratedClassesDirfindPropertySafegetAPOptionsfindMainKaptConfigurationisKaptKeepKdocCommentsInStubsbuildOptionsForAptModegetKaptIncrementalDataDir+getKaptIncrementalAnnotationProcessingCacheisIncrementalKapt getKaptGeneratedKotlinSourcesDirgetBooleanOptionValuecreateKaptGenerateStubsTask%disableAnnotationProcessingInJavaTaskclassLoadersCacheSizecreateKaptKotlinTasktemporaryKaptDirectorygetKaptTaskNameisKaptVerbosegetKaptGeneratedSourcesDircreateAptConfigurationIfNeeded$disableClassloaderCacheForProcessorsprepareCompilerArguments*configureDefaultVersionsResolutionStrategyfindTestRunsByCompilationcustomizeKotlinDependenciesallNonProjectDependenciesisRelatedToAndroidTestSourceSet8excludeStdlibAndKotlinTestCommonFromPlatformCompilations#kotlinTestCapabilityForJvmSourceSetconfigureKotlinTestDependencytestFrameworkOfstdlibModuleForJvmCompilationschooseAndAddStdlibDependencykotlinDependencytryWithDependenciesIfUnresolved configureStdlibDefaultDependencyandroidMainSourceSetNameaddStdlibToKpmProjectnonProjectDependencies"reorderPluginClasspathDependenciesvisitJaranalyzeInputStreamvisitDirectorygetCommonResDirectoriesparseXmlgetVariantComponentNamesgetLayoutDirectoriesapplyExperimentalgetApplicationPackagemaybeAddfinalInternalNamegetHashesToAnalyzegetEmptySnapshotgetAllDataFilesloadAllwriteToCachecreateCurrentloadEntriesForfindAllImpactedsaveTogetBytesisAbigetPrivateTypesgetAbiTypes
rootOrSelfallOutputFilesmakeClassLoadermakeKeygetForSplitPathsgetForClassPath	flushLinestopNowshowSuppressedOutputwrapExecutegetConfiguredExecutionsconfigureAllExecutionsgetClassSnapshotGranularity%disableScriptDefinitionsFromClasspathscriptDefinitionsscriptDefinitionsClasspathscriptDefinitionscriptResolverEnvironmentdiscoverScriptExtensionsFiles-registerOnceDiscoverScriptExtensionsTransform&getDiscoveryClasspathConfigurationName)registerDiscoverScriptExtensionsTransform$getDiscoveryResultsConfigurationName configureDiscoveryTransformationconfigureForSourceSetgetServiceNamepatchStackTracecreateReportingNodegetSuiteNamereportCompletedensureNodesClosedextractExceptionClassName	beginTestrequireLeafreportStartedcheckReportingNodeCreatedoutputrequireLeafGroupmarkCompletedrequireReportingNodeprocessStackTraceendTestrequireLeafTest	cleanNamecollectParentsmarkStartedgetKonanCacheKindexitCodeFromProcessExitCodewriteArgumentsToFilecreateLoggingMessageCollector	logFinishrunToolInSeparateProcessloadCompilerVersiongetOrCreateSessionFlagFilegetDaemonConnectionImplnormalizeForFlagFilerunJsCompilerAsyncrunJvmCompilerAsyncrunMetadataCompilerAsyncsessionsDirjarForSourceSetclearBuildModulesInfobuildModulesInfocompileWithDaemonOrFallbackImpl incrementalCompilationWithDaemon#nonIncrementalCompilationWithDaemonreportSeveritycompileInProcessrequestedCompilationResultsreportCategoriescompileWithDaemoncompileInProcessImplcompileOutOfProcessGradleCliCommonizer3registerCommonizerClasspathConfigurationIfNecessarycompilerFullClasspathstartInterceptgetIsolatedClassLoaderrunInProcesstoPrettyStringescapeQuotesForWindowsescapeQuotes
runViaExec
annotationannotationstoCompilerArgargmodes
setModulesannotationProcessorsjavacOptionsgetJavacOptions	arguments	FrameworkLibraryFatFrameworkXCFrameworkfromPropertygetPluginArtifactForNativemavenPublicationremoveJsCompilerSuffixisDependentTaskOutOfDate
allOptionsgetAsTaskInputArgscomputeForSubpluginIdenableLanguageFeatureoptInavailableForcommon&shouldSerializeHasStableParameterNameswriteCompilerVersionRequirementallTypesFromSignaturewithNewMetDefinitelyNotNullTypegetContainingFileAnnotations	getFileIdappendPackageFragmentsserializedPackagesserializeMetadatagetSubPackagesFqNames	asLibraryserializeFilesmissingMetadatareadDescriptorsreadModuleAsProto
writeProtodeserializeVarsdeserializeLocalAliasdeserializeNoMetadatadeserializeParameterdeserializeJsImportedModuledeserializeStringdeserializeGlobalBlock
visibility
visitCatch	classKindserializeVarsserializeParameterserializeUnarytransformBranchesdebugFqNamegetBuiltInsFileNamegetBuiltInsFilePathtransformGetterparseCompilerMessagesFromReadersafeParseInt
charactersreportToCollectoruseConstructorMarkerreportInternalCompilerErrorprocessCompilerOutputreportTotalAndThreadPerfnewDaemonConnectionreportUnexpectedreportFromDaemontoAsynclaunchProcessWithFallbackfromCodedefaultArgumentStubVisibilitygetScopeOwnerSymbolinitializeIterationmatchIterablesocketCreatecreateServerSocketensureServerHostnameIsSetUpcreateSocketfindPortAndCreateRegistrywithMeasureBlockingconnectLoop	leaseImplconfigureClientOptionsisProcessAlivestartDaemontryFindSuitableDaemonOrNewOptsdetectCompilerClasspathincrementalCompileaddMeasurementbeginMeasureWallAndThreadTimesendMeasureWallTime%endMeasureWallAndThreadTimesAndMemorythreadCpuTimebeginMeasurethreadUserTimegetTotalCountersgetCountersbeginMeasureWallTime
usedMemoryendMeasureWallAndThreadTimeswithMeasure'beginMeasureWallAndThreadTimesAndMemorygetRuntimeStateFilesPath	orDefaultgetNamedSubphases	visitCalladdIdSignatureaddModuleReachableTopLevel deserializeReachableDeclarationsfileDeserializerssignatureDeserializerForFiledeserializeDeclaration!referencePropertyByLocalSignature'referenceSimpleFunctionByLocalSignatureserializeIrFiledeserializeIdSignaturevisitValueParameterserializePackageFragmentdigestconfigureDaemonJVMOptionsfindWithTransform
memToBytescompareDaemonJVMOptionsMemoryconfigureDaemonOptionsupdateMemoryUpperBounds
trimQuotestoArgsmemorywiseFitsIntodistinctStringsDigestmakeCompilerIdisDaemonEnabledfilterExtractPropsreportNotImplementedcreateSignatureBuilderreportUnexpectedDescriptorwalkDaemonsmakeRunFilenameString makePortFromRunFilenameExtractortryConnectToDaemonmakeAutodeletingFlagFile	md5DigestisClasspathFileloadVersionFromResourcemainImplgetBuildReporter
getValidId
isUnlinkedcomputeSignatureconfigureScriptingDaemonMessageReporterDaemonMessageReporterAsyncgetICReporterAsync generateSyntheticPartsBeforeBodyclassForInnerClassRecordaddInnerClassInfoFromAnnotationgenConstructorisLocalgenerateSyntheticPartsAfterBodypatchOpcodegenerateVararg
nowSecondsfireCompilationFinishedifAliveChecksImpltoAlivenessNamewithValidReplImplkbexecJsIncrementalCompilerwithValidClientOrSessionProxyonCompilationFinishedgetClientsFlagPaths	cleanDeadcleanMatchingcheckedCompilestartDaemonElectionsconfigurePeriodicActivitiesexecIncrementalCompilerexceptionLoggingTimerThread	addClientpostReleaseCompileSessionleaseSessioncleanDeadClientsifAliveChecksImplSuspendgracefulShutdownImplgenCall$createIntrinsicInExpressionGeneratorisIntrinsicInCall&createDestructuredPairForLoopGeneratorcreateInExpressionGeneratorgetBoundedValuecreateForLoopGenerator createForInReversedLoopGeneratorgetReadLocksCntscheduleShutdownImpl	afterLoop
beforeBody	afterBodyserverHandshakeregisterClientImplshutdownIfInactivecreateLoopTempVariableshutdownWithDelayImplincrementAndCheckPostConditionassignLoopParametersNextValuescheckClientCanReadFileisShutdownActionInProgressgetClientsImpl%storeProgressionParametersToLocalVarsassignToLoopParameter
beforeLoopcheckEmptyLoopfromBoundedValueWithStepMinus1fromBoundedValueWithStep1storeRangeStartAndEndserializableKotlinExternalModelKeymutableexternalModelTypeSignatureKotlinExternalModelTypeKotlinExternalModelIdnativecheckPreConditioncheckPostConditionAndIncrementgetPreviousTargetjumpIfGreaterOrEqualjumpIfLessOrEqualjumpIfGreaterjumpIfLessThanZero
jumpIfLesscondJumpgenJumpIfTruegenJumpIfFalsenewFieldvisitVarInsnvisitIincInsnhasFinallyBlocksmodificationDatetraverseAllDependenciesregisterVariantImplementationsgetMethodNodematchAllWithtrigger!addDependenciesToAndroidSourceSetkotlinSourceSetContainersetChildNodeByNamegetSingleChildValueOrNullvisitLineNumberreorderArgumentsIfNeededconfigureActioncopyAttributesToVariant&collectScopedDependenciesFromSourceSetgenValueAndPutexpandVariantKeys"getKotlinModuleFromComponentResultgetFieldForInlinenodeFromModulegetFieldNameForFolding
canProcessrememberClosurewhenPublicationShouldRegisterregisterNativeVariantFactorycopyOneAttributetoNativeBuildTypecheckReachableRecursivelyappendCompilationRecursivelysingularOrPluralcompilationWithTargetchooseCompilerAttribute"skipNotNullAssertionsForParametersbuildSrcExistswrapMethodVisitorgenerateBodygenInvokeInstructiongenerateImplprintBuildTimenumberOfAncestorsinvokeIntrinsic
toCallable
onAreEqual
onUnboxingonCompareToonMergeSuccessonMethodCallWithBoxedValueonNewBoxedValueonMergeFailtaintonUseAsTaintedprocessRefValueUsage	visitMaxsisAlivemarkControlFlowMergedef	mergeFromtraverseCfgternaryOperationvisitOpInsngetFramevisitControlFlowEdgeinitControlFlowAnalysistypeConstValue
arrayValue	longValueobjectValuemethodValue
floatValueintValue
shortValuealreadyResolved	byteValueshouldSkipField	charValuesetComponentaaLoadValuedoubleValueuninitializedValuenaryOperationvisitLookupSwitchInsnNodemergeControlFlowEdgeresolveRecursivelyvisitJumpInsnNode
initLocalsgetIvyDependencycheckAssertionsinitMergeNodesvisitTableSwitchInsnNode#computeExceptionHandlersForEachInsnprocessFailedBrowsersparseConsoleuninitializediincstartedcanBeBuiltOnHostsconfigureFatFrameworkstringCoordinatesconfigureConfiguration
staticNameklibsprocessModulecreateDescriptorcreateDescriptorAndNewBuiltInscreateSyntheticPackageFragments"createDeserializedPackageFragmentscreateCachedPackageFragments
findMethodgetLibraryVariantNamescreateResolvedisLayoutDirectoryaddSourceSetAsVariant#createCachedPackageFragmentProvider
addVariantbinaryResultsDirDefault createDescriptorOptionalBuiltInsfilterRootsresolveWithDependencies	inputItemisProducedFromTheCompilationisKotlinTestRootDependencyreportAlreadyResolvedisAtLeast1_5handleSourceSetparentOrSelfgetFullResolvedListbytesToAppendmarkNeededForLink
getSettingparseCommonizerDependency'parseTargetedCommonizerDependencyOrNullsetTo
base64HashensureMaxFileNameLengthresolveCommonizedDirectoryCliCommonizerresolveDescriptorForType isCommonizerTargetIdentityStringtokenizeIdentityStringbuildCommonizerTargetparseCommonizerTargetOrNull
zeroOrMore	nextTokenanyOfparseCommonizerTargetignore	allLeaveswithAllLeavesCommonizerTargetisComponentLikemakeDefaultSnippetIdentifierrunInCoroutineContextcreateComponentNamerefineBeforeEvaluation!refineConfigurationBeforeEvaluateenableScriptsInstancesSharingrefineBeforeCompilingrefineOnAnnotationsbeforeCompilingbeforeParsingrefineBeforeParsingsimpleRefineImplonAnnotationsgetComponentIndexgetEvaluationContextwithDefaultsFromvalueOrmakeFailureResultmapSuccessImplasErrorDiagnosticsvalueOrThrowmapNotNullSuccess
mapSuccessflatMapSuccess	asSuccessinternalScriptingRunSuspendfilterByAnnotationTypegetMergedScriptText!cleanContentPreservingLinesLayoutgetTemplateClass!constructCompilationConfiguration)createEvaluationConfigurationFromTemplatepropertiesFromTemplate"createScriptDefinitionFromTemplate constructEvaluationConfigurationconstructHostConfigurationscriptConfigInstance*createCompilationConfigurationFromTemplategetPlatformClassLoadervisitAnonymousInitializerregisterExtensionIfRequired!withClassloadingProblemsReportinggetNoDefault
getOrErrorreplaceOnlyDefaultputIfNotNullvisitClassOrObjectkeyCopyvisitDeclarationputIfAnykeyvisitEnumEntrydoEvalinvalidScriptcheckBoundsconfigureScriptDefinitionsmakeCompiledModulegetScriptKtFile!withMessageCollectorAndDisposablewithMessageCollectormakeCompiledScriptmakeOtherScriptsparseServiceFileLineprocessPluginsCommandLineloadServicesreportArgumentsIgnoredGenerallyreportInvalidArguments$reportArgumentsIgnoredFromRefinementcheckBoundsOfExpandedTypeAliastoScriptingSeverityreportArgumentsNotAllowedcreateCompilationStategenerateWithBackendIrgenerateWithOldBackend&updateConfigurationWithPreviousScripts!updateResolutionFilterWithHistorygetCompilationStateinitializeCompilationwithScriptCompilationCache(registerPackageFragmentProvidersIfNeeded createIsolatedCompilationContextupdateWithCompilerOptionsupdateWithRefinedConfigurations"createInitialCompilerConfigurationapplyConfigure)collectRefinedSourcesAndUpdateEnvironment$withUpdatesFromCompilerConfiguration'createCompilationContextFromEnvironmentcreateInitialConfigurationsdumpClassescheckConsistentvisitTypeAliasvisitTypeParameterforceResolveImportforceResolveNonDefaultImportsonesplitCommand
oneCommanddoRunstrToSourceresetBufferIfNeeded
parseInputprintWithEscapingprintlnWithEscaping	doAnalyzesetDelegateFactoryrunAnalyzeraddNotoSourceCodegetNonDeclaredFunctionsanalyzeReplLine"analyzeReplLineWithImportedScriptsaddDelegateProvidersetScriptDefinitionssetScriptDefinitionsSourcescalculateRefinedConfigurationmakeScriptDefinition%collectScriptsCompilationDependenciesscriptFileNamewithCorrectExtensionasResolveFailuregetScriptContentsgetEnvironment"loadContentsAndResolveDependenciesconstructAnnotationorAnonymousevaluateToConstantArrayValueannotationTypegetNonDeclaredClassesgetScriptProvidedPropertiesgetPriority%getScriptProvidedPropertiesParametersresultFieldNamecreateScopesHolderForClassfindTypeDescriptorgetOuterScopegetImplicitReceiversParametersreportErrorString1errorKtFile getExplicitConstructorParametersisReplScriptgetResultValue%getEarlierScriptsConstructorParameteradjustByDefinitiongetCanonicalPathgetScriptCollectedData	constructmakeScriptContentsoffsetToPosition$refineScriptCompilationConfigurationadditionalClasspathloadAnnotationstoKtFileSourceconvertPositiondoCreateIndexsameSignatureresolverFromAnnotationinstantiateResolvergetResolveFunctionstakeUnlessErrorloadAnnotationsFromClasstypeInSystemgetScriptDependenciesgetScriptConfigurationgetReferencedDescriptorgetScriptingHostConfigurationnonScriptIdpartitionLoadDefinitions scriptTemplatesDiscoverySequence$discoverScriptTemplatesInClassLoaderpartitionLoadDirDefinitionspartitionLoadJarDefinitions"discoverScriptTemplatesInClasspathloadScriptDefinition loadScriptTemplatesFromClasspathpartitionMapNotNull
getDefaultasLegacyOrNullisKotlinFileTypeisNonScriptgetServiceIfCreatedvalueOrError"findScriptCompilationConfigurationrunCompiledScriptverifyHistoryConsistencywithUpdatedClasspathupdateClasspathImpldependenciesFromClassContextdependenciesFromClassloaderdependenciesFromCurrentContextfilterNewClasspathgetOrPrepareShared$evalWithConfigAndOtherScriptsResultstryGetResourcePathForClassextractRoottoContainingJarOrNullgetResourceRootsplitJarUrltoFileOrNull tryGetResourcePathForClassByNamemapScriptReportsToDiagnosticstoDependencieshasInferredReturnTypeonCallArgumenttoClassPathOrEmptytoFilesOrEmpty
refineWith
printTraceopenFindResourceonTypeArgumentconstraintErroropenFindResourcesonCallsingleClassLoaderonCallArgumentSpreadgetOrCreateActualClassloadercreateScriptFromClassLoaderscriptMetadataPathrecursiveClassPathcopyWithoutModulemakeClassLoaderFromDependenciesrecursiveScriptsSeqgetCompiledModulecalcAbsolutedetermineSepfindNthtoSourceCodePositiontoValidJvmIdentifierforAllMatchingFilesInJarforAllMatchingFilesInDirectorytoUniversalSeparatoriterateResourcesnamePatternToRegexforAllMatchingFilesInJarStreamforAllMatchingFilesforAllMatchingFilesInJarFilemapToLegacyExpectedLocationsmapLegacyExpectedLocationsmapLegacyScriptPositionmapLegacyDiagnosticSeveritymapToDiagnosticsmapToLegacyReportsmapToLegacyScriptReportPositionmapToLegacyScriptReportSeveritythrowIllegalSchemaVersionparseStringOrThrowtakeIfContainsAnygetExplicitLibclasspathFromClasspathPropertyhasParentNamedtakeIfContainsAlltoValidClasspathFileOrNull classPathFromTypicalResourceUrlsclasspathFromFQNisValidClasspathFileclasspathFromClassgetParentsForNewClassLoaderfindCompilerClasspath%scriptCompilationClasspathFromContextgetParentsForOldClassLoader-scriptCompilationClasspathFromContextOrStdlib classPathFromGetUrlsMethodOrNullclasspathFromClassloaderfilterIfContainsAllrawClassPathFromKeyResourcePath+scriptCompilationClasspathFromContextOrNullgetLibmatchMaybeVersionedFileunpackJarCollectiontakeAndFiltergetParentClassLoadersallRelatedClassLoadersthrowInvalidtoJsonArraytoAndroidExtrasOrThrowtoKotlinToolingMetadataOrThrowtoTargetMetadataOrThrowparseJsonOrThrowtoJsonObjecttoJvmExtrasOrThrowtoJsonStringtoJsExtrasOrThrowtoProjectSettingsOrThrowtoNativeExtrasOrThrowtoTargetMetadataExtrasOrThrow
onCallNameonTypeArgumentsonExplicitReceiveronCallReceiveronCallArgumentNamesetAnalyzedResultssetCandidateDescriptorsimpleProcessrecordLookupstransformCandidate(reportAdditionalDiagnosticIfNoCandidatesfactoryForVariablefactoryForInvokegetImplicitReceiver containsOnlyOnlyInputTypesErrorsargumentToParameterMapsetResultingSubstitutorupdateExtensionReceiverTypeupdateContextReceiverTypesupdateDispatchReceiverTypegetResolvedCallhasCannotCaptureTypesErrorhasUnknownParametershasConflictingConstraintshasErrorInConstrainingTypeshasOnlyErrorsDerivedFrom2hasTypeParameterWithUnsatisfiedOnlyInputTypesErrorisSuccessful"hasTypeInferenceIncorporationErrorhasViolatedUpperBoundhasParameterConstraintErrorfixVariablesgetTypeBoundsaddBound"asConstraintSystemCompleterContextrunTransactionmarkPostponedVariableregisterVariableasReadOnlyStorageunmarkPostponedVariablesubstituteFixedVariables#asPostponedArgumentsAnalyzerContextremovePostponedVariablesgetProperSuperTypeConstructorsisPostponedTypeVariable2getBuiltFunctionalExpectedTypeForPostponedArgumentcurrentStorage2putBuiltFunctionalExpectedTypeForPostponedArgument3markCouldBeResolvedWithUnrestrictedBuilderInferenceaddInitialConstraintaddConstraintaddMissedConstraints%containsOnlyFixedOrPostponedVariables/couldBeResolvedWithUnrestrictedBuilderInferencecontainsOnlyFixedVariablesprocessForkConstraintsisProperTypeForFixationaddUpperConstraintisMyTypeVariableaddEqualityConstraintaddLowerConstraintaddNewIncorporatedConstraintgetTypeVariablegetConstraintsForVariablegetNestedTypeVariablesisInfixCallgetLhsResult"isSuperOrDelegatingConstructorCalladdSubtypeConstraintaddOtherSystemcanBeProperbuildCurrentSubstitutor,buildNotFixedVariablesToStubTypesSubstitutor
getBuilderconvertParameterType&conversionIsNeededBeforeSubtypingCheckconversionDefinitelyNotNeeded%conversionIsNeededAfterSubtypingCheckdecrementAndGetaddCompatibilityWarningaddResolvedKtPrimitivefindSegmentAndMoveForwardmoveForwardaddConditionallygetSubResolvedAtomscreateDataFlowValueForProperty$createDataFlowValueForStableReceivergetStableTypesgetCollectedNullabilitygetStableNullability	disequatekotlinCompilerClasspathclearValueInfokotlinCompilerPluginClasspath#testCompileOnlyDependenciesMetadatasourceArtifactscompileOnlyApigradlePlugin#kotlinNativeCompilerPluginClasspathtestKotlinScriptDefExtensionstestKotlinScriptDefkotlinTestRegistryruntimeOnlyDependenciesMetadatatestApi!kotlinCompilerPluginClasspathMain!kotlinCompilerPluginClasspathTestkotlinScriptDef&testImplementationDependenciesMetadataapiDependenciesMetadatakotlinKlibCommonizerClasspath"implementationDependenciesMetadatasamWithReceiver$testIntransitiveDependenciesMetadata intransitiveDependenciesMetadatatestApiDependenciesMetadatacompileOnlyDependenciesMetadata#testRuntimeOnlyDependenciesMetadataestablishSubtypingkotlinScriptDefExtensionsequategetCollectedTypesvisitNamedFunctionaddVariableDescriptoraddFunctionDescriptoraddClassifierDescriptorcheckBeforeAddingToScopetakeSnapshotgetContributedPackagecomputeImportedNamesprintStructurediagnosticForvisitExpressiongetSuppressionAnnotationsgetBaseClassTypeisInQualifiedNewgetBaseClassReferencegetEnumConstantgetOrCreateInitializingClassgetArgumentListgetInitializingClassresolveMethodresolveMethodGenerics	getMirrorfindDeclarationInCompiledFilecomputeConstantValuesetInitializergetInitializerhasInitializergetAllInnerClassesgetOwnInnerClassesgetExtendsListgetImplementsListTypesisInheritorgetInterfacesgetOwnFieldsgetInitializersprocessDeclarations	getRBracegetInnerClassesfindInnerClassByNamegetOwnMethodsisInheritorDeepgetImplementsListgetVisibleSignaturesisAnnotationType	getLBrace	getSupershasModifierProperty	isVarArgsgetThrowsListgetNameIdentifiergetDocCommentfindDeepestSuperMethods(findSuperMethodSignaturesIncludingStaticgetParameterListgetDefaultValuefindSuperMethodsgetHierarchicalMethodSignaturegetReturnTypeElementisConstructorfindDeepestSuperMethodresolveDeclarationsInFacadegetStubBuildercreateFileViewProviderbuildDecompiledTextindexDescriptorcreateTypeAliasesStubscreateModifierListStubbuildFileStubgetStubVersionmodulesWhoseInternalsAreVisibledescriptorForModulediagnoseUnknownModuleInfosdkDependencybuiltInsForModuletryGetResolverForModuleresolverForModuleDescriptormoduleInfoForModuleDescriptormodulesContentreportUnresolvedWithTargetreportDynamicCallreportMissingUnresolvedreportElementWithErrorTypeenhanceInferenceCompatibilitycreateDiagnosticisLocalClassNamegetQualifiedClassNameregisterClashResolversregisterDescriptorsresolveMultiplegetRegistrationsinvokeWithConstantinvokeWithReturningEffects	isImpliesinvokeWithArgumentsdoInvocation
visitEqualvisitConstantvisitIsvisitVariablevisitLambdavisitReceivervisitNotbooleanValuevisitKtElementtryParseEffect
getFunctortryInterpretvisitBooleanVariableReferenceinterpretConstantregisterExtensionPoint"interceptFunctionLiteralDescriptorinterceptTypeinterceptFunctionCandidates"interceptResolvedCallAtomCandidateinterceptVariableCandidatescontainsPropertyWithNamegetPropertyTypeByNamevisibleFromPackagehasSyntaxErrorsmarkElementmarkSingleElement	markRangechooseFactoryongetFileClassInternalNamemarkKtDiagnostic firstNonCommentNonAnnotationLeafgetElementToMarkmarkModifiercommaSeparatedvisitPropertyvisitConstructorsetupJarDependenciespreBuildHookadditionalDirtyLookupSymbols%performWorkAfterSuccessfulCompilationrunWithNoDirtyKotlinSourcesupdateCachesmakeServicesadditionalDirtyFilesrunCompilercalculateSourcesToCompileImplcreateCacheManagerdestinationDircheckProtoChangesshouldGoToNextRoundsnapshotvisitVariableReferencegetStringIndexgetLocalClassIdReplacementvalueParameterignoreAnnotationvariancevisitFunctionvisitBinaryExpression
visitBlockcomponent18component19createCompResultsshutdownCompileServiceconnectAndLeaseconnectToCompileService)incrementalDataProvider_getHeaderMetadatahasIncrementalResultsConsumerinlineConstTracker_reporthasInlineConstTrackerexpectActualTracker_report1incrementalResultsConsumer_processInlineFunctions1incrementalResultsConsumer_processPackageMetadata*incrementalDataProvider_getPackageMetadata(incrementalResultsConsumer_processHeader*incrementalDataProvider_getMetadataVersionhasIncrementalDataProvider/incrementalDataProvider_getCompiledPackagePartshasExpectActualTracker-incrementalResultsConsumer_processPackagePartlookupTracker_isDoNothingincrementalCache_close1incrementalCache_getObsoleteMultifileClassFacadeshasLookupTrackerlookupTracker_record(incrementalCache_getMultifileFacadePartshasCompilationCanceledStatushasIncrementalCaches!incrementalCache_getClassFilePath(incrementalCache_getObsoletePackagePartslookupTracker_requiresPosition%incrementalCache_getModuleMappingData#incrementalCache_getPackagePartData'compilationCanceledStatus_checkCanceledincrementalCache_registerInlinetoClienttoRMIafterhistoryResetTohistoryReset
historyGetgetHistorySizecreateRemoteStatewithValidReplStateawaitServerRunrunSynchronizedgetCompileServiceAndPortrunCompileServicecancelOnErrormsremoteCompileremoteIncrementalCompileremoteReplLineEvalremoteReplLineCheckremoteReplLineCompilewithValidReplgetDaemonJVMOptionscheckCompilerIdshutdownNowshutdownWithDelayperiodicAndAfterSessionCheckclassesFqNamesByFilesleaseCompileSessiongracefulShutdownregisterClientifAliveExclusiveifAliveshutdownIfIdlegetDaemonInfoifAliveExclusiveUnitifAliveUnitclearJarCachereleaseReplSession
getClients	replCheckgetDaemonOptionsreplCreateStatembleaseReplSessioncreateCompileServicesinitiateElectionsperiodicSeldomCheckreplCompilegetUsedMemorygetKotlinVersionscheduleShutdownreleaseCompileSessioncopyAttributecommonizeLibrariescreateScriptEvaluatorsetupScriptConfigurationcreateEnvironmentplatformEvaluationConfigurationcreateScriptCompilertoCompilerMessageSeveritycontainsFilegetAllDeclaredSubPackagesflushHistorynotifyIncompletenotifyReadLineEndoutputCommandResultsendInternalErrorReportprintlnWelcomeMessageoutputCompileErrorprintlnHelpMessagenotifyCommandSuccessnotifyReadLineStartoutputRuntimeErrorcreateFileScopesprepareForAnalyzecreateDiagnosticHolderattachReportsgetNonDeclaredPropertiesgetScriptConfigurationResultgetScriptNamegetScriptingClassgetDefaultScriptDefinitionfindScriptDefinitiongetKnownFilenameExtensionsfindDefinitiongetDefaultDefinitiontoScriptSourceresolveAsyncgetResourceAsStreamfindResourcefindResourcescreateClassLoaderwasmjsfindTestgetTestgetStaticLibfindSharedLibfindExecutablefindStaticLibgetSharedLibgetFrameworkgetExecutablefindFramework
jsInternalfillDefaultValuesupdateArgumentsregisterDependencyResolverbuildIdeaKotlinProjectModelregisterDependencyTransformerregisterDependencyEffectkeepcallCompilerAsynccleanDir%addCommonSourceSetToPlatformSourceSetnamedSourceSetsContainer
rewritePomgetCoordinatesgetSourceSetCInteropMetadatagetSourceSetCompiledMetadataconfigurationToResolvesetupPublicationForModule getSourcesForFragmentCompilation&getCommonSourcesForFragmentCompilationgetForCurrentBuildresolvableMetadataConfigurationgetProjectStructureMetadatatoModuleDependency	attributedefaultSourceFolderdisambiguateNameapplyConfigurationprintToaddRowkotlinDebug
kotlinInfo
kotlinWarncreateBinariesconfigureOptionswhenBrowserConfiguredwhenNodejsConfiguredconfigureLibraryaddLinkOptionsnodejsbrowseruseCommonJspackageJsonmakeNodeModulebuildImportedPackageresolveRootProjectpreparedFilesprepareRootProjectdependencyKey createCompilationResolverPluginshookDependenciesexecuteSetupuseMochacreateAdapterJsappendFromConfigDirproduceExecutabletestTaskdistributiondceTaskrunTaskwebpackTaskconfigureRuncommonWebpackConfigconfigureDefaultTestFrameworkprintWarningbuildDependencies	setupRepocreateDependencyaddArgsaddArgaddArgIfNotNullcreateTestExecutionSpec!getNativeDistributionDependenciesisCachedfindInteropsGroupgetCommonizerTargetconfigureTargetreportFailureregisterTestTaskfinalizeConfigurationsetupCompilerArgscreateCompilerArgsrunningFailurecreateClientdoTransformparseExceptionprintNonTestOutputregularTextserviceMessagetoStringRepresentationaddValuerunCompilerAsyncgetOrCreateClientFlagFilegetCustomJvmArgstransformArgscheckClasspathexplicitApiWarningexplicitApikotlinOptionsaddPluginArgumentsetExecutionSourceFrom	dependsOn	anonymizeanonymizeOnIdeSizesha256anonymizeComponentVersionlistProfileFilesisBuildSessionStartedcloseTrackingFileunlockJournalFilestartBuildSessionfinishBuildSessioninitTrackingFileapplyIfLongfromStringRepresentationnewMetricContainerprocessProjectNamegetProjectHash	getMetric                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          